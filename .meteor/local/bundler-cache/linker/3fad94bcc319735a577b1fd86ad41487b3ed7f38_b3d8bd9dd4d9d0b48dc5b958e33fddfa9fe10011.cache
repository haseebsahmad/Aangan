[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar FS = Package['cfs:base-package'].FS;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar DDP = Package['ddp-client'].DDP;\nvar EJSON = Package.ejson.EJSON;\nvar EventEmitter = Package['raix:eventemitter'].EventEmitter;\nvar Mongo = Package.mongo.Mongo;\n\n/* Package-scope variables */\nvar _storageAdapters;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/cfs_storage-adapter/storageAdapter.client.js                         //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\n/* global FS, _storageAdapters:true, EventEmitter */\n\n// #############################################################################\n//\n// STORAGE ADAPTER\n//\n// #############################################################################\n\n_storageAdapters = {};\n\nFS.StorageAdapter = function(name, options, api) {\n  var self = this;\n\n  // Check the api\n  if (typeof api === 'undefined') {\n    throw new Error('FS.StorageAdapter please define an api');\n  }\n\n  // store reference for easy lookup by name\n  if (typeof _storageAdapters[name] !== 'undefined') {\n    throw new Error('Storage name already exists: \"' + name + '\"');\n  } else {\n    _storageAdapters[name] = self;\n  }\n\n  // extend self with options and other info\n  FS.Utility.extend(this, options || {}, {\n    name: name\n  });\n\n  // XXX: TODO, add upload feature here...\n  // we default to ddp upload but really let the SA like S3Cloud overwrite to\n  // implement direct client to s3 upload\n\n};\n\nFS.StorageAdapter.prototype = new EventEmitter();\n\n///////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"cfs:storage-adapter\");\n\n})();\n","servePath":"/packages/cfs_storage-adapter.js"}]