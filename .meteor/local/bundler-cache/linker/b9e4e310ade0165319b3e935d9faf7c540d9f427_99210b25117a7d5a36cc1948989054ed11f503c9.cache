[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar FS = Package['cfs:base-package'].FS;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////\n//                                                                         //\n// packages/cfs_filesystem/packages/cfs_filesystem.js                      //\n//                                                                         //\n/////////////////////////////////////////////////////////////////////////////\n                                                                           //\n(function () {\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/cfs:filesystem/filesystem.client.js                      //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n// On the client we have just a shell                                // 1\nFS.Store.FileSystem = function(name, options) {                      // 2\n  var self = this;                                                   // 3\n  if (!(self instanceof FS.Store.FileSystem))                        // 4\n    throw new Error('FS.Store.FileSystem missing keyword \"new\"');    // 5\n                                                                     // 6\n  return new FS.StorageAdapter(name, options, {                      // 7\n    typeName: 'storage.filesystem'                                   // 8\n  });                                                                // 9\n};                                                                   // 10\n                                                                     // 11\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n/////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"cfs:filesystem\");\n\n})();\n","servePath":"/packages/cfs_filesystem.js"}]