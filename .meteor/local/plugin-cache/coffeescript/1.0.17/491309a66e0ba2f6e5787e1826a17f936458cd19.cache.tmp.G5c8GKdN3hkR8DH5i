{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar NOOP, Throttle, _insts, bound, cp, events, fileType, formatFleURL, fs, nodePath, rcp, request;                 \n\nNOOP = function() {};\n\nif (Meteor.isServer) {\n\n  /*\n  @summary Require NPM packages\n   */\n  fs = Npm.require('fs-extra');\n  events = Npm.require('events');\n  request = Npm.require('request');\n  Throttle = Npm.require('throttle');\n  fileType = Npm.require('file-type');\n  nodePath = Npm.require('path');\n\n  /*\n  @var {object} bound - Meteor.bindEnvironment (Fiber wrapper)\n   */\n  bound = Meteor.bindEnvironment(function(callback) {\n    return callback();\n  });\n}\n\n\n/*\n@private\n@name _insts\n@summary Object of FilesCollection instances\n */\n\n_insts = {};\n\n\n/*\n@private\n@name rcp\n@param {Object} obj - Initial object\n@summary Create object with only needed props\n */\n\nrcp = function(obj) {\n  var o;\n  o = {\n    currentFile: obj.currentFile,\n    search: obj.search,\n    collectionName: obj.collectionName,\n    downloadRoute: obj.downloadRoute,\n    chunkSize: obj.chunkSize,\n    debug: obj.debug,\n    _prefix: obj._prefix\n  };\n  return o;\n};\n\n\n/*\n@private\n@name cp\n@param {Object} to   - Destination\n@param {Object} from - Source\n@summary Copy-Paste only needed props from one to another object\n */\n\ncp = function(to, from) {\n  to.currentFile = from.currentFile;\n  to.search = from.search;\n  to.collectionName = from.collectionName;\n  to.downloadRoute = from.downloadRoute;\n  to.chunkSize = from.chunkSize;\n  to.debug = from.debug;\n  to._prefix = from._prefix;\n  return to;\n};\n\n\n/*\n@locus Anywhere\n@class FilesCollection\n@param config           {Object}   - [Both]   Configuration object with next properties:\n@param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n@param config.schema    {Object}   - [Both]   Collection Schema\n@param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - [Both]   If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n@param config.storagePath    {String}  - [Server] Storage path on file system\n@param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n@param config.throttle       {Number}  - [Server] bps throttle threshold\n@param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n@param config.collectionName {String}  - [Both]   Collection name\n@param config.namingFunction {Function}- [Both]   Function which returns `String`\n@param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n@param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n@param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n@param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n@param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n@param config.onbeforeunloadMessage {String|Function} - [Client] Message shown to user when closing browser's window or tab while upload process is running\n@summary Create new instance of FilesCollection\n */\n\nFilesCollection = (function() {\n  var FileUpload, UploadInstance;\n\n  FilesCollection.prototype.__proto__ = (function() {\n    if (Meteor.isServer) {\n      return events.EventEmitter.prototype;\n    } else {\n      return EventEmitter.prototype;\n    }\n  })();\n\n  function FilesCollection(config) {\n    var _methods, cookie, self;\n    if (Meteor.isServer) {\n      events.EventEmitter.call(this);\n    } else {\n      EventEmitter.call(this);\n    }\n    if (config) {\n      this.storagePath = config.storagePath, this.collectionName = config.collectionName, this.downloadRoute = config.downloadRoute, this.schema = config.schema, this.chunkSize = config.chunkSize, this.namingFunction = config.namingFunction, this.debug = config.debug, this.onbeforeunloadMessage = config.onbeforeunloadMessage, this.permissions = config.permissions, this.allowClientCode = config.allowClientCode, this.onBeforeUpload = config.onBeforeUpload, this.integrityCheck = config.integrityCheck, this[\"protected\"] = config[\"protected\"], this[\"public\"] = config[\"public\"], this.strict = config.strict, this.downloadCallback = config.downloadCallback, this.cacheControl = config.cacheControl, this.throttle = config.throttle, this.onAfterUpload = config.onAfterUpload, this.interceptDownload = config.interceptDownload, this.onBeforeRemove = config.onBeforeRemove;\n    }\n    self = this;\n    cookie = new Cookies();\n    if (this.debug == null) {\n      this.debug = false;\n    }\n    if (this[\"public\"] == null) {\n      this[\"public\"] = false;\n    }\n    if (this[\"protected\"] == null) {\n      this[\"protected\"] = false;\n    }\n    if (this.chunkSize == null) {\n      this.chunkSize = 1024 * 512;\n    }\n    this.chunkSize = Math.floor(this.chunkSize / 8) * 8;\n    if (this[\"public\"] && !this.downloadRoute) {\n      throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"]: \\\"downloadRoute\\\" must be explicitly provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal on be inside of your web/proxy-server (relative) root.\");\n    }\n    if (this.downloadRoute == null) {\n      this.downloadRoute = '/cdn/storage';\n    }\n    this.downloadRoute = this.downloadRoute.replace(/\\/$/, '');\n    if (this.collectionName == null) {\n      this.collectionName = 'MeteorUploadFiles';\n    }\n    if (this.namingFunction == null) {\n      this.namingFunction = function() {\n        return Random.id();\n      };\n    }\n    if (this.onBeforeUpload == null) {\n      this.onBeforeUpload = false;\n    }\n    if (this.allowClientCode == null) {\n      this.allowClientCode = true;\n    }\n    if (this.interceptDownload == null) {\n      this.interceptDownload = false;\n    }\n    if (Meteor.isClient) {\n      if (this.onbeforeunloadMessage == null) {\n        this.onbeforeunloadMessage = 'Upload in a progress... Do you want to abort?';\n      }\n      delete this.strict;\n      delete this.throttle;\n      delete this.storagePath;\n      delete this.permissions;\n      delete this.cacheControl;\n      delete this.onAfterUpload;\n      delete this.integrityCheck;\n      delete this.downloadCallback;\n      delete this.interceptDownload;\n      delete this.onBeforeRemove;\n      if (this[\"protected\"]) {\n        if (!cookie.has('meteor_login_token') && Meteor._localStorage.getItem('Meteor.loginToken')) {\n          cookie.set('meteor_login_token', Meteor._localStorage.getItem('Meteor.loginToken'), null, '/');\n        }\n      }\n      check(this.onbeforeunloadMessage, Match.OneOf(String, Function));\n    } else {\n      if (this._writableStreams == null) {\n        this._writableStreams = {};\n      }\n      if (this.strict == null) {\n        this.strict = true;\n      }\n      if (this.throttle == null) {\n        this.throttle = false;\n      }\n      if (this.permissions == null) {\n        this.permissions = parseInt('644', 8);\n      }\n      if (this.cacheControl == null) {\n        this.cacheControl = 'public, max-age=31536000, s-maxage=31536000';\n      }\n      if (this.onBeforeRemove == null) {\n        this.onBeforeRemove = false;\n      }\n      if (this.onAfterUpload == null) {\n        this.onAfterUpload = false;\n      }\n      if (this.integrityCheck == null) {\n        this.integrityCheck = true;\n      }\n      if (this.downloadCallback == null) {\n        this.downloadCallback = false;\n      }\n      if (this[\"public\"] && !this.storagePath) {\n        throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"] \\\"storagePath\\\" must be set on \\\"public\\\" collections! Note: \\\"storagePath\\\" must be equal on be inside of your web/proxy-server (absolute) root.\");\n      }\n      if (this.storagePath == null) {\n        this.storagePath = \"assets/app/uploads/\" + this.collectionName;\n      }\n      this.storagePath = this.storagePath.replace(/\\/$/, '');\n      this.storagePath = nodePath.normalize(this.storagePath);\n      fs.mkdirsSync(this.storagePath);\n      check(this.strict, Boolean);\n      check(this.throttle, Match.OneOf(false, Number));\n      check(this.permissions, Number);\n      check(this.storagePath, String);\n      check(this.cacheControl, String);\n      check(this.onAfterUpload, Match.OneOf(false, Function));\n      check(this.integrityCheck, Boolean);\n      check(this.onBeforeRemove, Match.OneOf(false, Function));\n      check(this.downloadCallback, Match.OneOf(false, Function));\n      check(this.interceptDownload, Match.OneOf(false, Function));\n    }\n    if (!this.schema) {\n      this.schema = {\n        size: {\n          type: Number\n        },\n        name: {\n          type: String\n        },\n        type: {\n          type: String\n        },\n        path: {\n          type: String\n        },\n        isVideo: {\n          type: Boolean\n        },\n        isAudio: {\n          type: Boolean\n        },\n        isImage: {\n          type: Boolean\n        },\n        isText: {\n          type: Boolean\n        },\n        isJSON: {\n          type: Boolean\n        },\n        _prefix: {\n          type: String\n        },\n        extension: {\n          type: String,\n          optional: true\n        },\n        _storagePath: {\n          type: String\n        },\n        _downloadRoute: {\n          type: String\n        },\n        _collectionName: {\n          type: String\n        },\n        \"public\": {\n          type: Boolean,\n          optional: true\n        },\n        meta: {\n          type: Object,\n          blackbox: true,\n          optional: true\n        },\n        userId: {\n          type: String,\n          optional: true\n        },\n        updatedAt: {\n          type: Date,\n          autoValue: function() {\n            return new Date();\n          }\n        },\n        versions: {\n          type: Object,\n          blackbox: true\n        }\n      };\n    }\n    check(this.debug, Boolean);\n    check(this.schema, Object);\n    check(this[\"public\"], Boolean);\n    check(this[\"protected\"], Match.OneOf(Boolean, Function));\n    check(this.chunkSize, Number);\n    check(this.downloadRoute, String);\n    check(this.collectionName, String);\n    check(this.namingFunction, Function);\n    check(this.onBeforeUpload, Match.OneOf(false, Function));\n    check(this.allowClientCode, Boolean);\n    if (this[\"public\"] && this[\"protected\"]) {\n      throw new Meteor.Error(500, \"[FilesCollection.\" + this.collectionName + \"]: Files can not be public and protected at the same time!\");\n    }\n    this.cursor = null;\n    this.search = {};\n    this.collection = new Mongo.Collection(this.collectionName);\n    this.currentFile = null;\n    this._prefix = SHA256(this.collectionName + this.downloadRoute);\n    _insts[this._prefix] = this;\n    this.checkAccess = function(http) {\n      var rc, result, text, user, userFuncs, userId;\n      if (self[\"protected\"]) {\n        user = false;\n        userFuncs = self.getUser(http);\n        user = userFuncs.user, userId = userFuncs.userId;\n        user = user();\n        if (_.isFunction(self[\"protected\"])) {\n          result = http ? self[\"protected\"].call(_.extend(http, userFuncs), self.currentFile || null) : self[\"protected\"].call(userFuncs, self.currentFile || null);\n        } else {\n          result = !!user;\n        }\n        if ((http && result === true) || !http) {\n          return true;\n        } else {\n          rc = _.isNumber(result) ? result : 401;\n          if (self.debug) {\n            console.warn('[FilesCollection.checkAccess] WARN: Access denied!');\n          }\n          if (http) {\n            text = 'Access denied!';\n            http.response.writeHead(rc, {\n              'Content-Length': text.length,\n              'Content-Type': 'text/plain'\n            });\n            http.response.end(text);\n          }\n          return false;\n        }\n      } else {\n        return true;\n      }\n    };\n    this.methodNames = {\n      MeteorFileAbort: \"MeteorFileAbort\" + this._prefix,\n      MeteorFileWrite: \"MeteorFileWrite\" + this._prefix,\n      MeteorFileUnlink: \"MeteorFileUnlink\" + this._prefix\n    };\n    if (Meteor.isServer) {\n      this.on('handleUpload', this.handleUpload);\n      this.on('finishUpload', this.finishUpload);\n      WebApp.connectHandlers.use(function(request, response, next) {\n        var _file, http, params, uri, uris, version;\n        if (!self[\"public\"]) {\n          if (!!~request._parsedUrl.path.indexOf(self.downloadRoute + \"/\" + self.collectionName)) {\n            uri = request._parsedUrl.path.replace(self.downloadRoute + \"/\" + self.collectionName, '');\n            if (uri.indexOf('/') === 0) {\n              uri = uri.substring(1);\n            }\n            uris = uri.split('/');\n            if (uris.length === 3) {\n              params = {\n                query: request._parsedUrl.query ? JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}') : {},\n                _id: uris[0],\n                version: uris[1],\n                name: uris[2]\n              };\n              http = {\n                request: request,\n                response: response,\n                params: params\n              };\n              if (self.checkAccess(http)) {\n                self.findOne(uris[0]).download.call(self, http, uris[1]);\n              }\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        } else {\n          if (!!~request._parsedUrl.path.indexOf(\"\" + self.downloadRoute)) {\n            uri = request._parsedUrl.path.replace(\"\" + self.downloadRoute, '');\n            if (uri.indexOf('/') === 0) {\n              uri = uri.substring(1);\n            }\n            uris = uri.split('/');\n            _file = uris[uris.length - 1];\n            if (_file) {\n              if (!!~_file.indexOf('-')) {\n                version = _file.split('-')[0];\n                _file = _file.split('-')[1].split('?')[0];\n              } else {\n                version = 'original';\n                _file = _file.split('?')[0];\n              }\n              params = {\n                query: request._parsedUrl.query ? JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}') : {},\n                file: _file,\n                _id: _file.split('.')[0],\n                version: version,\n                name: _file\n              };\n              http = {\n                request: request,\n                response: response,\n                params: params\n              };\n              self.findOne(params._id).download.call(self, http, version);\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        }\n      });\n      _methods = {};\n      _methods[self.methodNames.MeteorFileUnlink] = function(inst) {\n        var __inst, __instData, user, userFuncs;\n        check(inst, Object);\n        if (self.debug) {\n          console.info('[FilesCollection] [Unlink Method]');\n        }\n        if (self.allowClientCode) {\n          __instData = cp(_insts[inst._prefix], inst);\n          if (self.onBeforeRemove && _.isFunction(self.onBeforeRemove)) {\n            user = false;\n            userFuncs = {\n              userId: this.userId,\n              user: function() {\n                if (Meteor.users) {\n                  return Meteor.users.findOne(this.userId);\n                } else {\n                  return void 0;\n                }\n              }\n            };\n            __inst = self.find.call(__instData, inst.search);\n            if (!self.onBeforeRemove.call(userFuncs, __inst.cursor || null)) {\n              throw new Meteor.Error(403, '[FilesCollection] [remove] Not permitted!');\n            }\n          }\n          self.remove.call(__instData, inst.search);\n          return true;\n        } else {\n          throw new Meteor.Error(401, '[FilesCollection] [remove] Run code from client is not allowed!');\n        }\n      };\n      _methods[self.methodNames.MeteorFileWrite] = function(opts) {\n        var e, extension, extensionWithDot, fileName, isUploadAllowed, ref, result;\n        this.unblock();\n        check(opts, {\n          eof: Match.Optional(Boolean),\n          meta: Match.Optional(Object),\n          file: Object,\n          fileId: String,\n          binData: Match.Optional(String),\n          chunkId: Match.Optional(Number),\n          chunkSize: Number,\n          fileLength: Number\n        });\n        if (opts.eof == null) {\n          opts.eof = false;\n        }\n        if (opts.meta == null) {\n          opts.meta = {};\n        }\n        if (opts.binData == null) {\n          opts.binData = 'EOF';\n        }\n        if (opts.chunkId == null) {\n          opts.chunkId = -1;\n        }\n        if (self.debug) {\n          console.info(\"[FilesCollection] [Write Method] Got #\" + opts.chunkId + \"/\" + opts.fileLength + \" chunks, dst: \" + (opts.file.name || opts.file.fileName));\n        }\n        if (self.onBeforeUpload && _.isFunction(self.onBeforeUpload)) {\n          isUploadAllowed = self.onBeforeUpload.call(_.extend({\n            file: opts.file\n          }, {\n            userId: this.userId,\n            user: function() {\n              if (Meteor.users) {\n                return Meteor.users.findOne(this.userId);\n              } else {\n                return void 0;\n              }\n            }\n          }), opts.file);\n          if (isUploadAllowed !== true) {\n            throw new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : '@onBeforeUpload() returned false');\n          }\n        }\n        fileName = self.getFileName(opts.file);\n        ref = self.getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n        result = opts.file;\n        result.path = self.storagePath + \"/\" + opts.fileId + extensionWithDot;\n        result.name = fileName;\n        result.meta = opts.meta;\n        result.extension = extension;\n        result = self.dataToSchema(result);\n        result._id = opts.fileId;\n        if (this.userId) {\n          result.userId = this.userId;\n        }\n        if (opts.eof) {\n          try {\n            return Meteor.wrapAsync(self.handleUpload.bind(self, result, opts))();\n          } catch (_error) {\n            e = _error;\n            if (self.debug) {\n              console.warn(\"[FilesCollection] [Write Method] Exception:\", e);\n            }\n            throw e;\n          }\n        } else {\n          self.emit('handleUpload', result, opts, NOOP);\n        }\n        return result;\n      };\n      _methods[self.methodNames.MeteorFileAbort] = function(opts) {\n        var ext, path, ref;\n        check(opts, {\n          fileId: String,\n          fileData: Object,\n          fileLength: Number\n        });\n        ext = \".\" + opts.fileData.ext;\n        path = self.storagePath + \"/\" + opts.fileId + ext;\n        if (self.debug) {\n          console.info(\"[FilesCollection] [Abort Method]: For \" + path);\n        }\n        if ((ref = self._writableStreams) != null ? ref[opts.fileId] : void 0) {\n          self._writableStreams[opts.fileId].stream.end();\n          delete self._writableStreams[opts.fileId];\n          self.remove({\n            _id: opts.fileId\n          });\n          self.unlink({\n            _id: opts.fileId,\n            path: path\n          });\n        }\n        return true;\n      };\n      Meteor.methods(_methods);\n    }\n  }\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name finishUpload\n  @summary Internal method. Finish upload, close Writable stream, add recored to MongoDB and flush used memory\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype.finishUpload = Meteor.isServer ? function(result, opts, cb) {\n    var self;\n    fs.chmod(result.path, this.permissions, NOOP);\n    self = this;\n    result.type = this.getMimeType(opts.file);\n    result[\"public\"] = this[\"public\"];\n    this.collection.insert(_.clone(result), function(error, _id) {\n      if (error) {\n        return cb(new Meteor.Error(500, error));\n      } else {\n        result._id = _id;\n        if (self.debug) {\n          console.info(\"[FilesCollection] [Write Method] [finishUpload] -> \" + result.path);\n        }\n        self.onAfterUpload && self.onAfterUpload.call(self, result);\n        self.emit('afterUpload', result);\n        return cb(null, result);\n      }\n    });\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name handleUpload\n  @summary Internal method to handle upload process, pipe incoming data to Writable stream\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype.handleUpload = Meteor.isServer ? function(result, opts, cb) {\n    var _dKeys, _hlEnd, base, binary, e, name, ref, self, start;\n    self = this;\n    if (opts.eof) {\n      binary = opts.binData;\n    } else {\n      binary = new Buffer(opts.binData, 'base64');\n    }\n    try {\n      if (opts.eof) {\n        _hlEnd = function() {\n          self._writableStreams[result._id].stream.end();\n          delete self._writableStreams[result._id];\n          self.emit('finishUpload', result, opts, cb);\n        };\n        if ((ref = this._writableStreams[result._id].delayed) != null ? ref[opts.fileLength] : void 0) {\n          this._writableStreams[result._id].stream.write(this._writableStreams[result._id].delayed[opts.fileLength], function() {\n            return bound(function() {\n              delete self._writableStreams[result._id].delayed[opts.fileLength];\n              _hlEnd();\n            });\n          });\n        } else {\n          _hlEnd();\n        }\n      } else if (opts.chunkId > 0) {\n        if ((base = this._writableStreams)[name = result._id] == null) {\n          base[name] = {\n            stream: fs.createWriteStream(result.path, {\n              flags: 'a',\n              mode: this.permissions\n            }),\n            delayed: {}\n          };\n        }\n        _dKeys = Object.keys(this._writableStreams[result._id].delayed);\n        if (_dKeys.length) {\n          _.each(this._writableStreams[result._id].delayed, function(delayed, num) {\n            return bound(function() {\n              if (num < opts.chunkId) {\n                self._writableStreams[result._id].stream.write(delayed);\n                delete self._writableStreams[result._id].delayed[num];\n              }\n            });\n          });\n        }\n        start = opts.chunkSize * (opts.chunkId - 1);\n        if (this._writableStreams[result._id].stream.bytesWritten < start) {\n          this._writableStreams[result._id].delayed[opts.chunkId] = binary;\n        } else {\n          this._writableStreams[result._id].stream.write(binary);\n        }\n      }\n    } catch (_error) {\n      e = _error;\n      cb(e);\n    }\n  } : void 0;\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getMimeType\n  @param {Object} fileData - File Object\n  @summary Returns file's mime-type\n  @returns {String}\n   */\n\n  FilesCollection.prototype.getMimeType = function(fileData) {\n    var br, buf, error, ext, fd, mime, ref;\n    check(fileData, Object);\n    if (fileData != null ? fileData.type : void 0) {\n      mime = fileData.type;\n    }\n    if (Meteor.isServer && fileData.path && (!mime || !_.isString(mime))) {\n      try {\n        buf = new Buffer(262);\n        fd = fs.openSync(fileData.path, 'r');\n        br = fs.readSync(fd, buf, 0, 262, 0);\n        fs.close(fd, NOOP);\n        if (br < 262) {\n          buf = buf.slice(0, br);\n        }\n        ref = fileType(buf), mime = ref.mime, ext = ref.ext;\n      } catch (_error) {\n        error = _error;\n      }\n    }\n    if (!mime || !_.isString(mime)) {\n      mime = 'application/octet-stream';\n    }\n    return mime;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getFileName\n  @param {Object} fileData - File Object\n  @summary Returns file's name\n  @returns {String}\n   */\n\n  FilesCollection.prototype.getFileName = function(fileData) {\n    var cleanName, fileName;\n    fileName = fileData.name || fileData.fileName;\n    if (_.isString(fileName) && fileName.length > 0) {\n      cleanName = function(str) {\n        return str.replace(/\\.\\./g, '').replace(/\\//g, '');\n      };\n      return cleanName(fileData.name || fileData.fileName);\n    } else {\n      return '';\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getUser\n  @summary Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n   */\n\n  FilesCollection.prototype.getUser = function(http) {\n    var cookie, result, user;\n    result = {\n      user: function() {\n        return null;\n      },\n      userId: null\n    };\n    if (Meteor.isServer) {\n      if (http) {\n        cookie = http.request.Cookies;\n        if (_.has(Package, 'accounts-base') && cookie.has('meteor_login_token')) {\n          user = Meteor.users.findOne({\n            'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken(cookie.get('meteor_login_token'))\n          });\n          if (user) {\n            result.user = function() {\n              return user;\n            };\n            result.userId = user._id;\n          }\n        }\n      }\n    } else {\n      if (_.has(Package, 'accounts-base') && Meteor.userId()) {\n        result.user = function() {\n          return Meteor.user();\n        };\n        result.userId = Meteor.userId();\n      }\n    }\n    return result;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getExt\n  @param {String} FileName - File name\n  @summary Get extension from FileName\n  @returns {Object}\n   */\n\n  FilesCollection.prototype.getExt = function(fileName) {\n    var extension;\n    if (!!~fileName.indexOf('.')) {\n      extension = fileName.split('.').pop();\n      return {\n        ext: extension,\n        extension: extension,\n        extensionWithDot: '.' + extension\n      };\n    } else {\n      return {\n        ext: '',\n        extension: '',\n        extensionWithDot: ''\n      };\n    }\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name dataToSchema\n  @param {Object} data - File data\n  @summary Build object in accordance with schema from File data\n  @returns {Object}\n   */\n\n  FilesCollection.prototype.dataToSchema = function(data) {\n    return {\n      name: data.name,\n      extension: data.extension,\n      path: data.path,\n      meta: data.meta,\n      type: data.type,\n      size: data.size,\n      versions: {\n        original: {\n          path: data.path,\n          size: data.size,\n          type: data.type,\n          extension: data.extension\n        }\n      },\n      isVideo: !!~data.type.toLowerCase().indexOf('video'),\n      isAudio: !!~data.type.toLowerCase().indexOf('audio'),\n      isImage: !!~data.type.toLowerCase().indexOf('image'),\n      isText: !!~data.type.toLowerCase().indexOf('text'),\n      isJSON: !!~data.type.toLowerCase().indexOf('json'),\n      _prefix: data._prefix || this._prefix,\n      _storagePath: data._storagePath || this.storagePath,\n      _downloadRoute: data._downloadRoute || this.downloadRoute,\n      _collectionName: data._collectionName || this.collectionName\n    };\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name srch\n  @param {String|Object} search - Search data\n  @summary Build search object\n  @returns {Object}\n   */\n\n  FilesCollection.prototype.srch = function(search) {\n    if (search && _.isString(search)) {\n      this.search = {\n        _id: search\n      };\n    } else {\n      this.search = search || {};\n    }\n    return this.search;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - {fileName: '', type: '', size: 0, meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @summary Write buffer to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.write = Meteor.isServer ? function(buffer, opts, callback) {\n    var extension, extensionWithDot, fileName, path, randFileName, ref, result;\n    if (opts == null) {\n      opts = {};\n    }\n    if (this.debug) {\n      console.info(\"[FilesCollection] [write()]\");\n    }\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    if (this.checkAccess()) {\n      randFileName = this.namingFunction();\n      fileName = opts.name || opts.fileName ? opts.name || opts.fileName : randFileName;\n      ref = this.getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n      path = this.storagePath + \"/\" + randFileName + extensionWithDot;\n      opts.type = this.getMimeType(opts);\n      if (!opts.meta) {\n        opts.meta = {};\n      }\n      if (!opts.size) {\n        opts.size = buffer.length;\n      }\n      result = this.dataToSchema({\n        name: fileName,\n        path: path,\n        meta: opts.meta,\n        type: opts.type,\n        size: opts.size,\n        extension: extension\n      });\n      if (this.debug) {\n        console.info(\"[FilesCollection] [write]: \" + fileName + \" -> \" + this.collectionName);\n      }\n      fs.outputFile(path, buffer, 'binary', function(error) {\n        return bound(function() {\n          if (error) {\n            return callback && callback(error);\n          } else {\n            result._id = this.collection.insert(_.clone(result));\n            return callback && callback(null, result);\n          }\n        });\n      });\n      return this;\n    }\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - {fileName: '', meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @summary Download file, write stream to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.load = Meteor.isServer ? function(url, opts, callback) {\n    var extension, extensionWithDot, fileName, path, randFileName, ref, self;\n    if (opts == null) {\n      opts = {};\n    }\n    if (this.debug) {\n      console.info(\"[FilesCollection] [load(\" + url + \", \" + (JSON.stringify(opts)) + \", callback)]\");\n    }\n    check(url, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    self = this;\n    randFileName = this.namingFunction();\n    fileName = opts.name || opts.fileName ? opts.name || opts.fileName : randFileName;\n    ref = this.getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n    path = this.storagePath + \"/\" + randFileName + extensionWithDot;\n    if (!opts.meta) {\n      opts.meta = {};\n    }\n    request.get(url).on('error', function(error) {\n      return bound(function() {\n        throw new Meteor.Error(500, (\"Error on [load(\" + url + \")]:\") + JSON.stringify(error));\n      });\n    }).on('response', function(response) {\n      return bound(function() {\n        var result;\n        if (self.debug) {\n          console.info(\"[FilesCollection] [load] Received: \" + url);\n        }\n        result = self.dataToSchema({\n          name: fileName,\n          path: path,\n          meta: opts.meta,\n          type: opts.type || response.headers['content-type'],\n          size: opts.size || response.headers['content-length'],\n          extension: extension\n        });\n        return self.collection.insert(_.clone(result), function(error, fileRef) {\n          if (error) {\n            if (self.debug) {\n              console.warn(\"[FilesCollection] [load] [insert] Error: \" + fileName + \" -> \" + self.collectionName, error);\n            }\n            return callback && callback(error);\n          } else {\n            if (self.debug) {\n              console.info(\"[FilesCollection] [load] [insert] \" + fileName + \" -> \" + self.collectionName);\n            }\n            return callback && callback(null, fileRef);\n          }\n        });\n      });\n    }).pipe(fs.createWriteStream(path, {\n      flags: 'w'\n    }));\n    return this;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name addFile\n  @param {String} path - Path to file\n  @param {String} path - Path to file\n  @summary Add file from FS to FilesCollection\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.addFile = Meteor.isServer ? function(path, opts, callback) {\n    var self;\n    if (opts == null) {\n      opts = {};\n    }\n    if (this.debug) {\n      console.info(\"[FilesCollection] [addFile(\" + path + \")]\");\n    }\n    if (this[\"public\"]) {\n      throw new Meteor.Error(403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection');\n    }\n    check(path, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    self = this;\n    fs.stat(path, function(error, stats) {\n      return bound(function() {\n        var _cn, extension, extensionWithDot, fileName, pathParts, ref, result;\n        if (error) {\n          return callback && callback(error);\n        } else if (stats.isFile()) {\n          pathParts = path.split('/');\n          fileName = pathParts[pathParts.length - 1];\n          ref = self.getExt(fileName), extension = ref.extension, extensionWithDot = ref.extensionWithDot;\n          if (!opts.type) {\n            opts.type = 'application/*';\n          }\n          if (!opts.meta) {\n            opts.meta = {};\n          }\n          if (!opts.size) {\n            opts.size = stats.size;\n          }\n          result = self.dataToSchema({\n            name: fileName,\n            path: path,\n            meta: opts.meta,\n            type: opts.type,\n            size: opts.size,\n            extension: extension,\n            _storagePath: path.replace(\"/\" + fileName, '')\n          });\n          _cn = self.collectionName;\n          return self.collection.insert(_.clone(result), function(error, record) {\n            if (error) {\n              if (self.debug) {\n                console.warn(\"[FilesCollection] [addFile] [insert] Error: \" + fileName + \" -> \" + _cn, error);\n              }\n              return callback && callback(error);\n            } else {\n              if (self.debug) {\n                console.info(\"[FilesCollection] [addFile] [insert]: \" + fileName + \" -> \" + _cn);\n              }\n              return callback && callback(null, result);\n            }\n          });\n        } else {\n          return callback && callback(new Meteor.Error(400, \"[FilesCollection] [addFile(\" + path + \")]: File does not exist\"));\n        }\n      });\n    });\n    return this;\n  } : void 0;\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name findOne\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @summary Load file\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.findOne = function(search) {\n    if (this.debug) {\n      console.info(\"[FilesCollection] [findOne(\" + (JSON.stringify(search)) + \")]\");\n    }\n    check(search, Match.Optional(Match.OneOf(Object, String)));\n    this.srch(search);\n    if (this.checkAccess()) {\n      this.currentFile = this.collection.findOne(this.search);\n      this.cursor = null;\n    }\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name find\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @summary Load file or bunch of files\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.find = function(search) {\n    if (this.debug) {\n      console.info(\"[FilesCollection] [find(\" + (JSON.stringify(search)) + \")]\");\n    }\n    check(search, Match.Optional(Match.OneOf(Object, String)));\n    this.srch(search);\n    if (this.checkAccess()) {\n      this.currentFile = null;\n      this.cursor = this.collection.find(this.search);\n    }\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name get\n  @summary Return value of current cursor or file\n  @returns {Object|[Object]}\n   */\n\n  FilesCollection.prototype.get = function() {\n    if (this.debug) {\n      console.info('[FilesCollection] [get()]');\n    }\n    if (this.cursor) {\n      return this.cursor.fetch();\n    }\n    return this.currentFile;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name fetch\n  @summary Alias for `get()` method\n  @returns {[Object]}\n   */\n\n  FilesCollection.prototype.fetch = function() {\n    var data;\n    if (this.debug) {\n      console.info('[FilesCollection] [fetch()]');\n    }\n    data = this.get();\n    if (!_.isArray(data)) {\n      return [data];\n    } else {\n      return data;\n    }\n  };\n\n\n  /*\n  @locus Client\n  @memberOf FilesCollection\n  @name insert\n  @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n  @param {Object} config - Configuration object with next properties:\n    {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n    {Object}      meta           - Additional data as object, use later for search\n    {Boolean}     allowWebWorkers- Allow/Deny WebWorkers usage\n    {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n    {Number|dynamic} chunkSize   - Chunk size for upload\n    {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n    {Function}    onStart        - Callback triggered when upload is started after all successful validations, with two arguments `error` (always null) and `fileRef`\n    {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileData`\n    {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n    {Function}    onBeforeUpload - Callback triggered right before upload is started:\n        return true to continue\n        return false to abort upload\n  @param {Boolean} autoStart     - Start upload immediately. If set to false, you need manually call .start() method on returned class. Useful to set EventListeners.\n  @summary Upload file to server over DDP\n  @returns {UploadInstance} Instance. UploadInstance has next properties:\n    {ReactiveVar} onPause  - Is upload process on the pause?\n    {ReactiveVar} state    - active|paused|aborted|completed\n    {ReactiveVar} progress - Current progress in percentage\n    {Function}    pause    - Pause upload process\n    {Function}    continue - Continue paused upload process\n    {Function}    toggle   - Toggle continue/pause if upload process\n    {Function}    abort    - Abort upload\n    {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n   */\n\n  FilesCollection.prototype.insert = Meteor.isClient ? function(config, autoStart) {\n    var mName;\n    if (autoStart == null) {\n      autoStart = true;\n    }\n    if (this.checkAccess()) {\n      mName = autoStart ? 'start' : 'manual';\n      return (new this._UploadInstance(config, this))[mName]();\n    } else {\n      throw new Meteor.Error(401, \"[FilesCollection] [insert] Access Denied\");\n    }\n  } : void 0;\n\n\n  /*\n  @locus Client\n  @memberOf FilesCollection\n  @name _UploadInstance\n  @class UploadInstance\n  @summary Internal Class, used in upload\n   */\n\n  FilesCollection.prototype._UploadInstance = Meteor.isClient ? UploadInstance = (function() {\n    UploadInstance.prototype.__proto__ = EventEmitter.prototype;\n\n    function UploadInstance(config1, collection) {\n      var base, base1, base2, base3, self;\n      this.config = config1;\n      this.collection = collection;\n      EventEmitter.call(this);\n      if (this.collection.debug) {\n        console.info('[FilesCollection] [insert()]');\n      }\n      self = this;\n      if ((base = this.config).meta == null) {\n        base.meta = {};\n      }\n      if ((base1 = this.config).streams == null) {\n        base1.streams = 2;\n      }\n      if (this.config.streams < 1) {\n        this.config.streams = 2;\n      }\n      if ((base2 = this.config).chunkSize == null) {\n        base2.chunkSize = this.collection.chunkSize;\n      }\n      if ((base3 = this.config).allowWebWorkers == null) {\n        base3.allowWebWorkers = true;\n      }\n      check(this.config, {\n        file: Match.Any,\n        meta: Match.Optional(Object),\n        onError: Match.Optional(Function),\n        onAbort: Match.Optional(Function),\n        streams: Match.OneOf('dynamic', Number),\n        onStart: Match.Optional(Function),\n        chunkSize: Match.OneOf('dynamic', Number),\n        onUploaded: Match.Optional(Function),\n        onProgress: Match.Optional(Function),\n        onBeforeUpload: Match.Optional(Function),\n        allowWebWorkers: Boolean\n      });\n      if (this.config.file) {\n        if (this.collection.debug) {\n          console.time('insert ' + this.config.file.name);\n        }\n        if (this.collection.debug) {\n          console.time('loadFile ' + this.config.file.name);\n        }\n        if (Worker && this.config.allowWebWorkers) {\n          this.worker = new Worker('/packages/ostrio_files/worker.js');\n        } else {\n          this.worker = null;\n        }\n        this.trackerComp = null;\n        this.currentChunk = 0;\n        this.sentChunks = 0;\n        this.EOFsent = false;\n        this.transferTime = 0;\n        this.fileLength = 1;\n        this.fileId = this.collection.namingFunction();\n        this.pipes = [];\n        this.fileData = {\n          size: this.config.file.size,\n          type: this.config.file.type,\n          name: this.config.file.name\n        };\n        this.fileData = _.extend(this.fileData, this.collection.getExt(self.config.file.name), {\n          mime: this.collection.getMimeType(this.fileData)\n        });\n        this.fileData['mime-type'] = this.fileData.mime;\n        this.result = new this.collection._FileUpload(_.extend(self.config, {\n          fileData: this.fileData,\n          fileId: this.fileId,\n          MeteorFileAbort: this.collection.methodNames.MeteorFileAbort\n        }));\n        this.beforeunload = function(e) {\n          var message;\n          message = _.isFunction(self.collection.onbeforeunloadMessage) ? self.collection.onbeforeunloadMessage.call(self.result, self.fileData) : self.collection.onbeforeunloadMessage;\n          if (e) {\n            e.returnValue = message;\n          }\n          return message;\n        };\n        this.result.config.beforeunload = this.beforeunload;\n        window.addEventListener('beforeunload', this.beforeunload, false);\n        this.result.config._onEnd = function() {\n          return self.emitEvent('_onEnd');\n        };\n        this.addListener('end', this.end);\n        this.addListener('start', this.start);\n        this.addListener('upload', this.upload);\n        this.addListener('sendEOF', this.sendEOF);\n        this.addListener('prepare', this.prepare);\n        this.addListener('sendViaDDP', this.sendViaDDP);\n        this.addListener('proceedChunk', this.proceedChunk);\n        this.addListener('createStreams', this.createStreams);\n        this.addListener('calculateStats', _.throttle(function() {\n          var _t, progress;\n          _t = (self.transferTime / self.sentChunks) / self.config.streams;\n          self.result.estimateTime.set(_t * (self.fileLength - self.sentChunks));\n          self.result.estimateSpeed.set(self.config.chunkSize / (_t / 1000));\n          progress = Math.round((self.sentChunks / self.fileLength) * 100);\n          self.result.progress.set(progress);\n          self.config.onProgress && self.config.onProgress.call(self.result, progress, self.fileData);\n          self.result.emitEvent('progress', [progress, self.fileData]);\n        }, 250));\n        this.addListener('_onEnd', function() {\n          if (self.worker) {\n            self.worker.terminate();\n          }\n          if (self.trackerComp) {\n            self.trackerComp.stop();\n          }\n          if (self.beforeunload) {\n            window.removeEventListener('beforeunload', self.beforeunload, false);\n          }\n          if (self.result) {\n            return self.result.progress.set(0);\n          }\n        });\n      } else {\n        throw new Meteor.Error(500, \"[FilesCollection] [insert] Have you forget to pass a File itself?\");\n      }\n    }\n\n    UploadInstance.prototype.end = function(error, data) {\n      if (this.collection.debug) {\n        console.timeEnd('insert ' + this.config.file.name);\n      }\n      this.emitEvent('_onEnd');\n      this.result.emitEvent('uploaded', [error, data]);\n      this.config.onUploaded && this.config.onUploaded.call(this.result, error, data);\n      if (error) {\n        if (this.collection.debug) {\n          console.warn(\"[FilesCollection] [insert] [end] Error: \", error);\n        }\n        this.result.abort();\n        this.result.state.set('aborted');\n        this.result.emitEvent('error', [error, this.fileData]);\n        this.config.onError && this.config.onError.call(this.result, error, this.fileData);\n      } else {\n        this.result.state.set('completed');\n        this.collection.emitEvent('afterUpload', [data]);\n      }\n      this.result.emitEvent('end', [error, data || this.fileData]);\n      return this.result;\n    };\n\n    UploadInstance.prototype.sendViaDDP = function(evt) {\n      var j, len, opts, pipeFunc, ref, self;\n      self = this;\n      opts = {\n        file: this.fileData,\n        fileId: this.fileId,\n        binData: evt.data.bin,\n        chunkId: evt.data.chunkId,\n        chunkSize: this.config.chunkSize,\n        fileLength: this.fileLength\n      };\n      this.emitEvent('data', [evt.data.bin]);\n      if (this.pipes.length) {\n        ref = this.pipes;\n        for (j = 0, len = ref.length; j < len; j++) {\n          pipeFunc = ref[j];\n          opts.binData = pipeFunc(opts.binData);\n        }\n      }\n      if (this.fileLength === evt.data.chunkId) {\n        if (this.collection.debug) {\n          console.timeEnd('loadFile ' + this.config.file.name);\n        }\n        this.emitEvent('readEnd');\n      }\n      if (opts.binData && opts.binData.length) {\n        Meteor.call(this.collection.methodNames.MeteorFileWrite, opts, function(error) {\n          ++self.sentChunks;\n          self.transferTime += (+(new Date)) - evt.data.start;\n          if (error) {\n            self.emitEvent('end', [error]);\n          } else {\n            if (self.sentChunks >= self.fileLength) {\n              self.emitEvent('sendEOF', [opts]);\n            } else if (self.currentChunk < self.fileLength) {\n              self.emitEvent('upload');\n            }\n            self.emitEvent('calculateStats');\n          }\n        });\n      }\n    };\n\n    UploadInstance.prototype.sendEOF = function(opts) {\n      var self;\n      if (!this.EOFsent) {\n        this.EOFsent = true;\n        self = this;\n        opts = {\n          eof: true,\n          meta: this.config.meta,\n          file: this.fileData,\n          fileId: this.fileId,\n          chunkSize: this.config.chunkSize,\n          fileLength: this.fileLength\n        };\n        Meteor.call(this.collection.methodNames.MeteorFileWrite, opts, function() {\n          return self.emitEvent('end', arguments);\n        });\n      }\n    };\n\n    UploadInstance.prototype.proceedChunk = function(chunkId, start) {\n      var chunk, fileReader, self;\n      self = this;\n      chunk = this.config.file.slice(this.config.chunkSize * (chunkId - 1), this.config.chunkSize * chunkId);\n      fileReader = new FileReader;\n      fileReader.onloadend = function(evt) {\n        var ref, ref1;\n        self.emitEvent('sendViaDDP', [\n          {\n            data: {\n              bin: ((fileReader != null ? fileReader.result : void 0) || ((ref = evt.srcElement) != null ? ref.result : void 0) || ((ref1 = evt.target) != null ? ref1.result : void 0)).split(',')[1],\n              chunkId: chunkId,\n              start: start\n            }\n          }\n        ]);\n      };\n      fileReader.onerror = function(e) {\n        self.emitEvent('end', [(e.target || e.srcElement).error]);\n      };\n      fileReader.readAsDataURL(chunk);\n    };\n\n    UploadInstance.prototype.upload = function() {\n      var self, start;\n      start = +(new Date);\n      if (this.result.onPause.get()) {\n        self = this;\n        this.result.continueFunc = function() {\n          self.emitEvent('createStreams');\n        };\n        return;\n      }\n      if (this.result.state.get() === 'aborted') {\n        return this;\n      }\n      if (this.currentChunk <= this.fileLength) {\n        ++this.currentChunk;\n        if (this.worker) {\n          this.worker.postMessage({\n            sentChunks: this.sentChunks,\n            start: start,\n            currentChunk: this.currentChunk,\n            chunkSize: this.config.chunkSize,\n            file: this.config.file\n          });\n        } else {\n          this.emitEvent('proceedChunk', [this.currentChunk, start]);\n        }\n      }\n    };\n\n    UploadInstance.prototype.createStreams = function() {\n      var i, self;\n      i = 1;\n      self = this;\n      while (i <= this.config.streams) {\n        self.emitEvent('upload');\n        i++;\n      }\n    };\n\n    UploadInstance.prototype.prepare = function() {\n      var _len, self;\n      self = this;\n      this.config.onStart && this.config.onStart.call(this.result, null, this.fileData);\n      this.result.emitEvent('start', [null, this.fileData]);\n      if (this.config.chunkSize === 'dynamic') {\n        this.config.chunkSize = this.config.file.size / 1000;\n        if (this.config.chunkSize < 327680) {\n          this.config.chunkSize = 327680;\n        } else if (this.config.chunkSize > 1048576) {\n          this.config.chunkSize = 1048576;\n        }\n      }\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 8) * 8;\n      _len = Math.ceil(this.config.file.size / this.config.chunkSize);\n      if (this.config.streams === 'dynamic') {\n        this.config.streams = _.clone(_len);\n        if (this.config.streams > 24) {\n          this.config.streams = 24;\n        }\n      }\n      this.fileLength = _len <= 0 ? 1 : _len;\n      if (this.config.streams > this.fileLength) {\n        this.config.streams = this.fileLength;\n      }\n      this.result.config.fileLength = this.fileLength;\n      self.emitEvent('createStreams');\n    };\n\n    UploadInstance.prototype.pipe = function(func) {\n      this.pipes.push(func);\n      return this;\n    };\n\n    UploadInstance.prototype.start = function() {\n      var isUploadAllowed, self;\n      self = this;\n      if (this.config.file.size <= 0) {\n        this.end(new Meteor.Error(400, 'Can\\'t upload empty file'));\n        return this.result;\n      }\n      if (this.config.onBeforeUpload && _.isFunction(this.config.onBeforeUpload)) {\n        isUploadAllowed = this.config.onBeforeUpload.call(_.extend(this.result, this.collection.getUser()), this.fileData);\n        if (isUploadAllowed !== true) {\n          return this.end(new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : 'config.onBeforeUpload() returned false'));\n        }\n      }\n      if (this.collection.onBeforeUpload && _.isFunction(this.collection.onBeforeUpload)) {\n        isUploadAllowed = this.collection.onBeforeUpload.call(_.extend(this.result, this.collection.getUser()), this.fileData);\n        if (isUploadAllowed !== true) {\n          return this.end(new Meteor.Error(403, _.isString(isUploadAllowed) ? isUploadAllowed : 'collection.onBeforeUpload() returned false'));\n        }\n      }\n      Tracker.autorun(function(computation) {\n        self.trackerComp = computation;\n        if (!self.result.onPause.get()) {\n          if (Meteor.status().connected) {\n            self.result[\"continue\"]();\n            if (self.collection.debug) {\n              console.info('[FilesCollection] [insert] [Tracker] [continue]');\n            }\n          } else {\n            self.result.pause();\n            if (self.collection.debug) {\n              console.info('[FilesCollection] [insert] [Tracker] [pause]');\n            }\n          }\n        }\n      });\n      if (this.worker) {\n        this.worker.onmessage = function(evt) {\n          if (evt.data.error) {\n            if (self.collection.debug) {\n              console.warn(evt.data.error);\n            }\n            self.emitEvent('proceedChunk', [evt.data.chunkId, evt.data.start]);\n          } else {\n            self.emitEvent('sendViaDDP', [evt]);\n          }\n        };\n        this.worker.onerror = function(e) {\n          self.emitEvent('end', [e.message]);\n        };\n      }\n      if (this.collection.debug) {\n        if (this.worker) {\n          console.info(\"[FilesCollection] [insert] using WebWorkers\");\n        } else {\n          console.info(\"[FilesCollection] [insert] using MainThread\");\n        }\n      }\n      self.emitEvent('prepare');\n      return this.result;\n    };\n\n    UploadInstance.prototype.manual = function() {\n      var self;\n      self = this;\n      this.result.start = function() {\n        self.emitEvent('start');\n      };\n      this.result.pipe = function(func) {\n        self.pipe(func);\n        return this;\n      };\n      return this.result;\n    };\n\n    return UploadInstance;\n\n  })() : void 0;\n\n\n  /*\n  @locus Client\n  @memberOf FilesCollection\n  @name _FileUpload\n  @class FileUpload\n  @summary Internal Class, instance of this class is returned from `insert()` method\n   */\n\n  FilesCollection.prototype._FileUpload = Meteor.isClient ? FileUpload = (function() {\n    FileUpload.prototype.__proto__ = EventEmitter.prototype;\n\n    function FileUpload(config1) {\n      this.config = config1;\n      EventEmitter.call(this);\n      this.file = _.extend(this.config.file, this.config.fileData);\n      this.state = new ReactiveVar('active');\n      this.onPause = new ReactiveVar(false);\n      this.progress = new ReactiveVar(0);\n      this.estimateTime = new ReactiveVar(1000);\n      this.estimateSpeed = new ReactiveVar(0);\n    }\n\n    FileUpload.prototype.continueFunc = function() {};\n\n    FileUpload.prototype.pause = function() {\n      if (!this.onPause.get()) {\n        this.onPause.set(true);\n        this.state.set('paused');\n        this.emitEvent('pause', [this.file]);\n      }\n    };\n\n    FileUpload.prototype[\"continue\"] = function() {\n      if (this.onPause.get()) {\n        this.onPause.set(false);\n        this.state.set('active');\n        this.emitEvent('continue', [this.file]);\n        this.continueFunc.call();\n        this.continueFunc = function() {};\n      }\n    };\n\n    FileUpload.prototype.toggle = function() {\n      if (this.onPause.get()) {\n        this[\"continue\"]();\n      } else {\n        this.pause();\n      }\n    };\n\n    FileUpload.prototype.abort = function() {\n      window.removeEventListener('beforeunload', this.config.beforeunload, false);\n      this.config.onAbort && this.config.onAbort.call(this, this.file);\n      this.emitEvent('abort', [this.file]);\n      this.pause();\n      this.config._onEnd();\n      this.state.set('aborted');\n      if (this.config.debug) {\n        console.timeEnd('insert ' + this.config.file.name);\n      }\n      if (this.config.fileLength) {\n        Meteor.call(this.config.MeteorFileAbort, {\n          fileId: this.config.fileId,\n          fileLength: this.config.fileLength,\n          fileData: this.config.fileData\n        });\n      }\n    };\n\n    return FileUpload;\n\n  })() : void 0;\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name remove\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @param {Function} cb - Callback with one `error` argument\n  @summary Remove file(s) on cursor or find and remove file(s) if search is set\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.remove = function(search, cb) {\n    var files, self;\n    if (this.debug) {\n      console.info(\"[FilesCollection] [remove(\" + (JSON.stringify(search)) + \")]\");\n    }\n    check(search, Match.Optional(Match.OneOf(Object, String)));\n    check(cb, Match.Optional(Function));\n    if (this.checkAccess()) {\n      this.srch(search);\n      if (Meteor.isClient) {\n        Meteor.call(this.methodNames.MeteorFileUnlink, rcp(this), (cb ? cb : NOOP));\n      }\n      if (Meteor.isServer) {\n        files = this.collection.find(this.search);\n        if (files.count() > 0) {\n          self = this;\n          files.forEach(function(file) {\n            return self.unlink(file);\n          });\n        }\n        this.collection.remove(this.search, cb);\n      }\n    } else {\n      cb && cb(new Meteor.Error(401, '[FilesCollection] [remove] Access denied!'));\n    }\n    return this;\n  };\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name update\n  @see http://docs.meteor.com/#/full/update\n  @summary link Mongo.Collection update method\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.update = function() {\n    this.collection.update.apply(this.collection, arguments);\n    return this.collection;\n  };\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name deny\n  @name allow\n  @param {Object} rules\n  @see http://docs.meteor.com/#/full/allow\n  @summary link Mongo.Collection allow/deny methods\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.deny = Meteor.isServer ? function(rules) {\n    this.collection.deny(rules);\n    return this.collection;\n  } : void 0;\n\n  FilesCollection.prototype.allow = Meteor.isServer ? function(rules) {\n    this.collection.allow(rules);\n    return this.collection;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name denyClient\n  @name allowClient\n  @see http://docs.meteor.com/#/full/allow\n  @summary Shorthands for Mongo.Collection allow/deny methods\n  @returns {Mongo.Collection} Instance\n   */\n\n  FilesCollection.prototype.denyClient = Meteor.isServer ? function() {\n    this.collection.deny({\n      insert: function() {\n        return true;\n      },\n      update: function() {\n        return true;\n      },\n      remove: function() {\n        return true;\n      }\n    });\n    return this.collection;\n  } : void 0;\n\n  FilesCollection.prototype.allowClient = Meteor.isServer ? function() {\n    this.collection.allow({\n      insert: function() {\n        return true;\n      },\n      update: function() {\n        return true;\n      },\n      remove: function() {\n        return true;\n      }\n    });\n    return this.collection;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name unlink\n  @param {Object} fileRef - fileObj\n  @param {String} version - [Optional] file's version\n  @summary Unlink files and it's versions from FS\n  @returns {FilesCollection} Instance\n   */\n\n  FilesCollection.prototype.unlink = Meteor.isServer ? function(fileRef, version) {\n    var ref, ref1;\n    if (this.debug) {\n      console.info(\"[FilesCollection] [unlink(\" + fileRef._id + \", \" + version + \")]\");\n    }\n    if (version) {\n      if (((ref = fileRef.versions) != null ? ref[version] : void 0) && ((ref1 = fileRef.versions[version]) != null ? ref1.path : void 0)) {\n        fs.unlink(fileRef.versions[version].path, NOOP);\n      }\n    } else {\n      if (fileRef.versions && !_.isEmpty(fileRef.versions)) {\n        _.each(fileRef.versions, function(vRef) {\n          return bound(function() {\n            return fs.unlink(vRef.path, NOOP);\n          });\n        });\n      }\n      fs.unlink(fileRef.path, NOOP);\n    }\n    return this;\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name _404\n  @summary Internal method, used to return 404 error\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype._404 = Meteor.isServer ? function(http) {\n    var text;\n    if (this.debug) {\n      console.warn(\"[FilesCollection] [download(\" + http.request.originalUrl + \")] [_404] File not found\");\n    }\n    text = 'File Not Found :(';\n    http.response.writeHead(404, {\n      'Content-Length': text.length,\n      'Content-Type': 'text/plain'\n    });\n    http.response.end(text);\n  } : void 0;\n\n\n  /*\n  @locus Server\n  @memberOf FilesCollection\n  @name download\n  @param {Object|Files} self - Instance of FilesCollection\n  @summary Initiates the HTTP response\n  @returns {undefined}\n   */\n\n  FilesCollection.prototype.download = Meteor.isServer ? function(http, version) {\n    var fileRef, responseType, self;\n    if (version == null) {\n      version = 'original';\n    }\n    if (this.debug) {\n      console.info(\"[FilesCollection] [download(\" + http.request.originalUrl + \", \" + version + \")]\");\n    }\n    responseType = '200';\n    if (this.currentFile) {\n      if (_.has(this.currentFile, 'versions') && _.has(this.currentFile.versions, version)) {\n        fileRef = this.currentFile.versions[version];\n      } else {\n        fileRef = this.currentFile;\n      }\n    } else {\n      fileRef = false;\n    }\n    if (!fileRef || !_.isObject(fileRef)) {\n      return this._404(http);\n    } else if (this.currentFile) {\n      self = this;\n      if (this.downloadCallback) {\n        if (!this.downloadCallback.call(_.extend(http, this.getUser(http)), this.currentFile)) {\n          return this._404(http);\n        }\n      }\n      if (this.interceptDownload && _.isFunction(this.interceptDownload)) {\n        if (this.interceptDownload(http, this.currentFile, version) === true) {\n          return;\n        }\n      }\n      fs.stat(fileRef.path, function(statErr, stats) {\n        return bound(function() {\n          var array, dispositionEncoding, dispositionName, dispositionType, end, partiral, ref, ref1, ref2, ref3, reqRange, start, stream, streamErrorHandler, take, text;\n          if (statErr || !stats.isFile()) {\n            return self._404(http);\n          }\n          if (stats.size !== fileRef.size && !self.integrityCheck) {\n            fileRef.size = stats.size;\n          }\n          if (stats.size !== fileRef.size && self.integrityCheck) {\n            responseType = '400';\n          }\n          partiral = false;\n          reqRange = false;\n          if (http.params.query.download && http.params.query.download === 'true') {\n            dispositionType = 'attachment; ';\n          } else {\n            dispositionType = 'inline; ';\n          }\n          dispositionName = \"filename=\\\"\" + (encodeURIComponent(self.currentFile.name)) + \"\\\"; filename=*UTF-8\\\"\" + (encodeURIComponent(self.currentFile.name)) + \"\\\"; \";\n          dispositionEncoding = 'charset=utf-8';\n          http.response.setHeader('Content-Type', fileRef.type);\n          http.response.setHeader('Content-Disposition', dispositionType + dispositionName + dispositionEncoding);\n          http.response.setHeader('Accept-Ranges', 'bytes');\n          if ((ref = self.currentFile) != null ? (ref1 = ref.updatedAt) != null ? ref1.toUTCString() : void 0 : void 0) {\n            http.response.setHeader('Last-Modified', (ref2 = self.currentFile) != null ? (ref3 = ref2.updatedAt) != null ? ref3.toUTCString() : void 0 : void 0);\n          }\n          http.response.setHeader('Connection', 'keep-alive');\n          if (http.request.headers.range) {\n            partiral = true;\n            array = http.request.headers.range.split(/bytes=([0-9]*)-([0-9]*)/);\n            start = parseInt(array[1]);\n            end = parseInt(array[2]);\n            if (isNaN(end)) {\n              end = fileRef.size - 1;\n            }\n            take = end - start;\n          } else {\n            start = 0;\n            end = fileRef.size - 1;\n            take = fileRef.size;\n          }\n          if (partiral || (http.params.query.play && http.params.query.play === 'true')) {\n            reqRange = {\n              start: start,\n              end: end\n            };\n            if (isNaN(start) && !isNaN(end)) {\n              reqRange.start = end - take;\n              reqRange.end = end;\n            }\n            if (!isNaN(start) && isNaN(end)) {\n              reqRange.start = start;\n              reqRange.end = start + take;\n            }\n            if ((start + take) >= fileRef.size) {\n              reqRange.end = fileRef.size - 1;\n            }\n            http.response.setHeader('Pragma', 'private');\n            http.response.setHeader('Expires', new Date(+(new Date) + 1000 * 32400).toUTCString());\n            http.response.setHeader('Cache-Control', 'private, maxage=10800, s-maxage=32400');\n            if (self.strict && (reqRange.start >= (fileRef.size - 1) || reqRange.end > (fileRef.size - 1))) {\n              responseType = '416';\n            } else {\n              responseType = '206';\n            }\n          } else {\n            http.response.setHeader('Cache-Control', self.cacheControl);\n            responseType = '200';\n          }\n          streamErrorHandler = function(error) {\n            http.response.writeHead(500);\n            return http.response.end(error.toString());\n          };\n          switch (responseType) {\n            case '400':\n              if (self.debug) {\n                console.warn(\"[FilesCollection] [download(\" + fileRef.path + \", \" + version + \")] [400] Content-Length mismatch!\");\n              }\n              text = 'Content-Length mismatch!';\n              http.response.writeHead(400, {\n                'Content-Type': 'text/plain',\n                'Cache-Control': 'no-cache',\n                'Content-Length': text.length\n              });\n              http.response.end(text);\n              break;\n            case '404':\n              return self._404(http);\n              break;\n            case '416':\n              if (self.debug) {\n                console.info(\"[FilesCollection] [download(\" + fileRef.path + \", \" + version + \")] [416] Content-Range is not specified!\");\n              }\n              http.response.writeHead(416, {\n                'Content-Range': \"bytes */\" + fileRef.size\n              });\n              http.response.end();\n              break;\n            case '200':\n              if (self.debug) {\n                console.info(\"[FilesCollection] [download(\" + fileRef.path + \", \" + version + \")] [200]\");\n              }\n              stream = fs.createReadStream(fileRef.path);\n              stream.on('open', (function(_this) {\n                return function() {\n                  http.response.writeHead(200);\n                  if (self.throttle) {\n                    return stream.pipe(new Throttle({\n                      bps: self.throttle,\n                      chunksize: self.chunkSize\n                    })).pipe(http.response);\n                  } else {\n                    return stream.pipe(http.response);\n                  }\n                };\n              })(this)).on('error', streamErrorHandler);\n              break;\n            case '206':\n              if (self.debug) {\n                console.info(\"[FilesCollection] [download(\" + fileRef.path + \", \" + version + \")] [206]\");\n              }\n              http.response.setHeader('Content-Range', \"bytes \" + reqRange.start + \"-\" + reqRange.end + \"/\" + fileRef.size);\n              http.response.setHeader('Trailer', 'expires');\n              http.response.setHeader('Transfer-Encoding', 'chunked');\n              if (self.throttle) {\n                stream = fs.createReadStream(fileRef.path, {\n                  start: reqRange.start,\n                  end: reqRange.end\n                });\n                stream.on('open', function() {\n                  return http.response.writeHead(206);\n                }).on('error', streamErrorHandler).on('end', function() {\n                  return http.response.end();\n                }).pipe(new Throttle({\n                  bps: self.throttle,\n                  chunksize: self.chunkSize\n                })).pipe(http.response);\n              } else {\n                stream = fs.createReadStream(fileRef.path, {\n                  start: reqRange.start,\n                  end: reqRange.end\n                });\n                stream.on('open', function() {\n                  return http.response.writeHead(206);\n                }).on('error', streamErrorHandler).on('end', function() {\n                  return http.response.end();\n                }).pipe(http.response);\n              }\n              break;\n          }\n        });\n      });\n    } else {\n      return this._404(http);\n    }\n  } : void 0;\n\n\n  /*\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name link\n  @param {Object}   fileRef - File reference object\n  @param {String}   version - [Optional] Version of file you would like to request\n  @summary Returns downloadable URL\n  @returns {String} Empty string returned in case if file not found in DB\n   */\n\n  FilesCollection.prototype.link = function(fileRef, version) {\n    if (version == null) {\n      version = 'original';\n    }\n    if (this.debug) {\n      console.info('[FilesCollection] [link()]');\n    }\n    if (_.isString(fileRef)) {\n      version = fileRef;\n      fileRef = null;\n    }\n    if (!fileRef && !this.currentFile) {\n      return '';\n    }\n    return formatFleURL(fileRef || this.currentFile, version);\n  };\n\n  return FilesCollection;\n\n})();\n\n\n/*\n@locus Anywhere\n@private\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@param {Boolean}  pub   - [Optional] is file located in publicity available folder?\n@summary Returns formatted URL for file\n@returns {String} Downloadable link\n */\n\nformatFleURL = function(fileRef, version) {\n  var ext, ref, root;\n  if (version == null) {\n    version = 'original';\n  }\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '');\n  if ((fileRef != null ? (ref = fileRef.extension) != null ? ref.length : void 0 : void 0) > 0) {\n    ext = '.' + fileRef.extension;\n  } else {\n    ext = '';\n  }\n  if (fileRef[\"public\"] === true) {\n    return root + (version === 'original' ? fileRef._downloadRoute + \"/\" + fileRef._id + ext : fileRef._downloadRoute + \"/\" + version + \"-\" + fileRef._id + ext);\n  } else {\n    return root + (fileRef._downloadRoute + \"/\" + fileRef._collectionName + \"/\" + fileRef._id + \"/\" + version + \"/\" + fileRef._id + ext);\n  }\n};\n\nif (Meteor.isClient) {\n\n  /*\n  @locus Client\n  @TemplateHelper\n  @name fileURL\n  @param {Object} fileRef - File reference object\n  @param {String} version - [Optional] Version of file you would like to request\n  @summary Get download URL for file by fileRef, even without subscription\n  @example {{fileURL fileRef}}\n  @returns {String}\n   */\n  Template.registerHelper('fileURL', function(fileRef, version) {\n    if (!fileRef || !_.isObject(fileRef)) {\n      return void 0;\n    }\n    version = !version || !_.isString(version) ? 'original' : version;\n    if (fileRef._id) {\n      return formatFleURL(fileRef, version);\n    } else {\n      return '';\n    }\n  });\n}\n\nMeteor.Files = FilesCollection;\n","sourceMap":{"version":3,"file":"/files.coffee.js","sourceRoot":"","sources":["/packages/ostrio_files/files.coffee"],"names":[],"mappings":"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","sourcesContent":["NOOP = -> return\n\nif Meteor.isServer\n  ###\n  @summary Require NPM packages\n  ###\n  fs           = Npm.require 'fs-extra'\n  events       = Npm.require 'events'\n  request      = Npm.require 'request'\n  Throttle     = Npm.require 'throttle'\n  fileType     = Npm.require 'file-type'\n  nodePath     = Npm.require 'path'\n\n  ###\n  @var {object} bound - Meteor.bindEnvironment (Fiber wrapper)\n  ###\n  bound = Meteor.bindEnvironment (callback) -> return callback()\n\n###\n@private\n@name _insts\n@summary Object of FilesCollection instances\n###\n_insts = {}\n\n###\n@private\n@name rcp\n@param {Object} obj - Initial object\n@summary Create object with only needed props\n###\nrcp = (obj) ->\n  o =\n    currentFile:    obj.currentFile\n    search:         obj.search\n    collectionName: obj.collectionName\n    downloadRoute:  obj.downloadRoute\n    chunkSize:      obj.chunkSize\n    debug:          obj.debug\n    _prefix:        obj._prefix\n  return o\n\n###\n@private\n@name cp\n@param {Object} to   - Destination\n@param {Object} from - Source\n@summary Copy-Paste only needed props from one to another object\n###\ncp = (to, from) ->\n  to.currentFile    = from.currentFile\n  to.search         = from.search\n  to.collectionName = from.collectionName\n  to.downloadRoute  = from.downloadRoute\n  to.chunkSize      = from.chunkSize\n  to.debug          = from.debug\n  to._prefix        = from._prefix\n  return to\n\n###\n@locus Anywhere\n@class FilesCollection\n@param config           {Object}   - [Both]   Configuration object with next properties:\n@param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n@param config.schema    {Object}   - [Both]   Collection Schema\n@param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n@param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n@param config.protected {Function} - [Both]   If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n  - `request` - On server only\n  - `response` - On server only\n  - `user()`\n  - `userId`\n@param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n@param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n@param config.storagePath    {String}  - [Server] Storage path on file system\n@param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n@param config.throttle       {Number}  - [Server] bps throttle threshold\n@param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n@param config.collectionName {String}  - [Both]   Collection name\n@param config.namingFunction {Function}- [Both]   Function which returns `String`\n@param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n@param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n@param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\nreturn `true` to continue\nreturn `false` or `String` to abort upload\n@param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n@param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n@param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n@param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n@param config.onbeforeunloadMessage {String|Function} - [Client] Message shown to user when closing browser's window or tab while upload process is running\n@summary Create new instance of FilesCollection\n###\nclass FilesCollection\n  __proto__: do -> if Meteor.isServer then events.EventEmitter.prototype else EventEmitter.prototype\n  constructor: (config) ->\n    if Meteor.isServer\n      events.EventEmitter.call @\n    else\n      EventEmitter.call @\n    {@storagePath, @collectionName, @downloadRoute, @schema, @chunkSize, @namingFunction, @debug, @onbeforeunloadMessage, @permissions, @allowClientCode, @onBeforeUpload, @integrityCheck, @protected, @public, @strict, @downloadCallback, @cacheControl, @throttle, @onAfterUpload, @interceptDownload, @onBeforeRemove} = config if config\n\n    self               = @\n    cookie             = new Cookies()\n    @debug            ?= false\n    @public           ?= false\n    @protected        ?= false\n    @chunkSize        ?= 1024*512\n    @chunkSize         = Math.floor(@chunkSize / 8) * 8\n    if @public and not @downloadRoute\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}]: \\\"downloadRoute\\\" must be explicitly provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal on be inside of your web/proxy-server (relative) root.\"\n    @downloadRoute    ?= '/cdn/storage'\n    @downloadRoute     = @downloadRoute.replace /\\/$/, ''\n    @collectionName   ?= 'MeteorUploadFiles'\n    @namingFunction   ?= -> Random.id()\n    @onBeforeUpload   ?= false\n    @allowClientCode  ?= true\n    @interceptDownload?= false\n\n    if Meteor.isClient\n      @onbeforeunloadMessage ?= 'Upload in a progress... Do you want to abort?'\n      delete @strict\n      delete @throttle\n      delete @storagePath\n      delete @permissions\n      delete @cacheControl\n      delete @onAfterUpload\n      delete @integrityCheck\n      delete @downloadCallback\n      delete @interceptDownload\n      delete @onBeforeRemove\n\n      if @protected\n        if not cookie.has('meteor_login_token') and Meteor._localStorage.getItem('Meteor.loginToken')\n          cookie.set 'meteor_login_token', Meteor._localStorage.getItem('Meteor.loginToken'), null, '/'\n\n      check @onbeforeunloadMessage, Match.OneOf String, Function\n    else\n      @_writableStreams ?= {}\n      @strict           ?= true\n      @throttle         ?= false\n      @permissions      ?= parseInt('644', 8)\n      @cacheControl     ?= 'public, max-age=31536000, s-maxage=31536000'\n      @onBeforeRemove   ?= false\n      @onAfterUpload    ?= false\n      @integrityCheck   ?= true\n      @downloadCallback ?= false\n      if @public and not @storagePath\n        throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}] \\\"storagePath\\\" must be set on \\\"public\\\" collections! Note: \\\"storagePath\\\" must be equal on be inside of your web/proxy-server (absolute) root.\"\n      @storagePath      ?= \"assets/app/uploads/#{@collectionName}\"\n      @storagePath       = @storagePath.replace /\\/$/, ''\n      @storagePath       = nodePath.normalize @storagePath\n\n      fs.mkdirsSync @storagePath\n\n      check @strict, Boolean\n      check @throttle, Match.OneOf false, Number\n      check @permissions, Number\n      check @storagePath, String\n      check @cacheControl, String\n      check @onAfterUpload, Match.OneOf false, Function\n      check @integrityCheck, Boolean\n      check @onBeforeRemove, Match.OneOf false, Function\n      check @downloadCallback, Match.OneOf false, Function\n      check @interceptDownload, Match.OneOf false, Function\n\n    if not @schema\n      @schema =\n        size: type: Number\n        name: type: String\n        type: type: String\n        path: type: String\n        isVideo: type: Boolean\n        isAudio: type: Boolean\n        isImage: type: Boolean\n        isText: type: Boolean\n        isJSON: type: Boolean\n        _prefix: type: String\n        extension:\n          type: String\n          optional: true\n        _storagePath: type: String\n        _downloadRoute: type: String\n        _collectionName: type: String\n        public:\n          type: Boolean\n          optional: true\n        meta:\n          type: Object\n          blackbox: true\n          optional: true\n        userId:\n          type: String\n          optional: true\n        updatedAt: \n          type: Date\n          autoValue: -> new Date()\n        versions:\n          type: Object\n          blackbox: true\n\n    check @debug, Boolean\n    check @schema, Object\n    check @public, Boolean\n    check @protected, Match.OneOf Boolean, Function\n    check @chunkSize, Number\n    check @downloadRoute, String\n    check @collectionName, String\n    check @namingFunction, Function\n    check @onBeforeUpload, Match.OneOf false, Function\n    check @allowClientCode, Boolean\n\n    if @public and @protected\n      throw new Meteor.Error 500, \"[FilesCollection.#{@collectionName}]: Files can not be public and protected at the same time!\"\n    \n    @cursor      = null\n    @search      = {}\n    @collection  = new Mongo.Collection @collectionName\n    @currentFile = null\n    @_prefix     = SHA256 @collectionName + @downloadRoute\n    _insts[@_prefix] = @\n\n    @checkAccess = (http) ->\n      if self.protected\n        user = false\n        userFuncs = self.getUser http\n        {user, userId} = userFuncs\n        user = user()\n\n        if _.isFunction self.protected\n          result = if http then self.protected.call(_.extend(http, userFuncs), (self.currentFile or null)) else self.protected.call userFuncs, (self.currentFile or null)\n        else\n          result = !!user\n\n        if (http and result is true) or not http\n          return true\n        else\n          rc = if _.isNumber(result) then result else 401\n          console.warn '[FilesCollection.checkAccess] WARN: Access denied!' if self.debug\n          if http\n            text = 'Access denied!'\n            http.response.writeHead rc,\n              'Content-Length': text.length\n              'Content-Type':   'text/plain'\n            http.response.end text\n          return false\n      else\n        return true\n\n    @methodNames =\n      MeteorFileAbort:  \"MeteorFileAbort#{@_prefix}\"\n      MeteorFileWrite:  \"MeteorFileWrite#{@_prefix}\"\n      MeteorFileUnlink: \"MeteorFileUnlink#{@_prefix}\"\n\n    if Meteor.isServer\n      @on 'handleUpload', @handleUpload\n      @on 'finishUpload', @finishUpload\n\n      WebApp.connectHandlers.use (request, response, next) ->\n        unless self.public\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}/#{self.collectionName}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}/#{self.collectionName}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris = uri.split '/'\n            if uris.length is 3\n              params = \n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                _id: uris[0]\n                version: uris[1]\n                name: uris[2]\n              http = {request, response, params}\n              self.findOne(uris[0]).download.call(self, http, uris[1]) if self.checkAccess http\n            else\n              next()\n          else\n            next()\n        else\n          if !!~request._parsedUrl.path.indexOf \"#{self.downloadRoute}\"\n            uri = request._parsedUrl.path.replace \"#{self.downloadRoute}\", ''\n            if uri.indexOf('/') is 0\n              uri = uri.substring 1\n\n            uris  = uri.split '/'\n            _file = uris[uris.length - 1]\n            if _file\n              if !!~_file.indexOf '-'\n                version = _file.split('-')[0]\n                _file   = _file.split('-')[1].split('?')[0]\n              else\n                version = 'original'\n                _file   = _file.split('?')[0]\n\n              params = \n                query: if request._parsedUrl.query then JSON.parse('{\"' + decodeURI(request._parsedUrl.query).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g,'\":\"') + '\"}') else {}\n                file: _file\n                _id: _file.split('.')[0]\n                version: version\n                name: _file\n              http = {request, response, params}\n              self.findOne(params._id).download.call self, http, version\n            else\n              next()\n          else\n            next()\n        return\n\n      _methods = {}\n      _methods[self.methodNames.MeteorFileUnlink] = (inst) ->\n        check inst, Object\n        console.info '[FilesCollection] [Unlink Method]' if self.debug\n        \n        if self.allowClientCode\n          __instData = cp _insts[inst._prefix], inst\n          if self.onBeforeRemove and _.isFunction self.onBeforeRemove\n            user = false\n            userFuncs = {\n              userId: @userId\n              user: -> if Meteor.users then Meteor.users.findOne(@userId) else undefined\n            }\n\n            __inst = self.find.call __instData, inst.search\n            unless self.onBeforeRemove.call userFuncs, (__inst.cursor or null)\n              throw new Meteor.Error 403, '[FilesCollection] [remove] Not permitted!'\n\n          self.remove.call __instData, inst.search\n          return true\n        else\n          throw new Meteor.Error 401, '[FilesCollection] [remove] Run code from client is not allowed!'\n        return\n\n      _methods[self.methodNames.MeteorFileWrite] = (opts) ->\n        @unblock()\n        check opts, {\n          eof:        Match.Optional Boolean\n          meta:       Match.Optional Object\n          file:       Object\n          fileId:     String\n          binData:    Match.Optional String\n          chunkId:    Match.Optional Number\n          chunkSize:  Number\n          fileLength: Number\n        }\n\n        opts.eof     ?= false\n        opts.meta    ?= {}\n        opts.binData ?= 'EOF'\n        opts.chunkId ?= -1\n\n        console.info \"[FilesCollection] [Write Method] Got ##{opts.chunkId}/#{opts.fileLength} chunks, dst: #{opts.file.name or opts.file.fileName}\" if self.debug\n\n        if self.onBeforeUpload and _.isFunction self.onBeforeUpload\n          isUploadAllowed = self.onBeforeUpload.call(_.extend({\n            file: opts.file\n          }, {\n            userId: @userId, \n            user: -> if Meteor.users then Meteor.users.findOne(@userId) else undefined\n          }), opts.file)\n\n          if isUploadAllowed isnt true\n            throw new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else '@onBeforeUpload() returned false')\n\n        fileName = self.getFileName opts.file\n        {extension, extensionWithDot} = self.getExt fileName\n\n        result           = opts.file\n        result.path      = \"#{self.storagePath}/#{opts.fileId}#{extensionWithDot}\"\n        result.name      = fileName\n        result.meta      = opts.meta\n        result.extension = extension\n        result           = self.dataToSchema result\n        result._id       = opts.fileId\n        result.userId    = @userId if @userId\n\n        if opts.eof\n          try\n            return Meteor.wrapAsync(self.handleUpload.bind(self, result, opts))()\n          catch e\n            console.warn \"[FilesCollection] [Write Method] Exception:\", e if self.debug\n            throw e\n        else\n          self.emit 'handleUpload', result, opts, NOOP\n        return result\n\n      _methods[self.methodNames.MeteorFileAbort] = (opts) ->\n        check opts, {\n          fileId: String\n          fileData: Object\n          fileLength: Number\n        }\n\n        ext  = \".#{opts.fileData.ext}\"\n        path = \"#{self.storagePath}/#{opts.fileId}#{ext}\"\n\n        console.info \"[FilesCollection] [Abort Method]: For #{path}\" if self.debug\n        if self._writableStreams?[opts.fileId]\n          self._writableStreams[opts.fileId].stream.end()\n          delete self._writableStreams[opts.fileId]\n          self.remove({_id: opts.fileId})\n          self.unlink({_id: opts.fileId, path})\n\n        return true\n      Meteor.methods _methods\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name finishUpload\n  @summary Internal method. Finish upload, close Writable stream, add recored to MongoDB and flush used memory\n  @returns {undefined}\n  ###\n  finishUpload: if Meteor.isServer then (result, opts, cb) ->\n    fs.chmod result.path, @permissions, NOOP\n    self          = @\n    result.type   = @getMimeType opts.file\n    result.public = @public\n\n    @collection.insert _.clone(result), (error, _id) ->\n      if error\n        cb new Meteor.Error 500, error\n      else\n        result._id = _id\n        console.info \"[FilesCollection] [Write Method] [finishUpload] -> #{result.path}\" if self.debug\n        self.onAfterUpload and self.onAfterUpload.call self, result\n        self.emit 'afterUpload', result\n        cb null, result\n    return\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name handleUpload\n  @summary Internal method to handle upload process, pipe incoming data to Writable stream\n  @returns {undefined}\n  ###\n  handleUpload: if Meteor.isServer then (result, opts, cb) ->\n    self = @\n    if opts.eof\n      binary = opts.binData\n    else\n      binary = new Buffer opts.binData, 'base64'\n\n    try\n      if opts.eof\n        _hlEnd = ->\n          self._writableStreams[result._id].stream.end()\n          delete self._writableStreams[result._id]\n          self.emit 'finishUpload', result, opts, cb\n          return\n\n        if @_writableStreams[result._id].delayed?[opts.fileLength]\n          @_writableStreams[result._id].stream.write @_writableStreams[result._id].delayed[opts.fileLength], () -> bound ->\n            delete self._writableStreams[result._id].delayed[opts.fileLength]\n            _hlEnd()\n            return\n        else\n          _hlEnd()\n        \n      else if opts.chunkId > 0\n        @_writableStreams[result._id] ?=\n          stream: fs.createWriteStream result.path, {flags: 'a', mode: @permissions}\n          delayed: {}\n\n        _dKeys = Object.keys @_writableStreams[result._id].delayed\n        if _dKeys.length\n          _.each @_writableStreams[result._id].delayed, (delayed, num) -> bound ->\n            if num < opts.chunkId\n              self._writableStreams[result._id].stream.write delayed\n              delete self._writableStreams[result._id].delayed[num]\n            return\n\n        start = opts.chunkSize * (opts.chunkId - 1)\n        if @_writableStreams[result._id].stream.bytesWritten < start\n          @_writableStreams[result._id].delayed[opts.chunkId] = binary\n        else\n          @_writableStreams[result._id].stream.write binary\n    catch e\n      cb e\n    return\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getMimeType\n  @param {Object} fileData - File Object\n  @summary Returns file's mime-type\n  @returns {String}\n  ###\n  getMimeType: (fileData) ->\n    check fileData, Object\n    mime = fileData.type if fileData?.type\n    if Meteor.isServer and fileData.path and (not mime or not _.isString mime)\n      try\n        buf = new Buffer 262\n        fd  = fs.openSync fileData.path, 'r'\n        br  = fs.readSync fd, buf, 0, 262, 0\n        fs.close fd, NOOP\n        buf = buf.slice 0, br if br < 262\n        {mime, ext} = fileType buf\n      catch error\n    if not mime or not _.isString mime\n      mime = 'application/octet-stream' \n    return mime\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getFileName\n  @param {Object} fileData - File Object\n  @summary Returns file's name\n  @returns {String}\n  ###\n  getFileName: (fileData) ->\n    fileName = fileData.name or fileData.fileName\n    if _.isString(fileName) and fileName.length > 0\n      cleanName = (str) -> str.replace(/\\.\\./g, '').replace /\\//g, ''\n      return cleanName(fileData.name or fileData.fileName)\n    else\n      return ''\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getUser\n  @summary Returns object with `userId` and `user()` method which return user's object\n  @returns {Object}\n  ###\n  getUser: (http) ->\n    result = \n      user: -> return null\n      userId: null\n      \n    if Meteor.isServer\n      if http\n        cookie = http.request.Cookies\n        if _.has(Package, 'accounts-base') and cookie.has 'meteor_login_token'\n          user = Meteor.users.findOne 'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken cookie.get 'meteor_login_token'\n          if user\n            result.user = () -> return user\n            result.userId = user._id\n    else\n      if _.has(Package, 'accounts-base') and Meteor.userId()\n        result.user = -> return Meteor.user()\n        result.userId = Meteor.userId()\n    return result\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name getExt\n  @param {String} FileName - File name\n  @summary Get extension from FileName\n  @returns {Object}\n  ###\n  getExt: (fileName) ->\n    if !!~fileName.indexOf('.')\n      extension = fileName.split('.').pop()\n      return { ext: extension, extension, extensionWithDot: '.' + extension }\n    else\n      return { ext: '', extension: '', extensionWithDot: '' }\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name dataToSchema\n  @param {Object} data - File data\n  @summary Build object in accordance with schema from File data\n  @returns {Object}\n  ###\n  dataToSchema: (data) ->\n    return {\n      name:       data.name\n      extension:  data.extension\n      path:       data.path\n      meta:       data.meta\n      type:       data.type\n      size:       data.size\n      versions:\n        original:\n          path: data.path\n          size: data.size\n          type: data.type\n          extension: data.extension\n      isVideo: !!~data.type.toLowerCase().indexOf('video')\n      isAudio: !!~data.type.toLowerCase().indexOf('audio')\n      isImage: !!~data.type.toLowerCase().indexOf('image')\n      isText:  !!~data.type.toLowerCase().indexOf('text')\n      isJSON:  !!~data.type.toLowerCase().indexOf('json')\n      _prefix: data._prefix or @_prefix\n      _storagePath:    data._storagePath or @storagePath\n      _downloadRoute:  data._downloadRoute or @downloadRoute\n      _collectionName: data._collectionName or @collectionName\n    }\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name srch\n  @param {String|Object} search - Search data\n  @summary Build search object\n  @returns {Object}\n  ###\n  srch: (search) ->\n    if search and _.isString search\n      @search =\n        _id: search\n    else\n      @search = search or {}\n    @search\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name write\n  @param {Buffer} buffer - Binary File's Buffer\n  @param {Object} opts - {fileName: '', type: '', size: 0, meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @summary Write buffer to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n  ###\n  write: if Meteor.isServer then (buffer, opts = {}, callback) ->\n    console.info \"[FilesCollection] [write()]\" if @debug\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    if @checkAccess()\n      randFileName  = @namingFunction()\n      fileName      = if opts.name or opts.fileName then opts.name or opts.fileName else randFileName\n\n      {extension, extensionWithDot} = @getExt fileName\n\n      path      = \"#{@storagePath}/#{randFileName}#{extensionWithDot}\"\n      \n      opts.type = @getMimeType opts\n      opts.meta = {} if not opts.meta\n      opts.size = buffer.length if not opts.size\n\n      result    = @dataToSchema\n        name:      fileName\n        path:      path\n        meta:      opts.meta\n        type:      opts.type\n        size:      opts.size\n        extension: extension\n\n      console.info \"[FilesCollection] [write]: #{fileName} -> #{@collectionName}\" if @debug\n\n      fs.outputFile path, buffer, 'binary', (error) -> bound ->\n        if error\n          callback and callback error\n        else\n          result._id = @collection.insert _.clone result\n          callback and callback null, result\n      \n      return @\n  else\n    undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name load\n  @param {String} url - URL to file\n  @param {Object} opts - {fileName: '', meta: {...}}\n  @param {Function} callback - function(error, fileObj){...}\n  @summary Download file, write stream to FS and add to FilesCollection Collection\n  @returns {FilesCollection} Instance\n  ###\n  load: if Meteor.isServer then (url, opts = {}, callback) ->\n    console.info \"[FilesCollection] [load(#{url}, #{JSON.stringify(opts)}, callback)]\" if @debug\n    check url, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    self          = @\n    randFileName = @namingFunction()\n    fileName     = if opts.name or opts.fileName then opts.name or opts.fileName else randFileName\n    \n    {extension, extensionWithDot} = @getExt fileName\n    path      = \"#{@storagePath}/#{randFileName}#{extensionWithDot}\"\n    opts.meta = {} if not opts.meta\n\n    request.get(url).on('error', (error)-> bound ->\n      throw new Meteor.Error 500, \"Error on [load(#{url})]:\" + JSON.stringify error\n    ).on('response', (response) -> bound ->\n\n      console.info \"[FilesCollection] [load] Received: #{url}\" if self.debug\n\n      result = self.dataToSchema\n        name:      fileName\n        path:      path\n        meta:      opts.meta\n        type:      opts.type or response.headers['content-type']\n        size:      opts.size or response.headers['content-length']\n        extension: extension\n\n      self.collection.insert _.clone(result), (error, fileRef) ->\n        if error\n          console.warn \"[FilesCollection] [load] [insert] Error: #{fileName} -> #{self.collectionName}\", error if self.debug\n          callback and callback error\n        else\n          console.info \"[FilesCollection] [load] [insert] #{fileName} -> #{self.collectionName}\" if self.debug\n          callback and callback null, fileRef\n    ).pipe fs.createWriteStream(path, {flags: 'w'})\n\n    return @\n  else\n    undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name addFile\n  @param {String} path - Path to file\n  @param {String} path - Path to file\n  @summary Add file from FS to FilesCollection\n  @returns {FilesCollection} Instance\n  ###\n  addFile: if Meteor.isServer then (path, opts = {}, callback) ->\n    console.info \"[FilesCollection] [addFile(#{path})]\" if @debug\n\n    throw new Meteor.Error 403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection' if @public\n    check path, String\n    check opts, Match.Optional Object\n    check callback, Match.Optional Function\n\n    self = @\n    fs.stat path, (error, stats) -> bound ->\n      if error\n        callback and callback error\n      else if stats.isFile()\n        pathParts = path.split '/'\n        fileName  = pathParts[pathParts.length - 1]\n\n        {extension, extensionWithDot} = self.getExt fileName\n\n        opts.type = 'application/*' if not opts.type\n        opts.meta = {} if not opts.meta\n        opts.size = stats.size if not opts.size\n\n        result = self.dataToSchema\n          name:         fileName\n          path:         path\n          meta:         opts.meta\n          type:         opts.type\n          size:         opts.size\n          extension:    extension\n          _storagePath: path.replace \"/#{fileName}\", ''\n\n        _cn = self.collectionName\n        self.collection.insert _.clone(result), (error, record) ->\n          if error\n            console.warn \"[FilesCollection] [addFile] [insert] Error: #{fileName} -> #{_cn}\", error if self.debug\n            callback and callback error\n          else\n            console.info \"[FilesCollection] [addFile] [insert]: #{fileName} -> #{_cn}\" if self.debug\n            callback and callback null, result\n      else\n        callback and callback new Meteor.Error 400, \"[FilesCollection] [addFile(#{path})]: File does not exist\"\n\n    return @\n  else\n    undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name findOne\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @summary Load file\n  @returns {FilesCollection} Instance\n  ###\n  findOne: (search) ->\n    console.info \"[FilesCollection] [findOne(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n    @srch search\n\n    if @checkAccess()\n      @currentFile = @collection.findOne @search\n      @cursor      = null\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name find\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @summary Load file or bunch of files\n  @returns {FilesCollection} Instance\n  ###\n  find: (search) ->\n    console.info \"[FilesCollection] [find(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n    @srch search\n\n    if @checkAccess()\n      @currentFile = null\n      @cursor = @collection.find @search\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name get\n  @summary Return value of current cursor or file\n  @returns {Object|[Object]}\n  ###\n  get: () ->\n    console.info '[FilesCollection] [get()]' if @debug\n    return @cursor.fetch() if @cursor\n    return @currentFile\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name fetch\n  @summary Alias for `get()` method\n  @returns {[Object]}\n  ###\n  fetch: () ->\n    console.info '[FilesCollection] [fetch()]' if @debug\n    data = @get()\n    if not _.isArray data\n      return [data]\n    else\n      data\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name insert\n  @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n  @param {Object} config - Configuration object with next properties:\n    {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n    {Object}      meta           - Additional data as object, use later for search\n    {Boolean}     allowWebWorkers- Allow/Deny WebWorkers usage\n    {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n    {Number|dynamic} chunkSize   - Chunk size for upload\n    {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n    {Function}    onStart        - Callback triggered when upload is started after all successful validations, with two arguments `error` (always null) and `fileRef`\n    {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileData`\n    {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n    {Function}    onBeforeUpload - Callback triggered right before upload is started:\n        return true to continue\n        return false to abort upload\n  @param {Boolean} autoStart     - Start upload immediately. If set to false, you need manually call .start() method on returned class. Useful to set EventListeners.\n  @summary Upload file to server over DDP\n  @returns {UploadInstance} Instance. UploadInstance has next properties:\n    {ReactiveVar} onPause  - Is upload process on the pause?\n    {ReactiveVar} state    - active|paused|aborted|completed\n    {ReactiveVar} progress - Current progress in percentage\n    {Function}    pause    - Pause upload process\n    {Function}    continue - Continue paused upload process\n    {Function}    toggle   - Toggle continue/pause if upload process\n    {Function}    abort    - Abort upload\n    {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n  ###\n  insert: if Meteor.isClient then (config, autoStart = true) ->\n    if @checkAccess()\n      mName = if autoStart then 'start' else 'manual'\n      return (new @_UploadInstance(config, @))[mName]()\n    else\n      throw new Meteor.Error 401, \"[FilesCollection] [insert] Access Denied\"\n  else undefined\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name _UploadInstance\n  @class UploadInstance\n  @summary Internal Class, used in upload\n  ###\n  _UploadInstance: if Meteor.isClient then class UploadInstance\n    __proto__: EventEmitter.prototype\n    constructor: (@config, @collection) ->\n      EventEmitter.call @\n      console.info '[FilesCollection] [insert()]' if @collection.debug\n      self                     = @\n      @config.meta            ?= {}\n      @config.streams         ?= 2\n      @config.streams          = 2 if @config.streams < 1\n      @config.chunkSize       ?= @collection.chunkSize\n      @config.allowWebWorkers ?= true\n\n      check @config, {\n        file:            Match.Any\n        meta:            Match.Optional Object\n        onError:         Match.Optional Function\n        onAbort:         Match.Optional Function\n        streams:         Match.OneOf 'dynamic', Number\n        onStart:         Match.Optional Function\n        chunkSize:       Match.OneOf 'dynamic', Number\n        onUploaded:      Match.Optional Function\n        onProgress:      Match.Optional Function\n        onBeforeUpload:  Match.Optional Function\n        allowWebWorkers: Boolean\n      }\n\n      if @config.file\n        console.time('insert ' + @config.file.name) if @collection.debug\n        console.time('loadFile ' + @config.file.name) if @collection.debug\n\n        if Worker and @config.allowWebWorkers\n          @worker = new Worker '/packages/ostrio_files/worker.js'\n        else\n          @worker = null\n\n        @trackerComp  = null\n        @currentChunk = 0\n        @sentChunks   = 0\n        @EOFsent      = false\n        @transferTime = 0\n        @fileLength = 1\n        @fileId     = @collection.namingFunction()\n        @pipes      = []\n        @fileData   =\n          size: @config.file.size\n          type: @config.file.type\n          name: @config.file.name\n\n        @fileData = _.extend @fileData, @collection.getExt(self.config.file.name), {mime: @collection.getMimeType(@fileData)}\n        @fileData['mime-type'] = @fileData.mime\n\n        @result = new @collection._FileUpload _.extend self.config, {@fileData, @fileId, MeteorFileAbort: @collection.methodNames.MeteorFileAbort}\n\n        @beforeunload = (e) ->\n          message = if _.isFunction(self.collection.onbeforeunloadMessage) then self.collection.onbeforeunloadMessage.call(self.result, self.fileData) else self.collection.onbeforeunloadMessage\n          e.returnValue = message if e\n          return message\n        @result.config.beforeunload = @beforeunload\n        window.addEventListener 'beforeunload', @beforeunload, false\n          \n        @result.config._onEnd = -> self.emitEvent '_onEnd'\n\n        @addListener 'end', @end\n        @addListener 'start', @start\n        @addListener 'upload', @upload\n        @addListener 'sendEOF', @sendEOF\n        @addListener 'prepare', @prepare\n        @addListener 'sendViaDDP', @sendViaDDP\n        @addListener 'proceedChunk', @proceedChunk\n        @addListener 'createStreams', @createStreams\n\n        @addListener 'calculateStats', _.throttle ->\n          _t = (self.transferTime / self.sentChunks) / self.config.streams\n          self.result.estimateTime.set (_t * (self.fileLength - self.sentChunks))\n          self.result.estimateSpeed.set (self.config.chunkSize / (_t / 1000))\n          progress = Math.round((self.sentChunks / self.fileLength) * 100)\n          self.result.progress.set progress\n          self.config.onProgress and self.config.onProgress.call self.result, progress, self.fileData\n          self.result.emitEvent 'progress', [progress, self.fileData]\n          return\n        , 250\n\n        @addListener '_onEnd', -> \n          self.worker.terminate() if self.worker\n          self.trackerComp.stop() if self.trackerComp\n          window.removeEventListener('beforeunload', self.beforeunload, false) if self.beforeunload\n          self.result.progress.set(0) if self.result\n      else\n        throw new Meteor.Error 500, \"[FilesCollection] [insert] Have you forget to pass a File itself?\"\n\n    end: (error, data) ->\n      console.timeEnd('insert ' + @config.file.name) if @collection.debug\n      @emitEvent '_onEnd'\n      @result.emitEvent 'uploaded', [error, data]\n      @config.onUploaded and @config.onUploaded.call @result, error, data\n      if error\n        console.warn \"[FilesCollection] [insert] [end] Error: \", error if @collection.debug\n        @result.abort()\n        @result.state.set 'aborted'\n        @result.emitEvent 'error', [error, @fileData]\n        @config.onError and @config.onError.call @result, error, @fileData\n      else\n        @result.state.set 'completed'\n        @collection.emitEvent 'afterUpload', [data]\n      @result.emitEvent 'end', [error, (data or @fileData)]\n      return @result\n\n    sendViaDDP: (evt) ->\n      self = @\n      opts =\n        file:       @fileData\n        fileId:     @fileId\n        binData:    evt.data.bin\n        chunkId:    evt.data.chunkId\n        chunkSize:  @config.chunkSize\n        fileLength: @fileLength\n\n      @emitEvent 'data', [evt.data.bin]\n      if @pipes.length\n        for pipeFunc in @pipes\n          opts.binData = pipeFunc opts.binData\n\n      if @fileLength is evt.data.chunkId\n        console.timeEnd('loadFile ' + @config.file.name) if @collection.debug\n        @emitEvent 'readEnd'\n\n      if opts.binData and opts.binData.length\n        Meteor.call @collection.methodNames.MeteorFileWrite, opts, (error) ->\n          ++self.sentChunks\n          self.transferTime += (+new Date) - evt.data.start\n          if error\n            self.emitEvent 'end', [error]\n          else\n            if self.sentChunks >= self.fileLength\n              self.emitEvent 'sendEOF', [opts]\n            else if self.currentChunk < self.fileLength\n              self.emitEvent 'upload'\n            self.emitEvent 'calculateStats'\n          return\n      return\n\n    sendEOF: (opts) ->\n      unless @EOFsent\n        @EOFsent = true\n        self = @\n        opts =\n          eof:        true\n          meta:       @config.meta\n          file:       @fileData\n          fileId:     @fileId\n          chunkSize:  @config.chunkSize\n          fileLength: @fileLength\n\n        Meteor.call @collection.methodNames.MeteorFileWrite, opts, -> \n          self.emitEvent 'end', arguments\n      return\n\n    proceedChunk: (chunkId, start) ->\n      self       = @\n      chunk      = @config.file.slice (@config.chunkSize * (chunkId - 1)), (@config.chunkSize * chunkId)\n      fileReader = new FileReader\n\n      fileReader.onloadend = (evt) ->\n        self.emitEvent 'sendViaDDP', [{\n          data: {\n            bin: (fileReader?.result or evt.srcElement?.result or evt.target?.result).split(',')[1]\n            chunkId: chunkId\n            start: start\n          }\n        }]\n        return\n      fileReader.onerror = (e) ->\n        self.emitEvent 'end', [(e.target or e.srcElement).error]\n        return\n\n      fileReader.readAsDataURL chunk\n      return\n\n    upload: -> \n      start = +new Date\n      if @result.onPause.get()\n        self = @\n        @result.continueFunc = ->\n          self.emitEvent 'createStreams'\n          return\n        return\n\n      if @result.state.get() is 'aborted'\n        return @\n\n      if @currentChunk <= @fileLength\n        ++@currentChunk\n        if @worker\n          @worker.postMessage({@sentChunks, start, @currentChunk, chunkSize: @config.chunkSize, file: @config.file})\n        else\n          @emitEvent 'proceedChunk', [@currentChunk, start]\n      return\n\n    createStreams: ->\n      i    = 1\n      self = @\n      while i <= @config.streams\n        self.emitEvent 'upload'\n        i++\n      return\n\n    prepare: ->\n      self = @\n\n      @config.onStart and @config.onStart.call @result, null, @fileData\n      @result.emitEvent 'start', [null, @fileData]\n\n      if @config.chunkSize is 'dynamic'\n        @config.chunkSize = @config.file.size / 1000\n        if @config.chunkSize < 327680\n          @config.chunkSize = 327680\n        else if @config.chunkSize > 1048576\n          @config.chunkSize = 1048576\n\n      @config.chunkSize = Math.floor(@config.chunkSize / 8) * 8\n      _len = Math.ceil(@config.file.size / @config.chunkSize)\n      if @config.streams is 'dynamic'\n        @config.streams = _.clone _len\n        @config.streams = 24 if @config.streams > 24\n\n      @fileLength               = if _len <= 0 then 1 else _len\n      @config.streams           = @fileLength if @config.streams > @fileLength\n      @result.config.fileLength = @fileLength\n\n      self.emitEvent 'createStreams'\n      return\n\n    pipe: (func) -> \n      @pipes.push func\n      return @\n\n    start: ->\n      self = @\n      if @config.file.size <= 0\n        @end new Meteor.Error 400, 'Can\\'t upload empty file'\n        return @result\n\n      if @config.onBeforeUpload and _.isFunction @config.onBeforeUpload\n        isUploadAllowed = @config.onBeforeUpload.call _.extend(@result, @collection.getUser()), @fileData\n        if isUploadAllowed isnt true\n          return @end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'config.onBeforeUpload() returned false')\n\n      if @collection.onBeforeUpload and _.isFunction @collection.onBeforeUpload\n        isUploadAllowed = @collection.onBeforeUpload.call _.extend(@result, @collection.getUser()), @fileData\n        if isUploadAllowed isnt true\n          return @end new Meteor.Error(403, if _.isString(isUploadAllowed) then isUploadAllowed else 'collection.onBeforeUpload() returned false')\n\n      Tracker.autorun (computation) ->\n        self.trackerComp = computation\n        unless self.result.onPause.get()\n          if Meteor.status().connected\n            self.result.continue()\n            console.info '[FilesCollection] [insert] [Tracker] [continue]' if self.collection.debug\n          else\n            self.result.pause()\n            console.info '[FilesCollection] [insert] [Tracker] [pause]' if self.collection.debug\n        return\n\n      if @worker\n        @worker.onmessage = (evt) ->\n          if evt.data.error\n            console.warn evt.data.error if self.collection.debug\n            self.emitEvent 'proceedChunk', [evt.data.chunkId, evt.data.start]\n          else\n            self.emitEvent 'sendViaDDP', [evt]\n          return\n        @worker.onerror   = (e) -> \n          self.emitEvent 'end', [e.message]\n          return\n\n      if @collection.debug\n        if @worker\n          console.info \"[FilesCollection] [insert] using WebWorkers\"\n        else\n          console.info \"[FilesCollection] [insert] using MainThread\"\n\n      self.emitEvent 'prepare'\n      return @result\n\n    manual: -> \n      self = @\n      @result.start = ->\n        self.emitEvent 'start'\n        return\n      @result.pipe = (func) ->\n        self.pipe func\n        return @\n      return @result\n  else undefined\n\n  ###\n  @locus Client\n  @memberOf FilesCollection\n  @name _FileUpload\n  @class FileUpload\n  @summary Internal Class, instance of this class is returned from `insert()` method\n  ###\n  _FileUpload: if Meteor.isClient then class FileUpload\n    __proto__: EventEmitter.prototype\n    constructor: (@config) ->\n      EventEmitter.call @\n      @file          = _.extend @config.file, @config.fileData\n      @state         = new ReactiveVar 'active'\n      @onPause       = new ReactiveVar false\n      @progress      = new ReactiveVar 0\n      @estimateTime  = new ReactiveVar 1000\n      @estimateSpeed = new ReactiveVar 0\n    continueFunc:  -> return\n    pause: ->\n      unless @onPause.get()\n        @onPause.set true\n        @state.set 'paused'\n        @emitEvent 'pause', [@file]\n      return\n    continue: ->\n      if @onPause.get()\n        @onPause.set false\n        @state.set 'active'\n        @emitEvent 'continue', [@file]\n        @continueFunc.call()\n        @continueFunc = -> return\n      return\n    toggle: ->\n      if @onPause.get() then @continue() else @pause()\n      return\n    abort: ->\n      window.removeEventListener 'beforeunload', @config.beforeunload, false\n      @config.onAbort and @config.onAbort.call @, @file\n      @emitEvent 'abort', [@file]\n      @pause()\n      @config._onEnd()\n      @state.set 'aborted'\n      console.timeEnd('insert ' + @config.file.name) if @config.debug\n      if @config.fileLength\n        Meteor.call @config.MeteorFileAbort, {fileId: @config.fileId, fileLength: @config.fileLength, fileData: @config.fileData}\n      return\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name remove\n  @param {String|Object} search - `_id` of the file or `Object` like, {prop:'val'}\n  @param {Function} cb - Callback with one `error` argument\n  @summary Remove file(s) on cursor or find and remove file(s) if search is set\n  @returns {FilesCollection} Instance\n  ###\n  remove: (search, cb) ->\n    console.info \"[FilesCollection] [remove(#{JSON.stringify(search)})]\" if @debug\n    check search, Match.Optional Match.OneOf Object, String\n    check cb, Match.Optional Function\n\n    if @checkAccess()\n      @srch search\n      if Meteor.isClient\n        Meteor.call @methodNames.MeteorFileUnlink, rcp(@), (if cb then cb else NOOP)\n\n      if Meteor.isServer\n        files = @collection.find @search\n        if files.count() > 0\n          self = @\n          files.forEach (file) -> self.unlink file\n        @collection.remove @search, cb\n    else\n      cb and cb new Meteor.Error 401, '[FilesCollection] [remove] Access denied!'\n    return @\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name update\n  @see http://docs.meteor.com/#/full/update\n  @summary link Mongo.Collection update method\n  @returns {Mongo.Collection} Instance\n  ###\n  update: ->\n    @collection.update.apply @collection, arguments\n    return @collection\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name deny\n  @name allow\n  @param {Object} rules\n  @see http://docs.meteor.com/#/full/allow\n  @summary link Mongo.Collection allow/deny methods\n  @returns {Mongo.Collection} Instance\n  ###\n  deny: if Meteor.isServer then (rules) ->\n    @collection.deny rules\n    return @collection\n  else undefined\n  allow: if Meteor.isServer then (rules) ->\n    @collection.allow rules\n    return @collection\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name denyClient\n  @name allowClient\n  @see http://docs.meteor.com/#/full/allow\n  @summary Shorthands for Mongo.Collection allow/deny methods\n  @returns {Mongo.Collection} Instance\n  ###\n  denyClient: if Meteor.isServer then ->\n    @collection.deny\n      insert: -> true\n      update: -> true\n      remove: -> true\n    return @collection\n  else undefined\n  allowClient: if Meteor.isServer then ->\n    @collection.allow\n      insert: -> true\n      update: -> true\n      remove: -> true\n    return @collection\n  else undefined\n\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name unlink\n  @param {Object} fileRef - fileObj\n  @param {String} version - [Optional] file's version\n  @summary Unlink files and it's versions from FS\n  @returns {FilesCollection} Instance\n  ###\n  unlink: if Meteor.isServer then (fileRef, version) ->\n    console.info \"[FilesCollection] [unlink(#{fileRef._id}, #{version})]\" if @debug\n    if version\n      if fileRef.versions?[version] and fileRef.versions[version]?.path\n        fs.unlink fileRef.versions[version].path, NOOP\n    else\n      if fileRef.versions and not _.isEmpty fileRef.versions\n        _.each fileRef.versions, (vRef) -> bound ->\n          fs.unlink vRef.path, NOOP\n      fs.unlink fileRef.path, NOOP\n    return @\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name _404\n  @summary Internal method, used to return 404 error\n  @returns {undefined}\n  ###\n  _404: if Meteor.isServer then (http) ->\n    console.warn \"[FilesCollection] [download(#{http.request.originalUrl})] [_404] File not found\" if @debug\n    text = 'File Not Found :('\n    http.response.writeHead 404,\n      'Content-Length': text.length\n      'Content-Type':   'text/plain'\n    http.response.end text\n    return\n  else undefined\n\n  ###\n  @locus Server\n  @memberOf FilesCollection\n  @name download\n  @param {Object|Files} self - Instance of FilesCollection\n  @summary Initiates the HTTP response\n  @returns {undefined}\n  ###\n  download: if Meteor.isServer then (http, version = 'original') ->\n    console.info \"[FilesCollection] [download(#{http.request.originalUrl}, #{version})]\" if @debug\n    responseType = '200'\n    if @currentFile\n      if _.has(@currentFile, 'versions') and _.has @currentFile.versions, version\n        fileRef = @currentFile.versions[version]\n      else\n        fileRef = @currentFile\n    else\n      fileRef = false\n\n    if not fileRef or not _.isObject(fileRef)\n      return @_404 http\n    else if @currentFile\n      self = @\n\n      if @downloadCallback\n        unless @downloadCallback.call _.extend(http, @getUser(http)), @currentFile\n          return @_404 http\n\n      if @interceptDownload and _.isFunction @interceptDownload\n        if @interceptDownload(http, @currentFile, version) is true\n          return\n\n      fs.stat fileRef.path, (statErr, stats) -> bound ->\n        if statErr or not stats.isFile()\n          return self._404 http\n\n        fileRef.size = stats.size if stats.size isnt fileRef.size and not self.integrityCheck\n        responseType = '400' if stats.size isnt fileRef.size and self.integrityCheck\n        partiral     = false\n        reqRange     = false\n\n        if http.params.query.download and http.params.query.download == 'true'\n          dispositionType = 'attachment; '\n        else\n          dispositionType = 'inline; '\n\n        dispositionName     = \"filename=\\\"#{encodeURIComponent(self.currentFile.name)}\\\"; filename=*UTF-8\\\"#{encodeURIComponent(self.currentFile.name)}\\\"; \"\n        dispositionEncoding = 'charset=utf-8'\n\n        http.response.setHeader 'Content-Type', fileRef.type\n        http.response.setHeader 'Content-Disposition', dispositionType + dispositionName + dispositionEncoding\n        http.response.setHeader 'Accept-Ranges', 'bytes'\n        http.response.setHeader 'Last-Modified', self.currentFile?.updatedAt?.toUTCString() if self.currentFile?.updatedAt?.toUTCString()\n        http.response.setHeader 'Connection', 'keep-alive'\n\n        if http.request.headers.range\n          partiral = true\n          array    = http.request.headers.range.split /bytes=([0-9]*)-([0-9]*)/\n          start    = parseInt array[1]\n          end      = parseInt array[2]\n          if isNaN(end)\n            end    = fileRef.size - 1\n          take     = end - start\n        else\n          start    = 0\n          end      = fileRef.size - 1\n          take     = fileRef.size\n\n        if partiral or (http.params.query.play and http.params.query.play == 'true')\n          reqRange = {start, end}\n          if isNaN(start) and not isNaN end\n            reqRange.start = end - take\n            reqRange.end   = end\n          if not isNaN(start) and isNaN end\n            reqRange.start = start\n            reqRange.end   = start + take\n\n          reqRange.end = fileRef.size - 1 if ((start + take) >= fileRef.size)\n          http.response.setHeader 'Pragma', 'private'\n          http.response.setHeader 'Expires', new Date(+new Date + 1000*32400).toUTCString()\n          http.response.setHeader 'Cache-Control', 'private, maxage=10800, s-maxage=32400'\n\n          if self.strict and (reqRange.start >= (fileRef.size - 1) or reqRange.end > (fileRef.size - 1))\n            responseType = '416'\n          else\n            responseType = '206'\n        else\n          http.response.setHeader 'Cache-Control', self.cacheControl\n          responseType = '200'\n\n        streamErrorHandler = (error) ->\n          http.response.writeHead 500\n          http.response.end error.toString()\n\n        switch responseType\n          when '400'\n            console.warn \"[FilesCollection] [download(#{fileRef.path}, #{version})] [400] Content-Length mismatch!\" if self.debug\n            text = 'Content-Length mismatch!'\n            http.response.writeHead 400,\n              'Content-Type':   'text/plain'\n              'Cache-Control':  'no-cache'\n              'Content-Length': text.length\n            http.response.end text\n            break\n          when '404'\n            return self._404 http\n            break\n          when '416'\n            console.info \"[FilesCollection] [download(#{fileRef.path}, #{version})] [416] Content-Range is not specified!\" if self.debug\n            http.response.writeHead 416,\n              'Content-Range': \"bytes */#{fileRef.size}\"\n            http.response.end()\n            break\n          when '200'\n            console.info \"[FilesCollection] [download(#{fileRef.path}, #{version})] [200]\" if self.debug\n            stream = fs.createReadStream fileRef.path\n            stream.on('open', =>\n              http.response.writeHead 200\n              if self.throttle\n                stream.pipe( new Throttle {bps: self.throttle, chunksize: self.chunkSize}\n                ).pipe http.response\n              else\n                stream.pipe http.response\n            ).on 'error', streamErrorHandler\n            break\n          when '206'\n            console.info \"[FilesCollection] [download(#{fileRef.path}, #{version})] [206]\" if self.debug\n            http.response.setHeader 'Content-Range', \"bytes #{reqRange.start}-#{reqRange.end}/#{fileRef.size}\"\n            http.response.setHeader 'Trailer', 'expires'\n            http.response.setHeader 'Transfer-Encoding', 'chunked'\n            if self.throttle\n              stream = fs.createReadStream fileRef.path, {start: reqRange.start, end: reqRange.end}\n              stream.on('open', -> http.response.writeHead 206\n              ).on('error', streamErrorHandler\n              ).on('end', -> http.response.end()\n              ).pipe( new Throttle {bps: self.throttle, chunksize: self.chunkSize}\n              ).pipe http.response\n            else\n              stream = fs.createReadStream fileRef.path, {start: reqRange.start, end: reqRange.end}\n              stream.on('open', -> http.response.writeHead 206\n              ).on('error', streamErrorHandler\n              ).on('end', -> http.response.end()\n              ).pipe http.response\n            break\n      return\n    else\n      return @_404 http\n  else undefined\n\n  ###\n  @locus Anywhere\n  @memberOf FilesCollection\n  @name link\n  @param {Object}   fileRef - File reference object\n  @param {String}   version - [Optional] Version of file you would like to request\n  @summary Returns downloadable URL\n  @returns {String} Empty string returned in case if file not found in DB\n  ###\n  link: (fileRef, version = 'original') ->\n    console.info '[FilesCollection] [link()]' if @debug\n    if _.isString fileRef\n      version = fileRef\n      fileRef = null\n    return '' if not fileRef and not @currentFile\n    return formatFleURL (fileRef or @currentFile), version\n\n###\n@locus Anywhere\n@private\n@name formatFleURL\n@param {Object} fileRef - File reference object\n@param {String} version - [Optional] Version of file you would like build URL for\n@param {Boolean}  pub   - [Optional] is file located in publicity available folder?\n@summary Returns formatted URL for file\n@returns {String} Downloadable link\n###\nformatFleURL = (fileRef, version = 'original') ->\n  root = __meteor_runtime_config__.ROOT_URL.replace(/\\/+$/, '')\n\n  if fileRef?.extension?.length > 0\n    ext = '.' + fileRef.extension\n  else\n    ext = ''\n\n  if fileRef.public is true\n    return root + (if version is 'original' then \"#{fileRef._downloadRoute}/#{fileRef._id}#{ext}\" else \"#{fileRef._downloadRoute}/#{version}-#{fileRef._id}#{ext}\")\n  else\n    return root + \"#{fileRef._downloadRoute}/#{fileRef._collectionName}/#{fileRef._id}/#{version}/#{fileRef._id}#{ext}\"\n\nif Meteor.isClient\n  ###\n  @locus Client\n  @TemplateHelper\n  @name fileURL\n  @param {Object} fileRef - File reference object\n  @param {String} version - [Optional] Version of file you would like to request\n  @summary Get download URL for file by fileRef, even without subscription\n  @example {{fileURL fileRef}}\n  @returns {String}\n  ###\n  Template.registerHelper 'fileURL', (fileRef, version) ->\n    return undefined if not fileRef or not _.isObject fileRef\n    version = if not version or not _.isString(version) then 'original' else version\n    if fileRef._id\n      return formatFleURL fileRef, version\n    else\n      return ''\n\nMeteor.Files = FilesCollection"]}}