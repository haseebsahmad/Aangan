{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\imports\\api\\reviews.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"imports/api/reviews.js","filename":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\imports\\api\\reviews.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main","root":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\imports\\api\\reviews.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/reviews.js"}},"code":"// import { Meteor } from 'meteor/meteor';\n// import { Mongo } from 'meteor/mongo';\n// import { check } from 'meteor/check';\n// export const Reviews = new Mongo.Collection('reviews');\n// if (Meteor.isServer) {\n//     // This code only runs on the server\n//   Meteor.publish('reviews', () => {\n//         return Reviews.find({});\n//     });\n// }\n// Meteor.methods({\n//     'reviews.insert'(review){\n//         if (Roles.userIsInRole(Meteor.userId(), 'customer')){\n//             // console.log(Meteor.userId)\n//             // console.log(\"inserting: \", review);\n//             if (review.company){\n//                 if (Reviews.find({company:review.company, reviewer: Meteor.userId()})){\n//                     Reviews.remove({company:review.company, reviewer: Meteor.userId()})\n//                 }\n//                 Reviews.insert({\n//                     company: review.company,\n//                     rating: review.rating,\n//                     reviewer: Meteor.userId(),\n//                     remarks: review.remarks,\n//                     username: Meteor.users.findOne({_id: Meteor.userId()}).username,\n//                     reviewer_dp: review.reviewer_dp,\n//                 });\n//             }\n//             if (review.guide) {\n//                 Reviews.insert({\n//                     company: review.company,\n//                     rating: review.rating,\n//                     reviewer: Meteor.userId,\n//                     remarks: review.remarks,\n//                     username: Meteor.users.findOne({_id: Meteor.userId()}).username\n//                 });\n//             }\n//         }\n//         else{\n//             throw new Meteor.Error('not-authorized');\n//         }\n//     },\n//     'reviews.delete'(id){\n//         if (Meteor.userId == Reviews.findOne({_id:id}).reviewer){\n//             Reviews.remove({_id:id});\n//         }\n//     },\n//     'reviews.companyRate'(companyId){\n//         rates = Reviews.find({company: companyId}).map((company) => { return parseFloat(company.rating); });\n//         if (rates.length == 0){\n//             return 0;\n//         }\n//         const sum = rates.reduce((total, value) => { return total + value; });\n//         const avg = sum/(rates.length);\n//         return (avg.toFixed(1));\n//     }\n//   });","map":{"version":3,"sources":["imports/api/reviews.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["// import { Meteor } from 'meteor/meteor';\n// import { Mongo } from 'meteor/mongo';\n// import { check } from 'meteor/check';\n\n\n// export const Reviews = new Mongo.Collection('reviews');\n\n// if (Meteor.isServer) {\n//     // This code only runs on the server\n//   Meteor.publish('reviews', () => {\n//         return Reviews.find({});\n//     });\n// }\n   \n// Meteor.methods({\n//     'reviews.insert'(review){\n//         if (Roles.userIsInRole(Meteor.userId(), 'customer')){\n//             // console.log(Meteor.userId)\n//             // console.log(\"inserting: \", review);\n//             if (review.company){\n//                 if (Reviews.find({company:review.company, reviewer: Meteor.userId()})){\n//                     Reviews.remove({company:review.company, reviewer: Meteor.userId()})\n//                 }\n//                 Reviews.insert({\n//                     company: review.company,\n//                     rating: review.rating,\n//                     reviewer: Meteor.userId(),\n//                     remarks: review.remarks,\n//                     username: Meteor.users.findOne({_id: Meteor.userId()}).username,\n//                     reviewer_dp: review.reviewer_dp,\n//                 });\n//             }\n//             if (review.guide) {\n//                 Reviews.insert({\n//                     company: review.company,\n//                     rating: review.rating,\n//                     reviewer: Meteor.userId,\n//                     remarks: review.remarks,\n//                     username: Meteor.users.findOne({_id: Meteor.userId()}).username\n//                 });\n//             }\n//         }\n//         else{\n//             throw new Meteor.Error('not-authorized');\n//         }\n//     },\n\n//     'reviews.delete'(id){\n//         if (Meteor.userId == Reviews.findOne({_id:id}).reviewer){\n//             Reviews.remove({_id:id});\n//         }\n//     },\n\n//     'reviews.companyRate'(companyId){\n//         rates = Reviews.find({company: companyId}).map((company) => { return parseFloat(company.rating); });\n//         if (rates.length == 0){\n//             return 0;\n//         }\n//         const sum = rates.reduce((total, value) => { return total + value; });\n//         const avg = sum/(rates.length);\n//         return (avg.toFixed(1));\n        \n//     }\n//   });"]},"sourceType":"module","hash":"3f88b5e5eadcf0d958ff7b9854ae69a9072e52fa"}
