{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\packages\\ostrio:files\\upload.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/ostrio:files/upload.js","filename":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\packages\\ostrio:files\\upload.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main","root":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\packages\\ostrio:files\\upload.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ostrio:files/upload.js"}},"code":"module.export({\n  FileUpload: () => FileUpload,\n  UploadInstance: () => UploadInstance\n});\nlet HTTP;\nmodule.link(\"meteor/http\", {\n  HTTP(v) {\n    HTTP = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 3);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n\n}, 4);\nlet EventEmitter;\nmodule.link(\"eventemitter3\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 5);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 6);\nlet fixJSONParse, fixJSONStringify, helpers;\nmodule.link(\"./lib.js\", {\n  fixJSONParse(v) {\n    fixJSONParse = v;\n  },\n\n  fixJSONStringify(v) {\n    fixJSONStringify = v;\n  },\n\n  helpers(v) {\n    helpers = v;\n  }\n\n}, 7);\n\nconst _rootUrl = (window.__meteor_runtime_config__.MOBILE_ROOT_URL || window.__meteor_runtime_config__.ROOT_URL).replace(/\\/+$/, '');\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n/*\n * @locus Client\n * @name FileUpload\n * @class FileUpload\n * @summary Internal Class, instance of this class is returned from `.insert()` method\n */\n\nclass FileUpload extends EventEmitter {\n  constructor(config) {\n    super();\n    this.config = config;\n\n    this.config._debug('[FilesCollection] [FileUpload] [constructor]');\n\n    if (!this.config.isBase64) {\n      this.file = Object.assign({}, helpers.clone(this.config.file), this.config.fileData);\n    } else {\n      this.file = this.config.fileData;\n    }\n\n    this.state = new ReactiveVar('active');\n    this.onPause = new ReactiveVar(false);\n    this.progress = new ReactiveVar(0);\n\n    this.continueFunc = () => {};\n\n    this.estimateTime = new ReactiveVar(1000);\n    this.estimateSpeed = new ReactiveVar(0);\n    this.estimateTimer = Meteor.setInterval(() => {\n      if (this.state.get() === 'active') {\n        const _currentTime = this.estimateTime.get();\n\n        if (_currentTime > 1000) {\n          this.estimateTime.set(_currentTime - 1000);\n        }\n      }\n    }, 1000);\n  }\n\n  pause() {\n    this.config._debug('[FilesCollection] [insert] [.pause()]');\n\n    if (!this.onPause.get()) {\n      this.onPause.set(true);\n      this.state.set('paused');\n      this.emit('pause', this.file);\n    }\n  }\n\n  continue() {\n    this.config._debug('[FilesCollection] [insert] [.continue()]');\n\n    if (this.onPause.get()) {\n      this.onPause.set(false);\n      this.state.set('active');\n      this.emit('continue', this.file);\n      this.continueFunc();\n    }\n  }\n\n  toggle() {\n    this.config._debug('[FilesCollection] [insert] [.toggle()]');\n\n    if (this.onPause.get()) {\n      this.continue();\n    } else {\n      this.pause();\n    }\n  }\n\n  abort() {\n    this.config._debug('[FilesCollection] [insert] [.abort()]');\n\n    window.removeEventListener('beforeunload', this.config.beforeunload, false);\n    this.pause();\n\n    this.config._onEnd();\n\n    this.state.set('aborted');\n    this.config.onAbort && this.config.onAbort.call(this, this.file);\n    this.emit('abort', this.file);\n\n    if (this.config.debug) {\n      console.timeEnd(\"insert \".concat(this.config.fileData.name));\n    }\n\n    this.config.ddp.call(this.config._Abort, this.config.fileId);\n  }\n\n}\n\nclass UploadInstance extends EventEmitter {\n  constructor(config, collection) {\n    super();\n    this.config = config;\n    this.collection = collection;\n\n    this.collection._debug('[FilesCollection] [insert()]');\n\n    if (!this.config.ddp) {\n      this.config.ddp = this.collection.ddp;\n    }\n\n    if (!this.config.meta) {\n      this.config.meta = {};\n    }\n\n    if (!this.config.streams) {\n      this.config.streams = 2;\n    }\n\n    if (this.config.streams < 1) {\n      this.config.streams = 2;\n    }\n\n    if (!helpers.isString(this.config.transport)) {\n      this.config.transport = 'ddp';\n    }\n\n    this.config.transport = this.config.transport.toLowerCase();\n\n    if (this.config.transport !== 'ddp' && this.config.transport !== 'http') {\n      this.config.transport = 'ddp';\n    }\n\n    if (!this.config.chunkSize) {\n      this.config.chunkSize = this.collection.chunkSize;\n    }\n\n    if (!helpers.isBoolean(this.config.allowWebWorkers)) {\n      this.config.allowWebWorkers = true;\n    }\n\n    check(this.config, {\n      ddp: Match.Any,\n      file: Match.Any,\n      fileId: Match.Optional(String),\n      meta: Match.Optional(Object),\n      type: Match.Optional(String),\n      onError: Match.Optional(Function),\n      onAbort: Match.Optional(Function),\n      streams: Match.OneOf('dynamic', Number),\n      onStart: Match.Optional(Function),\n      fileName: Match.Optional(String),\n      isBase64: Match.Optional(Boolean),\n      transport: Match.OneOf('http', 'ddp'),\n      chunkSize: Match.OneOf('dynamic', Number),\n      onUploaded: Match.Optional(Function),\n      onProgress: Match.Optional(Function),\n      onBeforeUpload: Match.Optional(Function),\n      allowWebWorkers: Boolean\n    });\n\n    if (this.config.isBase64 === true) {\n      check(this.config.file, String);\n\n      if (!this.config.fileName) {\n        throw new Meteor.Error(400, '\"fileName\" must me specified for base64 upload!');\n      }\n\n      if (this.config.file.includes('data:')) {\n        this.config.file = this.config.file.replace('data:', '');\n      }\n\n      if (this.config.file.includes(',')) {\n        const _file = this.config.file.split(',');\n\n        this.fileData = {\n          size: Math.floor(_file[1].replace(/\\=/g, '').length / 4 * 3),\n          type: _file[0].split(';')[0],\n          name: this.config.fileName,\n          meta: this.config.meta\n        };\n        this.config.file = _file[1];\n      } else if (!this.config.type) {\n        throw new Meteor.Error(400, '\"type\" must me specified for base64 upload! And represent mime-type of the file');\n      } else {\n        this.fileData = {\n          size: Math.floor(this.config.file.replace(/\\=/g, '').length / 4 * 3),\n          type: this.config.type,\n          name: this.config.fileName,\n          meta: this.config.meta\n        };\n      }\n    }\n\n    if (this.config.file) {\n      if (!this.config.isBase64) {\n        try {\n          if (!this.config.file.name || !this.config.file.size) {\n            throw new Meteor.Error(500, 'Not a File!');\n          }\n        } catch (e) {\n          throw new Meteor.Error(500, '[FilesCollection] [insert] Insert method accepts File, not a FileList. You need to provide a real File. File must have `.name` property, and its size must be larger than zero.');\n        }\n\n        this.fileData = {\n          size: this.config.file.size,\n          type: this.config.type || this.config.file.type,\n          name: this.config.fileName || this.config.file.name,\n          meta: this.config.meta\n        };\n      }\n\n      if (this.collection.debug) {\n        console.time(\"insert \".concat(this.fileData.name));\n        console.time(\"loadFile \".concat(this.fileData.name));\n      }\n\n      if (this.collection._supportWebWorker && this.config.allowWebWorkers) {\n        try {\n          this.worker = new Worker(this.collection._webWorkerUrl);\n        } catch (wwError) {\n          this.worker = false;\n\n          this.collection._debug('[FilesCollection] [insert] [create WebWorker]: Can\\'t create WebWorker, fallback to MainThread', wwError);\n        }\n      } else {\n        this.worker = null;\n      }\n\n      this.startTime = {};\n      this.config.debug = this.collection.debug;\n      this.config._debug = this.collection._debug;\n      this.currentChunk = 0;\n      this.transferTime = 0;\n      this.trackerComp = null;\n      this.sentChunks = 0;\n      this.fileLength = 1;\n      this.EOFsent = false;\n      this.fileId = this.config.fileId || Random.id();\n      this.FSName = this.collection.namingFunction ? this.collection.namingFunction(this.fileData) : this.fileId;\n      this.pipes = [];\n      this.fileData = Object.assign(this.fileData, this.collection._getExt(this.fileData.name), {\n        mime: this.collection._getMimeType(this.fileData)\n      });\n      this.fileData['mime-type'] = this.fileData.mime;\n      this.result = new FileUpload(Object.assign({}, this.config, {\n        fileData: this.fileData,\n        fileId: this.fileId,\n        _Abort: this.collection._methodNames._Abort\n      }));\n\n      this.beforeunload = e => {\n        const message = helpers.isFunction(this.collection.onbeforeunloadMessage) ? this.collection.onbeforeunloadMessage.call(this.result, this.fileData) : this.collection.onbeforeunloadMessage;\n\n        if (e) {\n          e.returnValue = message;\n        }\n\n        return message;\n      };\n\n      this.result.config.beforeunload = this.beforeunload;\n      window.addEventListener('beforeunload', this.beforeunload, false);\n\n      this.result.config._onEnd = () => this.emit('_onEnd');\n\n      this.addListener('end', this.end);\n      this.addListener('start', this.start);\n      this.addListener('upload', this.upload);\n      this.addListener('sendEOF', this.sendEOF);\n      this.addListener('prepare', this.prepare);\n      this.addListener('sendChunk', this.sendChunk);\n      this.addListener('proceedChunk', this.proceedChunk);\n      this.addListener('createStreams', this.createStreams);\n      this.addListener('calculateStats', helpers.throttle(() => {\n        const _t = this.transferTime / this.sentChunks / this.config.streams;\n\n        this.result.estimateTime.set(_t * (this.fileLength - this.sentChunks));\n        this.result.estimateSpeed.set(this.config.chunkSize / (_t / 1000));\n        const progress = Math.round(this.sentChunks / this.fileLength * 100);\n        let sentBytes = this.config.chunkSize * this.sentChunks;\n\n        if (sentBytes > this.fileData.size) {\n          // this case often occurs, when the last chunk\n          // is smaller than chunkSize, so we limit to fileSize\n          sentBytes = this.fileData.size;\n        }\n\n        this.result.progress.set(progress);\n        this.config.onProgress && this.config.onProgress.call(this.result, progress, this.fileData);\n        this.result.emit('progress', progress, this.fileData, {\n          chunksSent: this.sentChunks,\n          chunksLength: this.fileLength,\n          bytesSent: sentBytes\n        });\n      }, 250));\n      this.addListener('_onEnd', () => {\n        if (this.result.estimateTimer) {\n          Meteor.clearInterval(this.result.estimateTimer);\n        }\n\n        if (this.worker) {\n          this.worker.terminate();\n        }\n\n        if (this.trackerComp) {\n          this.trackerComp.stop();\n        }\n\n        if (this.beforeunload) {\n          window.removeEventListener('beforeunload', this.beforeunload, false);\n        }\n\n        if (this.result) {\n          return this.result.progress.set(0);\n        }\n\n        return void 0;\n      });\n    } else {\n      throw new Meteor.Error(500, '[FilesCollection] [insert] Have you forget to pass a File itself?');\n    }\n  }\n\n  end(error, data) {\n    this.collection._debug('[FilesCollection] [UploadInstance] [end]', this.fileData.name);\n\n    if (this.collection.debug) {\n      console.timeEnd(\"insert \".concat(this.fileData.name));\n    }\n\n    this.emit('_onEnd');\n    this.result.emit('uploaded', error, data);\n    this.config.onUploaded && this.config.onUploaded.call(this.result, error, data);\n\n    if (error) {\n      this.collection._debug('[FilesCollection] [insert] [end] Error:', error);\n\n      this.result.abort();\n      this.result.state.set('aborted');\n      this.result.emit('error', error, this.fileData);\n      this.config.onError && this.config.onError.call(this.result, error, this.fileData);\n    } else {\n      this.result.state.set('completed');\n      this.collection.emit('afterUpload', data);\n    }\n\n    this.result.emit('end', error, data || this.fileData);\n    return this.result;\n  }\n\n  sendChunk(evt) {\n    const opts = {\n      fileId: this.fileId,\n      binData: evt.data.bin,\n      chunkId: evt.data.chunkId\n    };\n\n    if (this.config.isBase64) {\n      const pad = opts.binData.length % 4;\n\n      if (pad) {\n        let p = 0;\n\n        while (p < pad) {\n          opts.binData += '=';\n          p++;\n        }\n      }\n    }\n\n    this.emit('data', evt.data.bin);\n\n    if (this.pipes.length) {\n      for (let i = this.pipes.length - 1; i >= 0; i--) {\n        opts.binData = this.pipes[i](opts.binData);\n      }\n    }\n\n    if (this.fileLength === evt.data.chunkId) {\n      if (this.collection.debug) {\n        console.timeEnd(\"loadFile \".concat(this.fileData.name));\n      }\n\n      this.emit('readEnd');\n    }\n\n    if (opts.binData) {\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Write, opts, error => {\n          this.transferTime += +new Date() - this.startTime[opts.chunkId];\n\n          if (error) {\n            if (this.result.state.get() !== 'aborted') {\n              this.emit('end', error);\n            }\n          } else {\n            ++this.sentChunks;\n\n            if (this.sentChunks >= this.fileLength) {\n              this.emit('sendEOF');\n            } else if (this.currentChunk < this.fileLength) {\n              this.emit('upload');\n            }\n\n            this.emit('calculateStats');\n          }\n        });\n      } else {\n        HTTP.call('POST', \"\".concat(_rootUrl).concat(this.collection.downloadRoute, \"/\").concat(this.collection.collectionName, \"/__upload\"), {\n          content: opts.binData,\n          headers: {\n            'x-mtok': (helpers.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : void 0) || null,\n            'x-fileid': opts.fileId,\n            'x-chunkid': opts.chunkId,\n            'content-type': 'text/plain'\n          },\n\n          beforeSend(xhr) {\n            xhr.withCredentials = true;\n            return true;\n          }\n\n        }, error => {\n          this.transferTime += +new Date() - this.startTime[opts.chunkId];\n\n          if (error) {\n            if (\"\".concat(error) === 'Error: network' || \"\".concat(error) === 'Error: Connection lost') {\n              this.result.pause();\n            } else {\n              if (this.result.state.get() !== 'aborted') {\n                this.emit('end', error);\n              }\n            }\n          } else {\n            ++this.sentChunks;\n\n            if (this.sentChunks >= this.fileLength) {\n              this.emit('sendEOF');\n            } else if (this.currentChunk < this.fileLength) {\n              this.emit('upload');\n            }\n\n            this.emit('calculateStats');\n          }\n        });\n      }\n    }\n  }\n\n  sendEOF() {\n    this.collection._debug('[FilesCollection] [UploadInstance] [sendEOF]', this.EOFsent);\n\n    if (!this.EOFsent) {\n      this.EOFsent = true;\n      const opts = {\n        eof: true,\n        fileId: this.fileId\n      };\n\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Write, opts, (error, result) => {\n          this.emit('end', error, result);\n        });\n      } else {\n        HTTP.call('POST', \"\".concat(_rootUrl).concat(this.collection.downloadRoute, \"/\").concat(this.collection.collectionName, \"/__upload\"), {\n          content: '',\n          headers: {\n            'x-eof': '1',\n            'x-mtok': (helpers.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : void 0) || null,\n            'x-fileId': opts.fileId,\n            'content-type': 'text/plain'\n          },\n\n          beforeSend(xhr) {\n            xhr.withCredentials = true;\n            return true;\n          }\n\n        }, (error, _result) => {\n          let result;\n\n          try {\n            result = JSON.parse((helpers.isObject(_result) ? _result.content : void 0) || {});\n          } catch (e) {\n            console.warn('Something went wrong! [sendEOF] method doesn\\'t returned JSON! Looks like you\\'re on Cordova app or behind proxy, switching to DDP transport is recommended.');\n            result = {};\n          }\n\n          if (result.meta) {\n            result.meta = fixJSONParse(result.meta);\n          }\n\n          this.emit('end', error, result);\n        });\n      }\n    }\n  }\n\n  proceedChunk(chunkId) {\n    const chunk = this.config.file.slice(this.config.chunkSize * (chunkId - 1), this.config.chunkSize * chunkId);\n\n    if (this.config.isBase64) {\n      this.emit('sendChunk', {\n        data: {\n          bin: chunk,\n          chunkId\n        }\n      });\n    } else {\n      let fileReader;\n\n      if (window.FileReader) {\n        fileReader = new window.FileReader();\n\n        fileReader.onloadend = evt => {\n          this.emit('sendChunk', {\n            data: {\n              bin: ((helpers.isObject(fileReader) ? fileReader.result : void 0) || (evt.srcElement ? evt.srcElement.result : void 0) || (evt.target ? evt.target.result : void 0)).split(',')[1],\n              chunkId\n            }\n          });\n        };\n\n        fileReader.onerror = e => {\n          this.emit('end', (e.target || e.srcElement).error);\n        };\n\n        fileReader.readAsDataURL(chunk);\n      } else if (window.FileReaderSync) {\n        fileReader = new window.FileReaderSync();\n        this.emit('sendChunk', {\n          data: {\n            bin: fileReader.readAsDataURL(chunk).split(',')[1],\n            chunkId\n          }\n        });\n      } else {\n        this.emit('end', 'File API is not supported in this Browser!');\n      }\n    }\n  }\n\n  upload() {\n    if (this.result.onPause.get()) {\n      return this;\n    }\n\n    if (this.result.state.get() === 'aborted') {\n      return this;\n    }\n\n    if (this.currentChunk <= this.fileLength) {\n      ++this.currentChunk;\n\n      if (this.worker) {\n        this.worker.postMessage({\n          f: this.config.file,\n          sc: this.sentChunks,\n          cc: this.currentChunk,\n          cs: this.config.chunkSize,\n          ib: this.config.isBase64\n        });\n      } else {\n        this.emit('proceedChunk', this.currentChunk);\n      }\n    } else {\n      this.emit('sendEOF');\n    }\n\n    this.startTime[this.currentChunk] = +new Date();\n    return this;\n  }\n\n  createStreams() {\n    this.collection._debug('[FilesCollection] [UploadInstance] [createStreams]');\n\n    let i = 1;\n\n    while (i <= this.config.streams) {\n      this.emit('upload');\n      i++;\n    }\n  }\n\n  prepare() {\n    let _len;\n\n    this.config.onStart && this.config.onStart.call(this.result, null, this.fileData);\n    this.result.emit('start', null, this.fileData);\n\n    if (this.config.chunkSize === 'dynamic') {\n      this.config.chunkSize = this.fileData.size / 1000;\n\n      if (this.config.chunkSize < 327680) {\n        this.config.chunkSize = 327680;\n      } else if (this.config.chunkSize > 1048576) {\n        this.config.chunkSize = 1048576;\n      }\n\n      if (this.config.transport === 'http') {\n        this.config.chunkSize = Math.round(this.config.chunkSize / 2);\n      } else if (isSafari) {\n        this.config.chunkSize = Math.ceil(this.config.chunkSize / 8);\n      }\n    }\n\n    if (this.config.isBase64) {\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 4) * 4;\n      _len = Math.ceil(this.config.file.length / this.config.chunkSize);\n    } else {\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 8) * 8;\n      _len = Math.ceil(this.fileData.size / this.config.chunkSize);\n    }\n\n    if (this.config.streams === 'dynamic') {\n      this.config.streams = helpers.clone(_len);\n\n      if (this.config.streams > 24) {\n        this.config.streams = 24;\n      }\n\n      if (this.config.transport === 'http') {\n        this.config.streams = Math.round(this.config.streams / 2);\n      } else if (isSafari) {\n        this.config.streams = 1;\n      }\n    }\n\n    this.fileLength = _len <= 0 ? 1 : _len;\n\n    if (this.config.streams > this.fileLength) {\n      this.config.streams = this.fileLength;\n    }\n\n    this.result.config.fileLength = this.fileLength;\n    const opts = {\n      file: this.fileData,\n      fileId: this.fileId,\n      chunkSize: this.config.isBase64 ? this.config.chunkSize / 4 * 3 : this.config.chunkSize,\n      fileLength: this.fileLength\n    };\n\n    if (this.FSName !== this.fileId) {\n      opts.FSName = this.FSName;\n    }\n\n    const handleStart = error => {\n      if (error) {\n        this.collection._debug('[FilesCollection] [_Start] Error:', error);\n\n        this.emit('end', error);\n      } else {\n        this.result.continueFunc = () => {\n          this.collection._debug('[FilesCollection] [insert] [continueFunc]');\n\n          this.emit('createStreams');\n        };\n\n        this.emit('createStreams');\n      }\n    };\n\n    if (this.config.transport === 'ddp') {\n      this.config.ddp.call(this.collection._methodNames._Start, opts, handleStart);\n    } else {\n      if (helpers.isObject(opts.file) ? opts.file.meta : void 0) {\n        opts.file.meta = fixJSONStringify(opts.file.meta);\n      }\n\n      HTTP.call('POST', \"\".concat(_rootUrl).concat(this.collection.downloadRoute, \"/\").concat(this.collection.collectionName, \"/__upload\"), {\n        data: opts,\n        headers: {\n          'x-start': '1',\n          'x-mtok': (helpers.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : void 0) || null\n        },\n\n        beforeSend(xhr) {\n          xhr.withCredentials = true;\n          return true;\n        }\n\n      }, handleStart);\n    }\n  }\n\n  pipe(func) {\n    this.pipes.push(func);\n    return this;\n  }\n\n  start() {\n    let isUploadAllowed;\n\n    if (this.fileData.size <= 0) {\n      this.end(new Meteor.Error(400, 'Can\\'t upload empty file'));\n      return this.result;\n    }\n\n    if (this.config.onBeforeUpload && helpers.isFunction(this.config.onBeforeUpload)) {\n      isUploadAllowed = this.config.onBeforeUpload.call(Object.assign({}, this.result, this.collection._getUser()), this.fileData);\n\n      if (isUploadAllowed !== true) {\n        return this.end(new Meteor.Error(403, helpers.isString(isUploadAllowed) ? isUploadAllowed : 'config.onBeforeUpload() returned false'));\n      }\n    }\n\n    if (this.collection.onBeforeUpload && helpers.isFunction(this.collection.onBeforeUpload)) {\n      isUploadAllowed = this.collection.onBeforeUpload.call(Object.assign({}, this.result, this.collection._getUser()), this.fileData);\n\n      if (isUploadAllowed !== true) {\n        return this.end(new Meteor.Error(403, helpers.isString(isUploadAllowed) ? isUploadAllowed : 'collection.onBeforeUpload() returned false'));\n      }\n    }\n\n    Tracker.autorun(computation => {\n      this.trackerComp = computation;\n\n      if (!this.result.onPause.curValue && !Meteor.status().connected) {\n        this.collection._debug('[FilesCollection] [insert] [Tracker] [pause]');\n\n        this.result.pause();\n      }\n    });\n\n    if (this.worker) {\n      this.collection._debug('[FilesCollection] [insert] using WebWorkers');\n\n      this.worker.onmessage = evt => {\n        if (evt.data.error) {\n          this.collection._debug('[FilesCollection] [insert] [worker] [onmessage] [ERROR:]', evt.data.error);\n\n          this.emit('proceedChunk', evt.data.chunkId);\n        } else {\n          this.emit('sendChunk', evt);\n        }\n      };\n\n      this.worker.onerror = e => {\n        this.collection._debug('[FilesCollection] [insert] [worker] [onerror] [ERROR:]', e);\n\n        this.emit('end', e.message);\n      };\n    } else {\n      this.collection._debug('[FilesCollection] [insert] using MainThread');\n    }\n\n    this.emit('prepare');\n    return this.result;\n  }\n\n  manual() {\n    this.result.start = () => {\n      this.emit('start');\n    };\n\n    const self = this;\n\n    this.result.pipe = function (func) {\n      self.pipe(func);\n      return this;\n    };\n\n    return this.result;\n  }\n\n}","map":{"version":3,"sources":["packages/ostrio:files/upload.js"],"names":["module","export","FileUpload","UploadInstance","HTTP","link","v","Meteor","Random","Tracker","ReactiveVar","EventEmitter","check","Match","fixJSONParse","fixJSONStringify","helpers","_rootUrl","window","__meteor_runtime_config__","MOBILE_ROOT_URL","ROOT_URL","replace","isSafari","test","navigator","userAgent","constructor","config","_debug","isBase64","file","Object","assign","clone","fileData","state","onPause","progress","continueFunc","estimateTime","estimateSpeed","estimateTimer","setInterval","get","_currentTime","set","pause","emit","continue","toggle","abort","removeEventListener","beforeunload","_onEnd","onAbort","call","debug","console","timeEnd","name","ddp","_Abort","fileId","collection","meta","streams","isString","transport","toLowerCase","chunkSize","isBoolean","allowWebWorkers","Any","Optional","String","type","onError","Function","OneOf","Number","onStart","fileName","Boolean","onUploaded","onProgress","onBeforeUpload","Error","includes","_file","split","size","Math","floor","length","e","time","_supportWebWorker","worker","Worker","_webWorkerUrl","wwError","startTime","currentChunk","transferTime","trackerComp","sentChunks","fileLength","EOFsent","id","FSName","namingFunction","pipes","_getExt","mime","_getMimeType","result","_methodNames","message","isFunction","onbeforeunloadMessage","returnValue","addEventListener","addListener","end","start","upload","sendEOF","prepare","sendChunk","proceedChunk","createStreams","throttle","_t","round","sentBytes","chunksSent","chunksLength","bytesSent","clearInterval","terminate","stop","error","data","evt","opts","binData","bin","chunkId","pad","p","i","_Write","Date","downloadRoute","collectionName","content","headers","isObject","connection","_lastSessionId","beforeSend","xhr","withCredentials","eof","_result","JSON","parse","warn","chunk","slice","fileReader","FileReader","onloadend","srcElement","target","onerror","readAsDataURL","FileReaderSync","postMessage","f","sc","cc","cs","ib","_len","ceil","handleStart","_Start","pipe","func","push","isUploadAllowed","_getUser","autorun","computation","curValue","status","connected","onmessage","manual","self"],"mappings":"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","sourcesContent":["import { HTTP }         from 'meteor/http';\nimport { Meteor }       from 'meteor/meteor';\nimport { Random }       from 'meteor/random';\nimport { Tracker }      from 'meteor/tracker';\nimport { ReactiveVar }  from 'meteor/reactive-var';\nimport { EventEmitter } from 'eventemitter3';\nimport { check, Match } from 'meteor/check';\nimport { fixJSONParse, fixJSONStringify, helpers } from './lib.js';\n\nconst _rootUrl = (window.__meteor_runtime_config__.MOBILE_ROOT_URL || window.__meteor_runtime_config__.ROOT_URL).replace(/\\/+$/, '');\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n/*\n * @locus Client\n * @name FileUpload\n * @class FileUpload\n * @summary Internal Class, instance of this class is returned from `.insert()` method\n */\nexport class FileUpload extends EventEmitter {\n  constructor(config) {\n    super();\n    this.config = config;\n    this.config._debug('[FilesCollection] [FileUpload] [constructor]');\n\n    if (!this.config.isBase64) {\n      this.file        = Object.assign({}, helpers.clone(this.config.file), this.config.fileData);\n    } else {\n      this.file        = this.config.fileData;\n    }\n    this.state         = new ReactiveVar('active');\n    this.onPause       = new ReactiveVar(false);\n    this.progress      = new ReactiveVar(0);\n    this.continueFunc  = () => { };\n    this.estimateTime  = new ReactiveVar(1000);\n    this.estimateSpeed = new ReactiveVar(0);\n    this.estimateTimer = Meteor.setInterval(() => {\n      if (this.state.get() === 'active') {\n        const _currentTime = this.estimateTime.get();\n        if (_currentTime > 1000) {\n          this.estimateTime.set(_currentTime - 1000);\n        }\n      }\n    }, 1000);\n  }\n  pause() {\n    this.config._debug('[FilesCollection] [insert] [.pause()]');\n    if (!this.onPause.get()) {\n      this.onPause.set(true);\n      this.state.set('paused');\n      this.emit('pause', this.file);\n    }\n  }\n  continue() {\n    this.config._debug('[FilesCollection] [insert] [.continue()]');\n    if (this.onPause.get()) {\n      this.onPause.set(false);\n      this.state.set('active');\n      this.emit('continue', this.file);\n      this.continueFunc();\n    }\n  }\n  toggle() {\n    this.config._debug('[FilesCollection] [insert] [.toggle()]');\n    if (this.onPause.get()) {\n      this.continue();\n    } else {\n      this.pause();\n    }\n  }\n  abort() {\n    this.config._debug('[FilesCollection] [insert] [.abort()]');\n    window.removeEventListener('beforeunload', this.config.beforeunload, false);\n    this.pause();\n    this.config._onEnd();\n    this.state.set('aborted');\n    this.config.onAbort && this.config.onAbort.call(this, this.file);\n    this.emit('abort', this.file);\n    if (this.config.debug) {\n      console.timeEnd(`insert ${this.config.fileData.name}`);\n    }\n\n    this.config.ddp.call(this.config._Abort, this.config.fileId);\n  }\n}\n\n/*\n * @locus Client\n * @name UploadInstance\n * @class UploadInstance\n * @summary Internal Class, used for file upload\n */\nexport class UploadInstance extends EventEmitter {\n  constructor(config, collection) {\n    super();\n    this.config     = config;\n    this.collection = collection;\n    this.collection._debug('[FilesCollection] [insert()]');\n\n    if (!this.config.ddp) {\n      this.config.ddp = this.collection.ddp;\n    }\n\n    if (!this.config.meta) {\n      this.config.meta = {};\n    }\n\n    if (!this.config.streams) {\n      this.config.streams = 2;\n    }\n\n    if (this.config.streams < 1) {\n      this.config.streams = 2;\n    }\n\n    if (!helpers.isString(this.config.transport)) {\n      this.config.transport = 'ddp';\n    }\n\n    this.config.transport = this.config.transport.toLowerCase();\n\n    if (this.config.transport !== 'ddp' && this.config.transport !== 'http') {\n      this.config.transport = 'ddp';\n    }\n\n    if (!this.config.chunkSize) {\n      this.config.chunkSize = this.collection.chunkSize;\n    }\n\n    if (!helpers.isBoolean(this.config.allowWebWorkers)) {\n      this.config.allowWebWorkers = true;\n    }\n\n    check(this.config, {\n      ddp: Match.Any,\n      file: Match.Any,\n      fileId: Match.Optional(String),\n      meta: Match.Optional(Object),\n      type: Match.Optional(String),\n      onError: Match.Optional(Function),\n      onAbort: Match.Optional(Function),\n      streams: Match.OneOf('dynamic', Number),\n      onStart: Match.Optional(Function),\n      fileName: Match.Optional(String),\n      isBase64: Match.Optional(Boolean),\n      transport: Match.OneOf('http', 'ddp'),\n      chunkSize: Match.OneOf('dynamic', Number),\n      onUploaded: Match.Optional(Function),\n      onProgress: Match.Optional(Function),\n      onBeforeUpload: Match.Optional(Function),\n      allowWebWorkers: Boolean\n    });\n\n    if (this.config.isBase64 === true) {\n      check(this.config.file, String);\n\n      if (!this.config.fileName) {\n        throw new Meteor.Error(400, '\"fileName\" must me specified for base64 upload!');\n      }\n\n      if (this.config.file.includes('data:')) {\n        this.config.file = this.config.file.replace('data:', '');\n      }\n\n      if (this.config.file.includes(',')) {\n        const _file = this.config.file.split(',');\n        this.fileData = {\n          size: Math.floor(((_file[1].replace(/\\=/g, '')).length / 4) * 3),\n          type: _file[0].split(';')[0],\n          name: this.config.fileName,\n          meta: this.config.meta\n        };\n        this.config.file = _file[1];\n      } else if (!this.config.type) {\n        throw new Meteor.Error(400, '\"type\" must me specified for base64 upload! And represent mime-type of the file');\n      } else {\n        this.fileData = {\n          size: Math.floor(((this.config.file.replace(/\\=/g, '')).length / 4) * 3),\n          type: this.config.type,\n          name: this.config.fileName,\n          meta: this.config.meta\n        };\n      }\n    }\n\n    if (this.config.file) {\n      if (!this.config.isBase64) {\n        try {\n          if (!this.config.file.name || !this.config.file.size) {\n            throw new Meteor.Error(500, 'Not a File!');\n          }\n        } catch (e) {\n          throw new Meteor.Error(500, '[FilesCollection] [insert] Insert method accepts File, not a FileList. You need to provide a real File. File must have `.name` property, and its size must be larger than zero.');\n        }\n\n        this.fileData = {\n          size: this.config.file.size,\n          type: this.config.type || this.config.file.type,\n          name: this.config.fileName || this.config.file.name,\n          meta: this.config.meta\n        };\n      }\n\n      if (this.collection.debug) {\n        console.time(`insert ${this.fileData.name}`);\n        console.time(`loadFile ${this.fileData.name}`);\n      }\n\n      if (this.collection._supportWebWorker && this.config.allowWebWorkers) {\n        try {\n          this.worker = new Worker(this.collection._webWorkerUrl);\n        } catch (wwError) {\n          this.worker = false;\n          this.collection._debug('[FilesCollection] [insert] [create WebWorker]: Can\\'t create WebWorker, fallback to MainThread', wwError);\n        }\n      } else {\n        this.worker = null;\n      }\n\n      this.startTime     = {};\n      this.config.debug  = this.collection.debug;\n      this.config._debug = this.collection._debug;\n      this.currentChunk  = 0;\n      this.transferTime  = 0;\n      this.trackerComp   = null;\n      this.sentChunks    = 0;\n      this.fileLength    = 1;\n      this.EOFsent       = false;\n      this.fileId        = this.config.fileId || Random.id();\n      this.FSName        = this.collection.namingFunction ? this.collection.namingFunction(this.fileData) : this.fileId;\n      this.pipes         = [];\n\n      this.fileData = Object.assign(this.fileData, this.collection._getExt(this.fileData.name), {mime: this.collection._getMimeType(this.fileData)});\n      this.fileData['mime-type'] = this.fileData.mime;\n\n      this.result = new FileUpload(Object.assign({}, this.config, {\n        fileData: this.fileData,\n        fileId: this.fileId,\n        _Abort: this.collection._methodNames._Abort\n      }));\n\n      this.beforeunload = (e) => {\n        const message = helpers.isFunction(this.collection.onbeforeunloadMessage) ? this.collection.onbeforeunloadMessage.call(this.result, this.fileData) : this.collection.onbeforeunloadMessage;\n\n        if (e) {\n          e.returnValue = message;\n        }\n        return message;\n      };\n\n      this.result.config.beforeunload = this.beforeunload;\n      window.addEventListener('beforeunload', this.beforeunload, false);\n\n      this.result.config._onEnd = () => this.emit('_onEnd');\n\n      this.addListener('end', this.end);\n      this.addListener('start', this.start);\n      this.addListener('upload', this.upload);\n      this.addListener('sendEOF', this.sendEOF);\n      this.addListener('prepare', this.prepare);\n      this.addListener('sendChunk', this.sendChunk);\n      this.addListener('proceedChunk', this.proceedChunk);\n      this.addListener('createStreams', this.createStreams);\n\n      this.addListener('calculateStats', helpers.throttle(() => {\n        const _t = (this.transferTime / this.sentChunks) / this.config.streams;\n        this.result.estimateTime.set((_t * (this.fileLength - this.sentChunks)));\n        this.result.estimateSpeed.set((this.config.chunkSize / (_t / 1000)));\n\n        const progress = Math.round((this.sentChunks / this.fileLength) * 100);\n        let sentBytes = this.config.chunkSize * this.sentChunks;\n        if (sentBytes > this.fileData.size) {\n          // this case often occurs, when the last chunk\n          // is smaller than chunkSize, so we limit to fileSize\n          sentBytes = this.fileData.size;\n        }\n\n        this.result.progress.set(progress);\n        this.config.onProgress && this.config.onProgress.call(this.result, progress, this.fileData);\n        this.result.emit('progress', progress, this.fileData, { chunksSent: this.sentChunks, chunksLength: this.fileLength, bytesSent: sentBytes });\n      }, 250));\n\n      this.addListener('_onEnd', () => {\n        if (this.result.estimateTimer) {\n          Meteor.clearInterval(this.result.estimateTimer);\n        }\n        if (this.worker) {\n          this.worker.terminate();\n        }\n        if (this.trackerComp) {\n          this.trackerComp.stop();\n        }\n        if (this.beforeunload) {\n          window.removeEventListener('beforeunload', this.beforeunload, false);\n        }\n        if (this.result) {\n          return this.result.progress.set(0);\n        }\n        return void 0;\n      });\n    } else {\n      throw new Meteor.Error(500, '[FilesCollection] [insert] Have you forget to pass a File itself?');\n    }\n  }\n\n  end(error, data) {\n    this.collection._debug('[FilesCollection] [UploadInstance] [end]', this.fileData.name);\n    if (this.collection.debug) {\n      console.timeEnd(`insert ${this.fileData.name}`);\n    }\n\n    this.emit('_onEnd');\n    this.result.emit('uploaded', error, data);\n    this.config.onUploaded && this.config.onUploaded.call(this.result, error, data);\n\n    if (error) {\n      this.collection._debug('[FilesCollection] [insert] [end] Error:', error);\n      this.result.abort();\n      this.result.state.set('aborted');\n      this.result.emit('error', error, this.fileData);\n      this.config.onError && this.config.onError.call(this.result, error, this.fileData);\n    } else {\n      this.result.state.set('completed');\n      this.collection.emit('afterUpload', data);\n    }\n    this.result.emit('end', error, (data || this.fileData));\n    return this.result;\n  }\n\n  sendChunk(evt) {\n    const opts = {\n      fileId: this.fileId,\n      binData: evt.data.bin,\n      chunkId: evt.data.chunkId\n    };\n\n    if (this.config.isBase64) {\n      const pad = opts.binData.length % 4;\n      if (pad) {\n        let p = 0;\n        while (p < pad) {\n          opts.binData += '=';\n          p++;\n        }\n      }\n    }\n\n    this.emit('data', evt.data.bin);\n    if (this.pipes.length) {\n      for (let i = this.pipes.length - 1; i >= 0; i--) {\n        opts.binData = this.pipes[i](opts.binData);\n      }\n    }\n\n    if (this.fileLength === evt.data.chunkId) {\n      if (this.collection.debug) {\n        console.timeEnd(`loadFile ${this.fileData.name}`);\n      }\n      this.emit('readEnd');\n    }\n\n    if (opts.binData) {\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Write, opts, (error) => {\n          this.transferTime += (+new Date) - this.startTime[opts.chunkId];\n          if (error) {\n            if (this.result.state.get() !== 'aborted') {\n              this.emit('end', error);\n            }\n          } else {\n            ++this.sentChunks;\n            if (this.sentChunks >= this.fileLength) {\n              this.emit('sendEOF');\n            } else if (this.currentChunk < this.fileLength) {\n              this.emit('upload');\n            }\n            this.emit('calculateStats');\n          }\n        });\n      } else {\n        HTTP.call('POST', `${_rootUrl}${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n          content: opts.binData,\n          headers: {\n            'x-mtok': (helpers.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : void 0) || null,\n            'x-fileid': opts.fileId,\n            'x-chunkid': opts.chunkId,\n            'content-type': 'text/plain'\n          },\n          beforeSend(xhr) {\n            xhr.withCredentials = true;\n            return true;\n          }\n        }, (error) => {\n          this.transferTime += +new Date() - this.startTime[opts.chunkId];\n          if (error) {\n            if (`${error}` === 'Error: network' || `${error}` === 'Error: Connection lost') {\n              this.result.pause();\n            } else {\n              if (this.result.state.get() !== 'aborted') {\n                this.emit('end', error);\n              }\n            }\n          } else {\n            ++this.sentChunks;\n            if (this.sentChunks >= this.fileLength) {\n              this.emit('sendEOF');\n            } else if (this.currentChunk < this.fileLength) {\n              this.emit('upload');\n            }\n            this.emit('calculateStats');\n          }\n        });\n      }\n    }\n  }\n\n  sendEOF() {\n    this.collection._debug('[FilesCollection] [UploadInstance] [sendEOF]', this.EOFsent);\n    if (!this.EOFsent) {\n      this.EOFsent = true;\n      const opts = {\n        eof: true,\n        fileId: this.fileId\n      };\n\n      if (this.config.transport === 'ddp') {\n        this.config.ddp.call(this.collection._methodNames._Write, opts, (error, result) => {\n          this.emit('end', error, result);\n        });\n      } else {\n        HTTP.call('POST', `${_rootUrl}${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n          content: '',\n          headers: {\n            'x-eof': '1',\n            'x-mtok': (helpers.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : void 0) || null,\n            'x-fileId': opts.fileId,\n            'content-type': 'text/plain'\n          },\n          beforeSend(xhr) {\n            xhr.withCredentials = true;\n            return true;\n          }\n        }, (error, _result) => {\n          let result;\n          try {\n            result = JSON.parse((helpers.isObject(_result) ? _result.content : void 0) || {});\n          } catch (e) {\n            console.warn('Something went wrong! [sendEOF] method doesn\\'t returned JSON! Looks like you\\'re on Cordova app or behind proxy, switching to DDP transport is recommended.');\n            result = {};\n          }\n\n          if (result.meta) {\n            result.meta = fixJSONParse(result.meta);\n          }\n\n          this.emit('end', error, result);\n        });\n      }\n    }\n  }\n\n  proceedChunk(chunkId) {\n    const chunk = this.config.file.slice((this.config.chunkSize * (chunkId - 1)), (this.config.chunkSize * chunkId));\n\n    if (this.config.isBase64) {\n      this.emit('sendChunk', {\n        data: {\n          bin: chunk,\n          chunkId\n        }\n      });\n    } else {\n      let fileReader;\n      if (window.FileReader) {\n        fileReader = new window.FileReader;\n\n        fileReader.onloadend = (evt) => {\n          this.emit('sendChunk', {\n            data: {\n              bin: ((helpers.isObject(fileReader) ? fileReader.result : void 0) || (evt.srcElement ? evt.srcElement.result : void 0) || (evt.target ? evt.target.result : void 0)).split(',')[1],\n              chunkId\n            }\n          });\n        };\n\n        fileReader.onerror = (e) => {\n          this.emit('end', (e.target || e.srcElement).error);\n        };\n\n        fileReader.readAsDataURL(chunk);\n      } else if (window.FileReaderSync) {\n        fileReader = new window.FileReaderSync;\n\n        this.emit('sendChunk', {\n          data: {\n            bin: fileReader.readAsDataURL(chunk).split(',')[1],\n            chunkId\n          }\n        });\n      } else {\n        this.emit('end', 'File API is not supported in this Browser!');\n      }\n    }\n  }\n\n  upload() {\n    if (this.result.onPause.get()) {\n      return this;\n    }\n\n    if (this.result.state.get() === 'aborted') {\n      return this;\n    }\n\n    if (this.currentChunk <= this.fileLength) {\n      ++this.currentChunk;\n      if (this.worker) {\n        this.worker.postMessage({\n          f: this.config.file,\n          sc: this.sentChunks,\n          cc: this.currentChunk,\n          cs: this.config.chunkSize,\n          ib: this.config.isBase64\n        });\n      } else {\n        this.emit('proceedChunk', this.currentChunk);\n      }\n    } else {\n      this.emit('sendEOF');\n    }\n    this.startTime[this.currentChunk] = +new Date();\n    return this;\n  }\n\n  createStreams() {\n    this.collection._debug('[FilesCollection] [UploadInstance] [createStreams]');\n    let i = 1;\n    while (i <= this.config.streams) {\n      this.emit('upload');\n      i++;\n    }\n  }\n\n  prepare() {\n    let _len;\n\n    this.config.onStart && this.config.onStart.call(this.result, null, this.fileData);\n    this.result.emit('start', null, this.fileData);\n\n    if (this.config.chunkSize === 'dynamic') {\n      this.config.chunkSize = this.fileData.size / 1000;\n      if (this.config.chunkSize < 327680) {\n        this.config.chunkSize = 327680;\n      } else if (this.config.chunkSize > 1048576) {\n        this.config.chunkSize = 1048576;\n      }\n\n      if (this.config.transport === 'http') {\n        this.config.chunkSize = Math.round(this.config.chunkSize / 2);\n      } else if (isSafari) {\n        this.config.chunkSize = Math.ceil(this.config.chunkSize / 8);\n      }\n    }\n\n    if (this.config.isBase64) {\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 4) * 4;\n      _len = Math.ceil(this.config.file.length / this.config.chunkSize);\n    } else {\n      this.config.chunkSize = Math.floor(this.config.chunkSize / 8) * 8;\n      _len = Math.ceil(this.fileData.size / this.config.chunkSize);\n    }\n\n    if (this.config.streams === 'dynamic') {\n      this.config.streams = helpers.clone(_len);\n      if (this.config.streams > 24) { this.config.streams = 24; }\n\n      if (this.config.transport === 'http') {\n        this.config.streams = Math.round(this.config.streams / 2);\n      } else if (isSafari) {\n        this.config.streams = 1;\n      }\n    }\n\n    this.fileLength = _len <= 0 ? 1 : _len;\n    if (this.config.streams > this.fileLength) {\n      this.config.streams = this.fileLength;\n    }\n    this.result.config.fileLength = this.fileLength;\n\n    const opts = {\n      file: this.fileData,\n      fileId: this.fileId,\n      chunkSize: this.config.isBase64 ? ((this.config.chunkSize  / 4) * 3) : this.config.chunkSize,\n      fileLength: this.fileLength\n    };\n\n    if (this.FSName !== this.fileId) {\n      opts.FSName = this.FSName;\n    }\n\n    const handleStart = (error) => {\n      if (error) {\n        this.collection._debug('[FilesCollection] [_Start] Error:', error);\n        this.emit('end', error);\n      } else {\n        this.result.continueFunc = () => {\n          this.collection._debug('[FilesCollection] [insert] [continueFunc]');\n          this.emit('createStreams');\n        };\n        this.emit('createStreams');\n      }\n    };\n\n    if (this.config.transport === 'ddp') {\n      this.config.ddp.call(this.collection._methodNames._Start, opts, handleStart);\n    } else {\n      if (helpers.isObject(opts.file) ? opts.file.meta : void 0) {\n        opts.file.meta = fixJSONStringify(opts.file.meta);\n      }\n\n      HTTP.call('POST', `${_rootUrl}${this.collection.downloadRoute}/${this.collection.collectionName}/__upload`, {\n        data: opts,\n        headers: {\n          'x-start': '1',\n          'x-mtok': (helpers.isObject(Meteor.connection) ? Meteor.connection._lastSessionId : void 0) || null\n        },\n        beforeSend(xhr) {\n          xhr.withCredentials = true;\n          return true;\n        }\n      }, handleStart);\n    }\n  }\n\n  pipe(func) {\n    this.pipes.push(func);\n    return this;\n  }\n\n  start() {\n    let isUploadAllowed;\n    if (this.fileData.size <= 0) {\n      this.end(new Meteor.Error(400, 'Can\\'t upload empty file'));\n      return this.result;\n    }\n\n    if (this.config.onBeforeUpload && helpers.isFunction(this.config.onBeforeUpload)) {\n      isUploadAllowed = this.config.onBeforeUpload.call(Object.assign({}, this.result, this.collection._getUser()), this.fileData);\n      if (isUploadAllowed !== true) {\n        return this.end(new Meteor.Error(403, helpers.isString(isUploadAllowed) ? isUploadAllowed : 'config.onBeforeUpload() returned false'));\n      }\n    }\n\n    if (this.collection.onBeforeUpload && helpers.isFunction(this.collection.onBeforeUpload)) {\n      isUploadAllowed = this.collection.onBeforeUpload.call(Object.assign({}, this.result, this.collection._getUser()), this.fileData);\n      if (isUploadAllowed !== true) {\n        return this.end(new Meteor.Error(403, helpers.isString(isUploadAllowed) ? isUploadAllowed : 'collection.onBeforeUpload() returned false'));\n      }\n    }\n\n    Tracker.autorun((computation) => {\n      this.trackerComp = computation;\n      if (!this.result.onPause.curValue && !Meteor.status().connected) {\n        this.collection._debug('[FilesCollection] [insert] [Tracker] [pause]');\n        this.result.pause();\n      }\n    });\n\n    if (this.worker) {\n      this.collection._debug('[FilesCollection] [insert] using WebWorkers');\n      this.worker.onmessage = (evt) => {\n        if (evt.data.error) {\n          this.collection._debug('[FilesCollection] [insert] [worker] [onmessage] [ERROR:]', evt.data.error);\n          this.emit('proceedChunk', evt.data.chunkId);\n        } else {\n          this.emit('sendChunk', evt);\n        }\n      };\n\n      this.worker.onerror = (e) => {\n        this.collection._debug('[FilesCollection] [insert] [worker] [onerror] [ERROR:]', e);\n        this.emit('end', e.message);\n      };\n    } else {\n      this.collection._debug('[FilesCollection] [insert] using MainThread');\n    }\n\n    this.emit('prepare');\n    return this.result;\n  }\n\n  manual() {\n    this.result.start = () => {\n      this.emit('start');\n    };\n\n    const self = this;\n    this.result.pipe = function (func) {\n      self.pipe(func);\n      return this;\n    };\n    return this.result;\n  }\n}\n"]},"sourceType":"module","hash":"797e841fc2fb57416df9fc71b6d9b9715ad6922e"}
