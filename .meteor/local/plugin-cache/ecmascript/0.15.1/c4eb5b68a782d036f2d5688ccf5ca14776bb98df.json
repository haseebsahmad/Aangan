{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\packages\\ostrio:files\\core.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/ostrio:files/core.js","filename":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\packages\\ostrio:files\\core.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main","root":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\Aangan-main\\Aangan-main\\packages\\ostrio:files\\core.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ostrio:files/core.js"}},"code":"module.export({\n  default: () => FilesCollectionCore\n});\nlet EventEmitter;\nmodule.link(\"eventemitter3\", {\n  EventEmitter(v) {\n    EventEmitter = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet formatFleURL, helpers;\nmodule.link(\"./lib.js\", {\n  formatFleURL(v) {\n    formatFleURL = v;\n  },\n\n  helpers(v) {\n    helpers = v;\n  }\n\n}, 2);\nlet FilesCursor, FileCursor;\nmodule.link(\"./cursor.js\", {\n  FilesCursor(v) {\n    FilesCursor = v;\n  },\n\n  FileCursor(v) {\n    FileCursor = v;\n  }\n\n}, 3);\n\nclass FilesCollectionCore extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _debug\n   * @summary Print logs in debug mode\n   * @returns {void}\n   */\n  _debug() {\n    if (this.debug) {\n      (console.info || console.log || function () {}).apply(void 0, arguments);\n    }\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _getFileName\n   * @param {Object} fileData - File Object\n   * @summary Returns file's name\n   * @returns {String}\n   */\n\n\n  _getFileName(fileData) {\n    const fileName = fileData.name || fileData.fileName;\n\n    if (helpers.isString(fileName) && fileName.length > 0) {\n      return (fileData.name || fileData.fileName).replace(/^\\.\\.+/, '').replace(/\\.{2,}/g, '.').replace(/\\//g, '');\n    }\n\n    return '';\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _getExt\n   * @param {String} FileName - File name\n   * @summary Get extension from FileName\n   * @returns {Object}\n   */\n\n\n  _getExt(fileName) {\n    if (fileName.includes('.')) {\n      const extension = (fileName.split('.').pop().split('?')[0] || '').toLowerCase();\n      return {\n        ext: extension,\n        extension,\n        extensionWithDot: \".\".concat(extension)\n      };\n    }\n\n    return {\n      ext: '',\n      extension: '',\n      extensionWithDot: ''\n    };\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _updateFileTypes\n   * @param {Object} data - File data\n   * @summary Internal method. Classify file based on 'type' field\n   */\n\n\n  _updateFileTypes(data) {\n    data.isVideo = /^video\\//i.test(data.type);\n    data.isAudio = /^audio\\//i.test(data.type);\n    data.isImage = /^image\\//i.test(data.type);\n    data.isText = /^text\\//i.test(data.type);\n    data.isJSON = /^application\\/json$/i.test(data.type);\n    data.isPDF = /^application\\/(x-)?pdf$/i.test(data.type);\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _dataToSchema\n   * @param {Object} data - File data\n   * @summary Internal method. Build object in accordance with default schema from File data\n   * @returns {Object}\n   */\n\n\n  _dataToSchema(data) {\n    const ds = {\n      name: data.name,\n      extension: data.extension,\n      ext: data.extension,\n      extensionWithDot: '.' + data.extension,\n      path: data.path,\n      meta: data.meta,\n      type: data.type,\n      mime: data.type,\n      'mime-type': data.type,\n      size: data.size,\n      userId: data.userId || null,\n      versions: {\n        original: {\n          path: data.path,\n          size: data.size,\n          type: data.type,\n          extension: data.extension\n        }\n      },\n      _downloadRoute: data._downloadRoute || this.downloadRoute,\n      _collectionName: data._collectionName || this.collectionName\n    }; //Optional fileId\n\n    if (data.fileId) {\n      ds._id = data.fileId;\n    }\n\n    this._updateFileTypes(ds);\n\n    ds._storagePath = data._storagePath || this.storagePath(Object.assign({}, data, ds));\n    return ds;\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name findOne\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Object} options - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n   * @summary Find and return Cursor for matching document Object\n   * @returns {FileCursor} Instance\n   */\n\n\n  findOne() {\n    let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 ? arguments[1] : undefined;\n\n    this._debug(\"[FilesCollection] [findOne(\".concat(JSON.stringify(selector), \", \").concat(JSON.stringify(options), \")]\"));\n\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n    const doc = this.collection.findOne(selector, options);\n\n    if (doc) {\n      return new FileCursor(doc, this);\n    }\n\n    return doc;\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name find\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Object}        options  - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n   * @summary Find and return Cursor for matching documents\n   * @returns {FilesCursor} Instance\n   */\n\n\n  find() {\n    let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 ? arguments[1] : undefined;\n\n    this._debug(\"[FilesCollection] [find(\".concat(JSON.stringify(selector), \", \").concat(JSON.stringify(options), \")]\"));\n\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n    return new FilesCursor(selector, options, this);\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name update\n   * @see http://docs.meteor.com/#/full/update\n   * @summary link Mongo.Collection update method\n   * @returns {Mongo.Collection} Instance\n   */\n\n\n  update() {\n    this.collection.update.apply(this.collection, arguments);\n    return this.collection;\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name link\n   * @param {Object} fileRef - File reference object\n   * @param {String} version - Version of file you would like to request\n   * @param {String} URIBase - [Optional] URI base, see - https://github.com/VeliovGroup/Meteor-Files/issues/626\n   * @summary Returns downloadable URL\n   * @returns {String} Empty string returned in case if file not found in DB\n   */\n\n\n  link(fileRef) {\n    let version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'original';\n    let URIBase = arguments.length > 2 ? arguments[2] : undefined;\n\n    this._debug(\"[FilesCollection] [link(\".concat(helpers.isObject(fileRef) ? fileRef._id : void 0, \", \").concat(version, \")]\"));\n\n    check(fileRef, Object);\n\n    if (!fileRef) {\n      return '';\n    }\n\n    return formatFleURL(fileRef, version, URIBase);\n  }\n\n}\n\nFilesCollectionCore.__helpers = helpers;\nFilesCollectionCore.schema = {\n  _id: {\n    type: String\n  },\n  size: {\n    type: Number\n  },\n  name: {\n    type: String\n  },\n  type: {\n    type: String\n  },\n  path: {\n    type: String\n  },\n  isVideo: {\n    type: Boolean\n  },\n  isAudio: {\n    type: Boolean\n  },\n  isImage: {\n    type: Boolean\n  },\n  isText: {\n    type: Boolean\n  },\n  isJSON: {\n    type: Boolean\n  },\n  isPDF: {\n    type: Boolean\n  },\n  extension: {\n    type: String,\n    optional: true\n  },\n  ext: {\n    type: String,\n    optional: true\n  },\n  extensionWithDot: {\n    type: String,\n    optional: true\n  },\n  mime: {\n    type: String,\n    optional: true\n  },\n  'mime-type': {\n    type: String,\n    optional: true\n  },\n  _storagePath: {\n    type: String\n  },\n  _downloadRoute: {\n    type: String\n  },\n  _collectionName: {\n    type: String\n  },\n  public: {\n    type: Boolean,\n    optional: true\n  },\n  meta: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  },\n  userId: {\n    type: String,\n    optional: true\n  },\n  updatedAt: {\n    type: Date,\n    optional: true\n  },\n  versions: {\n    type: Object,\n    blackbox: true\n  }\n};","map":{"version":3,"sources":["packages/ostrio:files/core.js"],"names":["module","export","default","FilesCollectionCore","EventEmitter","link","v","check","Match","formatFleURL","helpers","FilesCursor","FileCursor","constructor","_debug","debug","console","info","log","apply","arguments","_getFileName","fileData","fileName","name","isString","length","replace","_getExt","includes","extension","split","pop","toLowerCase","ext","extensionWithDot","_updateFileTypes","data","isVideo","test","type","isAudio","isImage","isText","isJSON","isPDF","_dataToSchema","ds","path","meta","mime","size","userId","versions","original","_downloadRoute","downloadRoute","_collectionName","collectionName","fileId","_id","_storagePath","storagePath","Object","assign","findOne","selector","options","JSON","stringify","Optional","OneOf","String","Boolean","Number","doc","collection","find","update","fileRef","version","URIBase","isObject","__helpers","schema","optional","public","blackbox","updatedAt","Date"],"mappings":"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","sourcesContent":["import { EventEmitter }            from 'eventemitter3';\nimport { check, Match }            from 'meteor/check';\nimport { formatFleURL, helpers }   from './lib.js';\nimport { FilesCursor, FileCursor } from './cursor.js';\n\nexport default class FilesCollectionCore extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  static __helpers = helpers;\n\n  static schema = {\n    _id: {\n      type: String\n    },\n    size: {\n      type: Number\n    },\n    name: {\n      type: String\n    },\n    type: {\n      type: String\n    },\n    path: {\n      type: String\n    },\n    isVideo: {\n      type: Boolean\n    },\n    isAudio: {\n      type: Boolean\n    },\n    isImage: {\n      type: Boolean\n    },\n    isText: {\n      type: Boolean\n    },\n    isJSON: {\n      type: Boolean\n    },\n    isPDF: {\n      type: Boolean\n    },\n    extension: {\n      type: String,\n      optional: true\n    },\n    ext: {\n      type: String,\n      optional: true\n    },\n    extensionWithDot: {\n      type: String,\n      optional: true\n    },\n    mime: {\n      type: String,\n      optional: true\n    },\n    'mime-type': {\n      type: String,\n      optional: true\n    },\n    _storagePath: {\n      type: String\n    },\n    _downloadRoute: {\n      type: String\n    },\n    _collectionName: {\n      type: String\n    },\n    public: {\n      type: Boolean,\n      optional: true\n    },\n    meta: {\n      type: Object,\n      blackbox: true,\n      optional: true\n    },\n    userId: {\n      type: String,\n      optional: true\n    },\n    updatedAt: {\n      type: Date,\n      optional: true\n    },\n    versions: {\n      type: Object,\n      blackbox: true\n    }\n  };\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _debug\n   * @summary Print logs in debug mode\n   * @returns {void}\n   */\n  _debug() {\n    if (this.debug) {\n      (console.info || console.log || function () { }).apply(void 0, arguments);\n    }\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _getFileName\n   * @param {Object} fileData - File Object\n   * @summary Returns file's name\n   * @returns {String}\n   */\n  _getFileName(fileData) {\n    const fileName = fileData.name || fileData.fileName;\n    if (helpers.isString(fileName) && (fileName.length > 0)) {\n      return (fileData.name || fileData.fileName).replace(/^\\.\\.+/, '').replace(/\\.{2,}/g, '.').replace(/\\//g, '');\n    }\n    return '';\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _getExt\n   * @param {String} FileName - File name\n   * @summary Get extension from FileName\n   * @returns {Object}\n   */\n  _getExt(fileName) {\n    if (fileName.includes('.')) {\n      const extension = (fileName.split('.').pop().split('?')[0] || '').toLowerCase();\n      return { ext: extension, extension, extensionWithDot: `.${extension}` };\n    }\n    return { ext: '', extension: '', extensionWithDot: '' };\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _updateFileTypes\n   * @param {Object} data - File data\n   * @summary Internal method. Classify file based on 'type' field\n   */\n  _updateFileTypes(data) {\n    data.isVideo  = /^video\\//i.test(data.type);\n    data.isAudio  = /^audio\\//i.test(data.type);\n    data.isImage  = /^image\\//i.test(data.type);\n    data.isText   = /^text\\//i.test(data.type);\n    data.isJSON   = /^application\\/json$/i.test(data.type);\n    data.isPDF    = /^application\\/(x-)?pdf$/i.test(data.type);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name _dataToSchema\n   * @param {Object} data - File data\n   * @summary Internal method. Build object in accordance with default schema from File data\n   * @returns {Object}\n   */\n  _dataToSchema(data) {\n    const ds = {\n      name: data.name,\n      extension: data.extension,\n      ext: data.extension,\n      extensionWithDot: '.' + data.extension,\n      path: data.path,\n      meta: data.meta,\n      type: data.type,\n      mime: data.type,\n      'mime-type': data.type,\n      size: data.size,\n      userId: data.userId || null,\n      versions: {\n        original: {\n          path: data.path,\n          size: data.size,\n          type: data.type,\n          extension: data.extension\n        }\n      },\n      _downloadRoute: data._downloadRoute || this.downloadRoute,\n      _collectionName: data._collectionName || this.collectionName\n    };\n\n    //Optional fileId\n    if (data.fileId) {\n      ds._id = data.fileId;\n    }\n\n    this._updateFileTypes(ds);\n    ds._storagePath = data._storagePath || this.storagePath(Object.assign({}, data, ds));\n    return ds;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name findOne\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Object} options - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n   * @summary Find and return Cursor for matching document Object\n   * @returns {FileCursor} Instance\n   */\n  findOne(selector = {}, options) {\n    this._debug(`[FilesCollection] [findOne(${JSON.stringify(selector)}, ${JSON.stringify(options)})]`);\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n\n    const doc = this.collection.findOne(selector, options);\n    if (doc) {\n      return new FileCursor(doc, this);\n    }\n    return doc;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name find\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Object}        options  - Mongo-Style selector Options (http://docs.meteor.com/api/collections.html#sortspecifiers)\n   * @summary Find and return Cursor for matching documents\n   * @returns {FilesCursor} Instance\n   */\n  find(selector = {}, options) {\n    this._debug(`[FilesCollection] [find(${JSON.stringify(selector)}, ${JSON.stringify(options)})]`);\n    check(selector, Match.Optional(Match.OneOf(Object, String, Boolean, Number, null)));\n    check(options, Match.Optional(Object));\n\n    return new FilesCursor(selector, options, this);\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name update\n   * @see http://docs.meteor.com/#/full/update\n   * @summary link Mongo.Collection update method\n   * @returns {Mongo.Collection} Instance\n   */\n  update() {\n    this.collection.update.apply(this.collection, arguments);\n    return this.collection;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollectionCore\n   * @name link\n   * @param {Object} fileRef - File reference object\n   * @param {String} version - Version of file you would like to request\n   * @param {String} URIBase - [Optional] URI base, see - https://github.com/VeliovGroup/Meteor-Files/issues/626\n   * @summary Returns downloadable URL\n   * @returns {String} Empty string returned in case if file not found in DB\n   */\n  link(fileRef, version = 'original', URIBase) {\n    this._debug(`[FilesCollection] [link(${(helpers.isObject(fileRef) ? fileRef._id : void 0)}, ${version})]`);\n    check(fileRef, Object);\n\n    if (!fileRef) {\n      return '';\n    }\n    return formatFleURL(fileRef, version, URIBase);\n  }\n}\n"]},"sourceType":"module","hash":"c4eb5b68a782d036f2d5688ccf5ca14776bb98df"}
