{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\http\\httpcall_server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/http/httpcall_server.js","filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\http\\httpcall_server.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","root":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\http\\httpcall_server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/http/httpcall_server.js"}},"code":"module.export({\n  HTTP: () => HTTP,\n  HTTPInternals: () => HTTPInternals\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet fetch, Request;\nmodule.link(\"meteor/fetch\", {\n  fetch(v) {\n    fetch = v;\n  },\n\n  Request(v) {\n    Request = v;\n  }\n\n}, 1);\nlet URL, URLSearchParams;\nmodule.link(\"meteor/url\", {\n  URL(v) {\n    URL = v;\n  },\n\n  URLSearchParams(v) {\n    URLSearchParams = v;\n  }\n\n}, 2);\nlet HTTP, makeErrorByStatus, populateData;\nmodule.link(\"./httpcall_common.js\", {\n  HTTP(v) {\n    HTTP = v;\n  },\n\n  makeErrorByStatus(v) {\n    makeErrorByStatus = v;\n  },\n\n  populateData(v) {\n    populateData = v;\n  }\n\n}, 3);\nconst hasOwn = Object.prototype.hasOwnProperty;\n/**\n * @deprecated\n */\n\nconst HTTPInternals = {};\n\n// _call always runs asynchronously; HTTP.call, defined below,\n// wraps _call and runs synchronously when no callback is provided.\nfunction _call(method, url, options, callback) {\n  ////////// Process arguments //////////\n  if (!callback && typeof options === 'function') {\n    // support (method, url, callback) argument list\n    callback = options;\n    options = null;\n  }\n\n  options = options || {};\n\n  if (hasOwn.call(options, 'beforeSend')) {\n    throw new Error('Option beforeSend not supported on server.');\n  }\n\n  method = (method || '').toUpperCase();\n\n  if (!/^https?:\\/\\//.test(url)) {\n    throw new Error('url must be absolute and start with http:// or https://');\n  }\n\n  const headers = {};\n  let content = options.content;\n\n  if (options.data) {\n    content = JSON.stringify(options.data);\n    headers['Content-Type'] = 'application/json';\n  }\n\n  let paramsForUrl;\n  let paramsForBody;\n\n  if (content || method === 'GET' || method === 'HEAD') {\n    paramsForUrl = options.params;\n  } else {\n    paramsForBody = options.params;\n  }\n\n  const newUrl = URL._constructUrl(url, options.query, paramsForUrl);\n\n  if (options.auth) {\n    if (options.auth.indexOf(':') < 0) {\n      throw new Error('auth option should be of the form \"username:password\"');\n    }\n\n    const base64 = Buffer.from(options.auth, 'ascii').toString('base64');\n    headers['Authorization'] = \"Basic \".concat(base64);\n  }\n\n  if (paramsForBody) {\n    const data = new URLSearchParams();\n    Object.entries(paramsForBody).forEach(_ref => {\n      let [key, value] = _ref;\n      data.append(key, value);\n    });\n    content = data;\n    headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  }\n\n  if (options.headers) {\n    Object.keys(options.headers).forEach(function (key) {\n      headers[key] = options.headers[key];\n    });\n  }\n\n  let caching;\n\n  if (options.caching) {// TODO implement fetch-specific options\n  }\n\n  let corsMode;\n\n  if (options.mode) {// TODO implement fetch-specific options\n  }\n\n  let credentials; // wrap callback to add a 'response' property on an error, in case\n  // we have both (http 4xx/5xx error, which has a response payload)\n\n  callback = function (cb) {\n    let called = false;\n    return function (error, response) {\n      if (!called) {\n        called = true;\n\n        if (error && response) {\n          error.response = response;\n        }\n\n        cb(error, response);\n      }\n    };\n  }(callback); // is false if false, otherwise always true\n\n\n  const followRedirects = options.followRedirects === false ? 'manual' : 'follow'; ////////// Kickoff! //////////\n  // Allow users to override any request option with the npmRequestOptions\n  // option.\n\n  const requestOptions = {\n    method: method,\n    caching: caching,\n    mode: corsMode,\n    jar: false,\n    timeout: options.timeout,\n    body: content,\n    redirect: followRedirects,\n    referrer: options.referrer,\n    integrity: options.integrity,\n    headers: headers\n  };\n  const request = new Request(newUrl, requestOptions);\n  fetch(request).then(res => Promise.asyncApply(() => {\n    const content = Promise.await(res.text());\n    const response = {};\n    response.statusCode = res.status;\n    response.content = '' + content; // fetch headers don't allow simple read using bracket notation\n    // so we iterate their entries and assign them to a new Object\n\n    response.headers = {};\n\n    for (const entry of res.headers.entries()) {\n      const [key, val] = entry;\n      response.headers[key] = val;\n    }\n\n    response.ok = res.ok;\n    response.redirected = res.redirected;\n    populateData(response);\n\n    if (response.statusCode >= 400) {\n      const error = makeErrorByStatus(response.statusCode, response.content);\n      callback(error, response);\n    } else {\n      callback(undefined, response);\n    }\n  })).catch(err => callback(err));\n}\n\nHTTP.call = Meteor.wrapAsync(_call);","map":{"version":3,"sources":["packages/http/httpcall_server.js"],"names":["module","export","HTTP","HTTPInternals","Meteor","link","v","fetch","Request","URL","URLSearchParams","makeErrorByStatus","populateData","hasOwn","Object","prototype","hasOwnProperty","_call","method","url","options","callback","call","Error","toUpperCase","test","headers","content","data","JSON","stringify","paramsForUrl","paramsForBody","params","newUrl","_constructUrl","query","auth","indexOf","base64","Buffer","from","toString","entries","forEach","key","value","append","keys","caching","corsMode","mode","credentials","cb","called","error","response","followRedirects","requestOptions","jar","timeout","body","redirect","referrer","integrity","request","then","res","text","statusCode","status","entry","val","ok","redirected","undefined","catch","err","wrapAsync"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { fetch, Request } from 'meteor/fetch';\nimport { URL, URLSearchParams } from 'meteor/url';\nimport { HTTP, makeErrorByStatus, populateData } from './httpcall_common.js';\n\nexport { HTTP };\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n/**\n * @deprecated\n */\nexport const HTTPInternals = {};\n\n// _call always runs asynchronously; HTTP.call, defined below,\n// wraps _call and runs synchronously when no callback is provided.\nfunction _call (method, url, options, callback) {\n  ////////// Process arguments //////////\n\n  if (!callback && typeof options === 'function') {\n    // support (method, url, callback) argument list\n    callback = options;\n    options = null;\n  }\n\n  options = options || {};\n\n  if (hasOwn.call(options, 'beforeSend')) {\n    throw new Error('Option beforeSend not supported on server.');\n  }\n\n  method = (method || '').toUpperCase();\n\n  if (!/^https?:\\/\\//.test(url)) {\n    throw new Error('url must be absolute and start with http:// or https://');\n  }\n\n  const headers = {};\n  let content = options.content;\n\n  if (options.data) {\n    content = JSON.stringify(options.data);\n    headers['Content-Type'] = 'application/json';\n  }\n\n  let paramsForUrl;\n  let paramsForBody;\n\n  if (content || method === 'GET' || method === 'HEAD') {\n    paramsForUrl = options.params;\n  }\n  else {\n    paramsForBody = options.params;\n  }\n\n  const newUrl = URL._constructUrl(url, options.query, paramsForUrl);\n\n  if (options.auth) {\n    if (options.auth.indexOf(':') < 0) {\n      throw new Error('auth option should be of the form \"username:password\"');\n    }\n\n    const base64 = Buffer.from(options.auth, 'ascii').toString('base64');\n    headers['Authorization'] = `Basic ${base64}`;\n  }\n\n  if (paramsForBody) {\n    const data = new URLSearchParams();\n    Object.entries(paramsForBody).forEach(([key, value]) => {\n      data.append(key, value);\n    });\n    content = data;\n    headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  }\n\n  if (options.headers) {\n    Object.keys(options.headers).forEach(function (key) {\n      headers[key] = options.headers[key];\n    });\n  }\n\n  let caching;\n  if (options.caching) {\n    // TODO implement fetch-specific options\n  }\n\n  let corsMode;\n  if (options.mode) {\n    // TODO implement fetch-specific options\n  }\n\n  let credentials;\n\n  // wrap callback to add a 'response' property on an error, in case\n  // we have both (http 4xx/5xx error, which has a response payload)\n  callback = (function (cb) {\n    let called = false;\n    return function (error, response) {\n      if (!called) {\n        called = true;\n        if (error && response) {\n          error.response = response;\n        }\n        cb(error, response);\n      }\n    }\n  })(callback);\n\n  // is false if false, otherwise always true\n  const followRedirects = options.followRedirects === false\n    ? 'manual'\n    : 'follow';\n\n  ////////// Kickoff! //////////\n\n  // Allow users to override any request option with the npmRequestOptions\n  // option.\n\n  const requestOptions = {\n    method: method,\n    caching: caching,\n    mode: corsMode,\n\n    jar: false,\n    timeout: options.timeout,\n    body: content,\n    redirect: followRedirects,\n    referrer: options.referrer,\n    integrity: options.integrity,\n    headers: headers\n  };\n\n  const request = new Request(newUrl, requestOptions);\n\n  fetch(request)\n    .then(async res => {\n      const content = await res.text();\n      const response = {};\n      response.statusCode = res.status;\n      response.content = '' + content;\n\n      // fetch headers don't allow simple read using bracket notation\n      // so we iterate their entries and assign them to a new Object\n      response.headers = {};\n      for (const entry of res.headers.entries()) {\n        const [key, val] = entry;\n        response.headers[key] = val;\n      }\n\n      response.ok = res.ok;\n      response.redirected = res.redirected;\n\n      populateData(response);\n\n      if (response.statusCode >= 400) {\n        const error = makeErrorByStatus(\n          response.statusCode,\n          response.content\n        );\n        callback(error, response);\n      } else {\n        callback(undefined, response);\n      }\n    })\n    .catch(err => callback(err));\n}\n\nHTTP.call = Meteor.wrapAsync(_call);\n"]},"sourceType":"module","hash":"098e1b6cef956bd319089fcf11b0597b48e984ed"}
