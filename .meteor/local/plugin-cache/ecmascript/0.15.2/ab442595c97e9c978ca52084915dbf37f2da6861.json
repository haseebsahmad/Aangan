{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\http\\httpcall_common.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/http/httpcall_common.js","filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\http\\httpcall_common.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","root":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\http\\httpcall_common.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/http/httpcall_common.js"}},"code":"var MAX_LENGTH = 500; // if you change this, also change the appropriate test\n\nvar slice = Array.prototype.slice;\n\nexports.makeErrorByStatus = function (statusCode, content) {\n  var message = \"failed [\" + statusCode + \"]\";\n\n  if (content) {\n    var stringContent = typeof content == \"string\" ? content : content.toString();\n    message += ' ' + truncate(stringContent.replace(/\\n/g, ' '), MAX_LENGTH);\n  }\n\n  return new Error(message);\n};\n\nfunction truncate(str, length) {\n  return str.length > length ? str.slice(0, length) + '...' : str;\n} // Fill in `response.data` if the content-type is JSON.\n\n\nexports.populateData = function (response) {\n  // Read Content-Type header, up to a ';' if there is one.\n  // A typical header might be \"application/json; charset=utf-8\"\n  // or just \"application/json\".\n  var contentType = (response.headers['content-type'] || ';').split(';')[0]; // Only try to parse data as JSON if server sets correct content type.\n\n  if (['application/json', 'text/javascript', 'application/javascript', 'application/x-javascript'].indexOf(contentType) >= 0) {\n    try {\n      response.data = JSON.parse(response.content);\n    } catch (err) {\n      response.data = null;\n    }\n  } else {\n    response.data = null;\n  }\n};\n\nvar HTTP = exports.HTTP = {};\n/**\n * @summary Send an HTTP `GET` request. Equivalent to calling [`HTTP.call`](#http_call) with \"GET\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\n\nHTTP.get = function ()\n/* varargs */\n{\n  return HTTP.call.apply(this, [\"GET\"].concat(slice.call(arguments)));\n};\n/**\n * @summary Send an HTTP `POST` request. Equivalent to calling [`HTTP.call`](#http_call) with \"POST\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\n\n\nHTTP.post = function ()\n/* varargs */\n{\n  return HTTP.call.apply(this, [\"POST\"].concat(slice.call(arguments)));\n};\n/**\n * @summary Send an HTTP `PUT` request. Equivalent to calling [`HTTP.call`](#http_call) with \"PUT\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\n\n\nHTTP.put = function ()\n/* varargs */\n{\n  return HTTP.call.apply(this, [\"PUT\"].concat(slice.call(arguments)));\n};\n/**\n * @summary Send an HTTP `DELETE` request. Equivalent to calling [`HTTP.call`](#http_call) with \"DELETE\" as the first argument. (Named `del` to avoid conflict with the Javascript keyword `delete`)\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\n\n\nHTTP.del = function ()\n/* varargs */\n{\n  return HTTP.call.apply(this, [\"DELETE\"].concat(slice.call(arguments)));\n};\n/**\n * @summary Send an HTTP `PATCH` request. Equivalent to calling [`HTTP.call`](#http_call) with \"PATCH\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\n\n\nHTTP.patch = function ()\n/* varargs */\n{\n  return HTTP.call.apply(this, [\"PATCH\"].concat(slice.call(arguments)));\n};","map":{"version":3,"sources":["packages/http/httpcall_common.js"],"names":["MAX_LENGTH","slice","Array","prototype","exports","makeErrorByStatus","statusCode","content","message","stringContent","toString","truncate","replace","Error","str","length","populateData","response","contentType","headers","split","indexOf","data","JSON","parse","err","HTTP","get","call","apply","concat","arguments","post","put","del","patch"],"mappings":"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","sourcesContent":["var MAX_LENGTH = 500; // if you change this, also change the appropriate test\nvar slice = Array.prototype.slice;\n\nexports.makeErrorByStatus = function(statusCode, content) {\n  var message = \"failed [\" + statusCode + \"]\";\n\n  if (content) {\n    var stringContent = typeof content == \"string\" ?\n      content : content.toString();\n\n    message += ' ' + truncate(stringContent.replace(/\\n/g, ' '), MAX_LENGTH);\n  }\n\n  return new Error(message);\n};\n\nfunction truncate(str, length) {\n  return str.length > length ? str.slice(0, length) + '...' : str;\n}\n\n// Fill in `response.data` if the content-type is JSON.\nexports.populateData = function(response) {\n  // Read Content-Type header, up to a ';' if there is one.\n  // A typical header might be \"application/json; charset=utf-8\"\n  // or just \"application/json\".\n  var contentType = (response.headers['content-type'] || ';').split(';')[0];\n\n  // Only try to parse data as JSON if server sets correct content type.\n  if (['application/json',\n       'text/javascript',\n       'application/javascript',\n       'application/x-javascript',\n      ].indexOf(contentType) >= 0) {\n    try {\n      response.data = JSON.parse(response.content);\n    } catch (err) {\n      response.data = null;\n    }\n  } else {\n    response.data = null;\n  }\n};\n\nvar HTTP = exports.HTTP = {};\n\n/**\n * @summary Send an HTTP `GET` request. Equivalent to calling [`HTTP.call`](#http_call) with \"GET\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.get = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"GET\"].concat(slice.call(arguments)));\n};\n\n/**\n * @summary Send an HTTP `POST` request. Equivalent to calling [`HTTP.call`](#http_call) with \"POST\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.post = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"POST\"].concat(slice.call(arguments)));\n};\n\n/**\n * @summary Send an HTTP `PUT` request. Equivalent to calling [`HTTP.call`](#http_call) with \"PUT\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.put = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"PUT\"].concat(slice.call(arguments)));\n};\n\n/**\n * @summary Send an HTTP `DELETE` request. Equivalent to calling [`HTTP.call`](#http_call) with \"DELETE\" as the first argument. (Named `del` to avoid conflict with the Javascript keyword `delete`)\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.del = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"DELETE\"].concat(slice.call(arguments)));\n};\n\n/**\n * @summary Send an HTTP `PATCH` request. Equivalent to calling [`HTTP.call`](#http_call) with \"PATCH\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.patch = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"PATCH\"].concat(slice.call(arguments)));\n};\n"]},"sourceType":"module","hash":"ab442595c97e9c978ca52084915dbf37f2da6861"}
