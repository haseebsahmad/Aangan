{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\imports\\api\\accounts.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.cordova"},"sourceFileName":"imports/api/accounts.js","filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\imports\\api\\accounts.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","root":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.14.0","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\imports\\api\\accounts.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/accounts.js"}},"code":"var Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Roles;\nmodule.link(\"meteor/alanning:roles\", {\n  Roles: function (v) {\n    Roles = v;\n  }\n}, 1);\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('Meteor.users.age', function (_ref) {\n    var userIds = _ref.userIds;\n    new SimpleSchema({\n      userIds: {\n        type: [String]\n      }\n    }).validate({\n      userIds: userIds\n    }); // Select only the users that match the array of IDs passed in\n\n    var selector = {\n      _id: {\n        $in: userIds\n      }\n    }; // Only return one field\n\n    var options = {\n      fields: {\n        age: 1\n      }\n    };\n    return Meteor.users.find(selector, options, role);\n  });\n}\n\nMeteor.methods({\n  'user.addFields': function (fields) {\n    console.log('fields: ', fields);\n    userId = Meteor.user()._id;\n\n    if (Roles.userIsInRole(userId, 'company')) {\n      Meteor.users.update(userId, {\n        $set: {\n          name: fields.name,\n          phone: fields.phone,\n          address: fields.address,\n          cnic: fields.cnic,\n          link: fields.link,\n          company: fields.company,\n          city: fields.city,\n          license: fields.license,\n          intro: fields.intro,\n          userType: fields.userType\n        }\n      });\n    }\n\n    if (Roles.userIsInRole(userId, 'customer')) {\n      Meteor.users.update(userId, {\n        $set: {\n          name: fields.name,\n          phone: fields.phone,\n          age: fields.age,\n          cnic: fields.cnic,\n          city: fields.city\n        }\n      });\n    }\n\n    if (Roles.userIsInRole(userId, 'guide')) {\n      Meteor.users.update(userId, {\n        $set: {\n          name: fields.name,\n          age: fields.age,\n          phone: fields.phone,\n          address: fields.address,\n          cnic: fields.cnic,\n          expertise: fields.expertise,\n          city: fields.city,\n          experience: fields.experience\n        }\n      });\n    }\n  },\n  'user.role': function (userId, role) {\n    if (Meteor.isServer) {\n      Roles.addUsersToRoles(userId, role, null);\n    }\n  },\n  'user.checkrole': function (userId, role) {\n    var check = Roles.userIsInRole(userId, role);\n    return check;\n  },\n  'users.companyData': function (id) {\n    console.log(\"ID: \", id);\n    console.log(\"Return value \", Meteor.users.find({\n      _id: id\n    }, {\n      phone: 1,\n      address: 1,\n      link: 1,\n      license: 1,\n      intro: 1\n    }).fetch());\n    return Meteor.users.find({\n      _id: id\n    }, {\n      phone: 1,\n      address: 1,\n      link: 1,\n      license: 1,\n      intro: 1\n    }).fetch();\n  }\n});","map":{"version":3,"sources":["imports/api/accounts.js"],"names":["Meteor","module","link","v","Roles","isServer","publish","userIds","SimpleSchema","type","String","validate","selector","_id","$in","options","fields","age","users","find","role","methods","console","log","userId","user","userIsInRole","update","$set","name","phone","address","cnic","company","city","license","intro","userType","expertise","experience","addUsersToRoles","check","id","fetch"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Roles } from 'meteor/alanning:roles';\n\nif (Meteor.isServer) {\n// This code only runs on the server\n    Meteor.publish('Meteor.users.age', function ({ userIds }) {\n        new SimpleSchema({\n        userIds: { type: [String] }\n        }).validate({ userIds });\n    \n        // Select only the users that match the array of IDs passed in\n        const selector = {\n            _id: { $in: userIds }\n        };\n    \n        // Only return one field\n        const options = {\n            fields: { age: 1 }\n        };\n        return Meteor.users.find(selector, options, role);\n    });\n}\n\nMeteor.methods({\n\n    'user.addFields'(fields){\n        console.log('fields: ', fields);\n        userId = Meteor.user()._id;\n        if (Roles.userIsInRole(userId, 'company')){\n            Meteor.users.update(userId, {\n                $set: {\n                name: fields.name,\n                phone: fields.phone,\n                address: fields.address,\n                cnic: fields.cnic,\n                link: fields.link,\n                company: fields.company,\n                city: fields.city,\n                license: fields.license,\n                intro: fields.intro,\n                userType: fields.userType\n                }\n            });\n        }\n        if (Roles.userIsInRole(userId, 'customer')){\n            Meteor.users.update(userId, {\n                $set: {\n                name: fields.name,\n                phone: fields.phone,\n                age: fields.age,\n                cnic: fields.cnic,\n                city: fields.city,\n                }\n            });\n        }\n        if (Roles.userIsInRole(userId, 'guide')){\n            Meteor.users.update(userId, {\n                $set: {\n                name: fields.name,\n                age: fields.age,\n                phone: fields.phone,\n                address: fields.address,\n                cnic: fields.cnic,\n                expertise: fields.expertise,\n                city: fields.city,\n                experience: fields.experience,\n                }\n            });\n        }\n    },\n\n    'user.role'(userId, role){\n        if (Meteor.isServer) {\n            Roles.addUsersToRoles(userId, role, null);\n        }\n    },\n\n    'user.checkrole'(userId, role){\n        const check = Roles.userIsInRole(userId, role);\n        return check;\n    },\n\n    'users.companyData'(id){\n        console.log(\"ID: \", id);\n        console.log(\"Return value \",Meteor.users.find({_id:id},{phone:1, address:1, link:1, license:1, intro:1}).fetch());\n        return(\n            Meteor.users.find({_id:id},{phone:1, address:1, link:1, license:1, intro:1}).fetch()\n        )\n    }\n})"]},"sourceType":"module","hash":"f3d408d47e7bbc97bf891b88dbd0794389f68f38"}
