{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/ostrio:files/client.js","filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\client.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","root":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.15.3","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ostrio:files/client.js"}},"code":"var _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  FilesCollection: function () {\n    return FilesCollection;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar DDP;\nmodule.link(\"meteor/ddp-client\", {\n  DDP: function (v) {\n    DDP = v;\n  }\n}, 2);\nvar Cookies;\nmodule.link(\"meteor/ostrio:cookies\", {\n  Cookies: function (v) {\n    Cookies = v;\n  }\n}, 3);\nvar check, Match;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 4);\nvar UploadInstance;\nmodule.link(\"./upload.js\", {\n  UploadInstance: function (v) {\n    UploadInstance = v;\n  }\n}, 5);\nvar FilesCollectionCore;\nmodule.link(\"./core.js\", {\n  \"default\": function (v) {\n    FilesCollectionCore = v;\n  }\n}, 6);\nvar formatFleURL, helpers;\nmodule.link(\"./lib.js\", {\n  formatFleURL: function (v) {\n    formatFleURL = v;\n  },\n  helpers: function (v) {\n    helpers = v;\n  }\n}, 7);\n\nvar NOOP = function () {};\n\nvar allowedParams = ['debug', 'ddp', 'schema', 'public', 'chunkSize', 'downloadRoute', 'collection', 'collectionName', 'namingFunction', 'onBeforeUpload', 'allowClientCode', 'onbeforeunloadMessage', 'disableUpload', 'allowQueryStringCookies'];\n/*\n * @locus Anywhere\n * @class FilesCollection\n * @param config           {Object}   - [Both]   Configuration object with next properties:\n * @param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n * @param config.ddp       {Object}   - [Client] Custom DDP connection. Object returned form `DDP.connect()`\n * @param config.schema    {Object}   - [Both]   Collection Schema\n * @param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs`\n * @param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n * @param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n * @param config.collection     {Mongo.Collection} - [Both] Mongo Collection Instance\n * @param config.collectionName {String}  - [Both]   Collection name\n * @param config.namingFunction {Function}- [Both]   Function which returns `String`\n * @param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\n * return `true` to continue\n * return `false` or `String` to abort upload\n * @param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n * @param config.onbeforeunloadMessage {String|Function} - [Client] Message shown to user when closing browser's window or tab while upload process is running\n * @param config.disableUpload {Boolean} - Disable file upload, useful for server only solutions\n * @param config.allowQueryStringCookies {Boolean} - Allow passing Cookies in a query string (in URL). Primary should be used only in Cordova environment. Note: this option will be used only on Cordova. Default: `false`\n * @summary Create new instance of FilesCollection\n */\n\nvar FilesCollection = /*#__PURE__*/function (_FilesCollectionCore) {\n  _inheritsLoose(FilesCollection, _FilesCollectionCore);\n\n  function FilesCollection(config) {\n    var _this;\n\n    _this = _FilesCollectionCore.call(this) || this;\n\n    if (config) {\n      Object.keys(config).forEach(function (param) {\n        if (allowedParams.includes(param)) {\n          _this[param] = config[param];\n        }\n      });\n    }\n\n    var self = _assertThisInitialized(_this);\n\n    var cookie = new Cookies({\n      allowQueryStringCookies: _this.allowQueryStringCookies\n    });\n\n    if (!helpers.isBoolean(_this.debug)) {\n      _this.debug = false;\n    }\n\n    if (!helpers.isBoolean(_this.public)) {\n      _this.public = false;\n    }\n\n    if (!_this.chunkSize) {\n      _this.chunkSize = 1024 * 512;\n    }\n\n    _this.chunkSize = Math.floor(_this.chunkSize / 8) * 8;\n\n    if (!helpers.isString(_this.collectionName) && !_this.collection) {\n      _this.collectionName = 'MeteorUploadFiles';\n    }\n\n    if (!_this.collection) {\n      _this.collection = new Mongo.Collection(_this.collectionName);\n    } else {\n      _this.collectionName = _this.collection._name;\n    }\n\n    _this.collection.filesCollection = _assertThisInitialized(_this);\n    check(_this.collectionName, String);\n\n    if (_this.public && !_this.downloadRoute) {\n      throw new Meteor.Error(500, \"[FilesCollection.\" + _this.collectionName + \"]: \\\"downloadRoute\\\" must be precisely provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal or be inside of your web/proxy-server (relative) root.\");\n    }\n\n    if (!helpers.isBoolean(_this.disableUpload)) {\n      _this.disableUpload = false;\n    }\n\n    if (!helpers.isString(_this.downloadRoute)) {\n      _this.downloadRoute = '/cdn/storage';\n    }\n\n    _this.downloadRoute = _this.downloadRoute.replace(/\\/$/, '');\n\n    if (!helpers.isFunction(_this.namingFunction)) {\n      _this.namingFunction = false;\n    }\n\n    if (!helpers.isFunction(_this.onBeforeUpload)) {\n      _this.onBeforeUpload = false;\n    }\n\n    if (!helpers.isBoolean(_this.allowClientCode)) {\n      _this.allowClientCode = true;\n    }\n\n    if (!_this.ddp) {\n      _this.ddp = Meteor;\n    }\n\n    if (!_this.onbeforeunloadMessage) {\n      _this.onbeforeunloadMessage = 'Upload in a progress... Do you want to abort?';\n    }\n\n    var setTokenCookie = function () {\n      if (Meteor.connection._lastSessionId) {\n        cookie.set('x_mtok', Meteor.connection._lastSessionId, {\n          path: '/',\n          sameSite: 'Lax'\n        });\n\n        if (Meteor.isCordova && _this.allowQueryStringCookies) {\n          cookie.send();\n        }\n      }\n    };\n\n    if (typeof Accounts !== 'undefined' && Accounts !== null) {\n      DDP.onReconnect(function (conn) {\n        conn.onReconnect = setTokenCookie;\n      });\n      Meteor.startup(setTokenCookie);\n      Accounts.onLogin(setTokenCookie);\n    }\n\n    check(_this.onbeforeunloadMessage, Match.OneOf(String, Function));\n\n    try {\n      var _URL = window.URL || window.webkitURL || window.mozURL || window.msURL || window.oURL || false;\n\n      if (window.Worker && window.Blob && _URL && helpers.isFunction(_URL.createObjectURL)) {\n        _this._supportWebWorker = true;\n        _this._webWorkerUrl = _URL.createObjectURL(new window.Blob(['!function(a){\"use strict\";a.onmessage=function(b){var c=b.data.f.slice(b.data.cs*(b.data.cc-1),b.data.cs*b.data.cc);if(b.data.ib===!0)postMessage({bin:c,chunkId:b.data.cc});else{var d;a.FileReader?(d=new FileReader,d.onloadend=function(a){postMessage({bin:(d.result||a.srcElement||a.target).split(\",\")[1],chunkId:b.data.cc,s:b.data.s})},d.onerror=function(a){throw(a.target||a.srcElement).error},d.readAsDataURL(c)):a.FileReaderSync?(d=new FileReaderSync,postMessage({bin:d.readAsDataURL(c).split(\",\")[1],chunkId:b.data.cc})):postMessage({bin:null,chunkId:b.data.cc,error:\"File API is not supported in WebWorker!\"})}}}(this);'], {\n          type: 'application/javascript'\n        }));\n      } else if (window.Worker) {\n        _this._supportWebWorker = true;\n        _this._webWorkerUrl = Meteor.absoluteUrl('packages/ostrio_files/worker.min.js');\n      } else {\n        _this._supportWebWorker = false;\n      }\n    } catch (e) {\n      self._debug('[FilesCollection] [Check WebWorker Availability] Error:', e);\n\n      _this._supportWebWorker = false;\n    }\n\n    if (!_this.schema) {\n      _this.schema = FilesCollectionCore.schema;\n    }\n\n    check(_this.debug, Boolean);\n    check(_this.schema, Object);\n    check(_this.public, Boolean);\n    check(_this.chunkSize, Number);\n    check(_this.downloadRoute, String);\n    check(_this.disableUpload, Boolean);\n    check(_this.namingFunction, Match.OneOf(false, Function));\n    check(_this.onBeforeUpload, Match.OneOf(false, Function));\n    check(_this.allowClientCode, Boolean);\n    check(_this.ddp, Match.Any);\n    _this._methodNames = {\n      _Abort: \"_FilesCollectionAbort_\" + _this.collectionName,\n      _Write: \"_FilesCollectionWrite_\" + _this.collectionName,\n      _Start: \"_FilesCollectionStart_\" + _this.collectionName,\n      _Remove: \"_FilesCollectionRemove_\" + _this.collectionName\n    };\n    return _this;\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getMimeType\n   * @param {Object} fileData - File Object\n   * @summary Returns file's mime-type\n   * @returns {String}\n   */\n\n\n  var _proto = FilesCollection.prototype;\n\n  _proto._getMimeType = function () {\n    function _getMimeType(fileData) {\n      var mime;\n      check(fileData, Object);\n\n      if (helpers.isObject(fileData)) {\n        mime = fileData.type;\n      }\n\n      if (!mime || !helpers.isString(mime)) {\n        mime = 'application/octet-stream';\n      }\n\n      return mime;\n    }\n\n    return _getMimeType;\n  }()\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getUser\n   * @summary Returns object with `userId` and `user()` method which return user's object\n   * @returns {Object}\n   */\n  ;\n\n  _proto._getUser = function () {\n    function _getUser() {\n      var result = {\n        user: function () {\n          return null;\n        },\n        userId: null\n      };\n\n      if (helpers.isFunction(Meteor.userId)) {\n        result.user = function () {\n          return Meteor.user();\n        };\n\n        result.userId = Meteor.userId();\n      }\n\n      return result;\n    }\n\n    return _getUser;\n  }()\n  /*\n   * @locus Client\n   * @memberOf FilesCollection\n   * @name insert\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n   * @param {Object} config - Configuration object with next properties:\n   *   {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n   *   {String}      fileId         - Optionnal `fileId` used at insert\n   *   {Object}      meta           - Additional data as object, use later for search\n   *   {Boolean}     allowWebWorkers- Allow/Deny WebWorkers usage\n   *   {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n   *   {Number|dynamic} chunkSize   - Chunk size for upload\n   *   {String}      transport      - Upload transport `http` or `ddp`\n   *   {Object}      ddp            - Custom DDP connection. Object returned form `DDP.connect()`\n   *   {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n   *   {Function}    onStart        - Callback triggered when upload is started after all successful validations, with two arguments `error` (always null) and `fileRef`\n   *   {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileData`\n   *   {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n   *   {Function}    onBeforeUpload - Callback triggered right before upload is started:\n   *       return true to continue\n   *       return false to abort upload\n   * @param {Boolean} autoStart     - Start upload immediately. If set to false, you need manually call .start() method on returned class. Useful to set EventListeners.\n   * @summary Upload file to server over DDP or HTTP\n   * @returns {UploadInstance} Instance. UploadInstance has next properties:\n   *   {ReactiveVar} onPause  - Is upload process on the pause?\n   *   {ReactiveVar} state    - active|paused|aborted|completed\n   *   {ReactiveVar} progress - Current progress in percentage\n   *   {Function}    pause    - Pause upload process\n   *   {Function}    continue - Continue paused upload process\n   *   {Function}    toggle   - Toggle continue/pause if upload process\n   *   {Function}    abort    - Abort upload\n   *   {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n   */\n  ;\n\n  _proto.insert = function () {\n    function insert(config) {\n      var autoStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (this.disableUpload) {\n        console.warn('[FilesCollection] [insert()] Upload is disabled with [disableUpload]!');\n        return {};\n      }\n\n      return new UploadInstance(config, this)[autoStart ? 'start' : 'manual']();\n    }\n\n    return insert;\n  }()\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name remove\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Function} callback - Callback with one `error` argument\n   * @summary Remove documents from the collection\n   * @returns {FilesCollection} Instance\n   */\n  ;\n\n  _proto.remove = function () {\n    function remove() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n      this._debug(\"[FilesCollection] [remove(\" + JSON.stringify(selector) + \")]\");\n\n      check(selector, Match.OneOf(Object, String));\n      check(callback, Match.Optional(Function));\n\n      if (this.allowClientCode) {\n        this.ddp.call(this._methodNames._Remove, selector, callback || NOOP);\n      } else {\n        callback && callback(new Meteor.Error(401, '[FilesCollection] [remove] Run code from client is not allowed!'));\n\n        this._debug('[FilesCollection] [remove] Run code from client is not allowed!');\n      }\n\n      return this;\n    }\n\n    return remove;\n  }();\n\n  return FilesCollection;\n}(FilesCollectionCore);\n\n/*\n * @locus Client\n * @TemplateHelper\n * @name fileURL\n * @param {Object} fileRef - File reference object\n * @param {String} version - [Optional] Version of file you would like to request\n * @param {String} URIBase - [Optional] URI base, see - https://github.com/VeliovGroup/Meteor-Files/issues/626\n * @summary Get download URL for file by fileRef, even without subscription\n * @example {{fileURL fileRef}}\n * @returns {String}\n */\nMeteor.startup(function () {\n  if (typeof Template !== 'undefined' && Template !== null) {\n    Template.registerHelper('fileURL', function (fileRef) {\n      var _version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'original';\n\n      var _URIBase = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (!helpers.isObject(fileRef)) {\n        return '';\n      }\n\n      var version = !helpers.isString(_version) ? 'original' : _version;\n      var URIBase = !helpers.isString(_URIBase) ? void 0 : _URIBase;\n      return formatFleURL(fileRef, version, URIBase);\n    });\n  }\n});","map":{"version":3,"sources":["packages/ostrio:files/client.js"],"names":["_assertThisInitialized","module","link","default","v","_inheritsLoose","export","FilesCollection","Mongo","Meteor","DDP","Cookies","check","Match","UploadInstance","FilesCollectionCore","formatFleURL","helpers","NOOP","allowedParams","config","Object","keys","forEach","param","includes","self","cookie","allowQueryStringCookies","isBoolean","debug","public","chunkSize","Math","floor","isString","collectionName","collection","Collection","_name","filesCollection","String","downloadRoute","Error","disableUpload","replace","isFunction","namingFunction","onBeforeUpload","allowClientCode","ddp","onbeforeunloadMessage","setTokenCookie","connection","_lastSessionId","set","path","sameSite","isCordova","send","Accounts","onReconnect","conn","startup","onLogin","OneOf","Function","_URL","window","URL","webkitURL","mozURL","msURL","oURL","Worker","Blob","createObjectURL","_supportWebWorker","_webWorkerUrl","type","absoluteUrl","e","_debug","schema","Boolean","Number","Any","_methodNames","_Abort","_Write","_Start","_Remove","_getMimeType","fileData","mime","isObject","_getUser","result","user","userId","insert","autoStart","console","warn","remove","selector","callback","JSON","stringify","Optional","call","Template","registerHelper","fileRef","_version","_URIBase","version","URIBase"],"mappings":"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","sourcesContent":["import { Mongo }           from 'meteor/mongo';\nimport { Meteor }          from 'meteor/meteor';\nimport { DDP }             from 'meteor/ddp-client';\nimport { Cookies }         from 'meteor/ostrio:cookies';\nimport { check, Match }    from 'meteor/check';\nimport { UploadInstance }  from './upload.js';\nimport FilesCollectionCore from './core.js';\nimport { formatFleURL, helpers } from './lib.js';\n\nconst NOOP = () => { };\nconst allowedParams = ['debug', 'ddp', 'schema', 'public', 'chunkSize', 'downloadRoute', 'collection', 'collectionName', 'namingFunction', 'onBeforeUpload', 'allowClientCode', 'onbeforeunloadMessage', 'disableUpload', 'allowQueryStringCookies'];\n\n/*\n * @locus Anywhere\n * @class FilesCollection\n * @param config           {Object}   - [Both]   Configuration object with next properties:\n * @param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n * @param config.ddp       {Object}   - [Client] Custom DDP connection. Object returned form `DDP.connect()`\n * @param config.schema    {Object}   - [Both]   Collection Schema\n * @param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs`\n * @param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n * @param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n * @param config.collection     {Mongo.Collection} - [Both] Mongo Collection Instance\n * @param config.collectionName {String}  - [Both]   Collection name\n * @param config.namingFunction {Function}- [Both]   Function which returns `String`\n * @param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.\n * return `true` to continue\n * return `false` or `String` to abort upload\n * @param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n * @param config.onbeforeunloadMessage {String|Function} - [Client] Message shown to user when closing browser's window or tab while upload process is running\n * @param config.disableUpload {Boolean} - Disable file upload, useful for server only solutions\n * @param config.allowQueryStringCookies {Boolean} - Allow passing Cookies in a query string (in URL). Primary should be used only in Cordova environment. Note: this option will be used only on Cordova. Default: `false`\n * @summary Create new instance of FilesCollection\n */\nexport class FilesCollection extends FilesCollectionCore {\n  constructor(config) {\n    super();\n    if (config) {\n      Object.keys(config).forEach((param) => {\n        if (allowedParams.includes(param)) {\n          this[param] = config[param];\n        }\n      });\n    }\n\n    const self = this;\n    const cookie = new Cookies({\n      allowQueryStringCookies: this.allowQueryStringCookies\n    });\n    if (!helpers.isBoolean(this.debug)) {\n      this.debug = false;\n    }\n\n    if (!helpers.isBoolean(this.public)) {\n      this.public = false;\n    }\n\n    if (!this.chunkSize) {\n      this.chunkSize = 1024 * 512;\n    }\n    this.chunkSize = Math.floor(this.chunkSize / 8) * 8;\n\n    if (!helpers.isString(this.collectionName) && !this.collection) {\n      this.collectionName = 'MeteorUploadFiles';\n    }\n\n    if (!this.collection) {\n      this.collection = new Mongo.Collection(this.collectionName);\n    } else {\n      this.collectionName = this.collection._name;\n    }\n\n    this.collection.filesCollection = this;\n    check(this.collectionName, String);\n\n    if (this.public && !this.downloadRoute) {\n      throw new Meteor.Error(500, `[FilesCollection.${this.collectionName}]: \"downloadRoute\" must be precisely provided on \"public\" collections! Note: \"downloadRoute\" must be equal or be inside of your web/proxy-server (relative) root.`);\n    }\n\n    if (!helpers.isBoolean(this.disableUpload)) {\n      this.disableUpload = false;\n    }\n\n    if (!helpers.isString(this.downloadRoute)) {\n      this.downloadRoute = '/cdn/storage';\n    }\n\n    this.downloadRoute = this.downloadRoute.replace(/\\/$/, '');\n\n    if (!helpers.isFunction(this.namingFunction)) {\n      this.namingFunction = false;\n    }\n\n    if (!helpers.isFunction(this.onBeforeUpload)) {\n      this.onBeforeUpload = false;\n    }\n\n    if (!helpers.isBoolean(this.allowClientCode)) {\n      this.allowClientCode = true;\n    }\n\n    if (!this.ddp) {\n      this.ddp = Meteor;\n    }\n\n    if (!this.onbeforeunloadMessage) {\n      this.onbeforeunloadMessage = 'Upload in a progress... Do you want to abort?';\n    }\n\n    const setTokenCookie = () => {\n      if (Meteor.connection._lastSessionId) {\n        cookie.set('x_mtok', Meteor.connection._lastSessionId, { path: '/', sameSite: 'Lax' });\n        if (Meteor.isCordova && this.allowQueryStringCookies) {\n          cookie.send();\n        }\n      }\n    };\n\n    if (typeof Accounts !== 'undefined' && Accounts !== null) {\n      DDP.onReconnect((conn) => {\n        conn.onReconnect = setTokenCookie;\n      });\n      Meteor.startup(setTokenCookie);\n      Accounts.onLogin(setTokenCookie);\n    }\n\n    check(this.onbeforeunloadMessage, Match.OneOf(String, Function));\n\n    try {\n      const _URL = window.URL || window.webkitURL || window.mozURL || window.msURL || window.oURL || false;\n      if (window.Worker && window.Blob && _URL && helpers.isFunction(_URL.createObjectURL)) {\n        this._supportWebWorker = true;\n        this._webWorkerUrl     = _URL.createObjectURL(new window.Blob(['!function(a){\"use strict\";a.onmessage=function(b){var c=b.data.f.slice(b.data.cs*(b.data.cc-1),b.data.cs*b.data.cc);if(b.data.ib===!0)postMessage({bin:c,chunkId:b.data.cc});else{var d;a.FileReader?(d=new FileReader,d.onloadend=function(a){postMessage({bin:(d.result||a.srcElement||a.target).split(\",\")[1],chunkId:b.data.cc,s:b.data.s})},d.onerror=function(a){throw(a.target||a.srcElement).error},d.readAsDataURL(c)):a.FileReaderSync?(d=new FileReaderSync,postMessage({bin:d.readAsDataURL(c).split(\",\")[1],chunkId:b.data.cc})):postMessage({bin:null,chunkId:b.data.cc,error:\"File API is not supported in WebWorker!\"})}}}(this);'], {type: 'application/javascript'}));\n      } else if (window.Worker) {\n        this._supportWebWorker = true;\n        this._webWorkerUrl     = Meteor.absoluteUrl('packages/ostrio_files/worker.min.js');\n      } else {\n        this._supportWebWorker = false;\n      }\n    } catch (e) {\n      self._debug('[FilesCollection] [Check WebWorker Availability] Error:', e);\n      this._supportWebWorker = false;\n    }\n\n    if (!this.schema) {\n      this.schema = FilesCollectionCore.schema;\n    }\n\n    check(this.debug, Boolean);\n    check(this.schema, Object);\n    check(this.public, Boolean);\n    check(this.chunkSize, Number);\n    check(this.downloadRoute, String);\n    check(this.disableUpload, Boolean);\n    check(this.namingFunction, Match.OneOf(false, Function));\n    check(this.onBeforeUpload, Match.OneOf(false, Function));\n    check(this.allowClientCode, Boolean);\n    check(this.ddp, Match.Any);\n\n    this._methodNames = {\n      _Abort: `_FilesCollectionAbort_${this.collectionName}`,\n      _Write: `_FilesCollectionWrite_${this.collectionName}`,\n      _Start: `_FilesCollectionStart_${this.collectionName}`,\n      _Remove: `_FilesCollectionRemove_${this.collectionName}`\n    };\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getMimeType\n   * @param {Object} fileData - File Object\n   * @summary Returns file's mime-type\n   * @returns {String}\n   */\n  _getMimeType(fileData) {\n    let mime;\n    check(fileData, Object);\n    if (helpers.isObject(fileData)) {\n      mime = fileData.type;\n    }\n\n    if (!mime || !helpers.isString(mime)) {\n      mime = 'application/octet-stream';\n    }\n    return mime;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getUser\n   * @summary Returns object with `userId` and `user()` method which return user's object\n   * @returns {Object}\n   */\n  _getUser() {\n    const result = {\n      user() {\n        return null;\n      },\n      userId: null\n    };\n\n    if (helpers.isFunction(Meteor.userId)) {\n      result.user = () => Meteor.user();\n      result.userId = Meteor.userId();\n    }\n\n    return result;\n  }\n\n  /*\n   * @locus Client\n   * @memberOf FilesCollection\n   * @name insert\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n   * @param {Object} config - Configuration object with next properties:\n   *   {File|Object} file           - HTML5 `files` item, like in change event: `e.currentTarget.files[0]`\n   *   {String}      fileId         - Optionnal `fileId` used at insert\n   *   {Object}      meta           - Additional data as object, use later for search\n   *   {Boolean}     allowWebWorkers- Allow/Deny WebWorkers usage\n   *   {Number|dynamic} streams     - Quantity of parallel upload streams, default: 2\n   *   {Number|dynamic} chunkSize   - Chunk size for upload\n   *   {String}      transport      - Upload transport `http` or `ddp`\n   *   {Object}      ddp            - Custom DDP connection. Object returned form `DDP.connect()`\n   *   {Function}    onUploaded     - Callback triggered when upload is finished, with two arguments `error` and `fileRef`\n   *   {Function}    onStart        - Callback triggered when upload is started after all successful validations, with two arguments `error` (always null) and `fileRef`\n   *   {Function}    onError        - Callback triggered on error in upload and/or FileReader, with two arguments `error` and `fileData`\n   *   {Function}    onProgress     - Callback triggered when chunk is sent, with only argument `progress`\n   *   {Function}    onBeforeUpload - Callback triggered right before upload is started:\n   *       return true to continue\n   *       return false to abort upload\n   * @param {Boolean} autoStart     - Start upload immediately. If set to false, you need manually call .start() method on returned class. Useful to set EventListeners.\n   * @summary Upload file to server over DDP or HTTP\n   * @returns {UploadInstance} Instance. UploadInstance has next properties:\n   *   {ReactiveVar} onPause  - Is upload process on the pause?\n   *   {ReactiveVar} state    - active|paused|aborted|completed\n   *   {ReactiveVar} progress - Current progress in percentage\n   *   {Function}    pause    - Pause upload process\n   *   {Function}    continue - Continue paused upload process\n   *   {Function}    toggle   - Toggle continue/pause if upload process\n   *   {Function}    abort    - Abort upload\n   *   {Function}    readAsDataURL - Current file as data URL, use to create image preview and etc. Be aware of big files, may lead to browser crash\n   */\n  insert(config, autoStart = true) {\n    if (this.disableUpload) {\n      console.warn('[FilesCollection] [insert()] Upload is disabled with [disableUpload]!');\n      return {};\n    }\n    return (new UploadInstance(config, this))[autoStart ? 'start' : 'manual']();\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name remove\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Function} callback - Callback with one `error` argument\n   * @summary Remove documents from the collection\n   * @returns {FilesCollection} Instance\n   */\n  remove(selector = {}, callback) {\n    this._debug(`[FilesCollection] [remove(${JSON.stringify(selector)})]`);\n    check(selector, Match.OneOf(Object, String));\n    check(callback, Match.Optional(Function));\n\n    if (this.allowClientCode) {\n      this.ddp.call(this._methodNames._Remove, selector, (callback || NOOP));\n    } else {\n      callback && callback(new Meteor.Error(401, '[FilesCollection] [remove] Run code from client is not allowed!'));\n      this._debug('[FilesCollection] [remove] Run code from client is not allowed!');\n    }\n\n    return this;\n  }\n}\n\n/*\n * @locus Client\n * @TemplateHelper\n * @name fileURL\n * @param {Object} fileRef - File reference object\n * @param {String} version - [Optional] Version of file you would like to request\n * @param {String} URIBase - [Optional] URI base, see - https://github.com/VeliovGroup/Meteor-Files/issues/626\n * @summary Get download URL for file by fileRef, even without subscription\n * @example {{fileURL fileRef}}\n * @returns {String}\n */\nMeteor.startup(() => {\n  if (typeof Template !== 'undefined' && Template !== null) {\n    Template.registerHelper('fileURL', (fileRef, _version = 'original', _URIBase) => {\n      if (!helpers.isObject(fileRef)) {\n        return '';\n      }\n\n      const version = (!helpers.isString(_version)) ? 'original' : _version;\n      const URIBase = (!helpers.isString(_URIBase)) ? void 0 : _URIBase;\n      return formatFleURL(fileRef, version, URIBase);\n    });\n  }\n});\n"]},"sourceType":"module","hash":"0da175cdeb5bcab8d8d6f819ebce6d1472b7dc19"}
