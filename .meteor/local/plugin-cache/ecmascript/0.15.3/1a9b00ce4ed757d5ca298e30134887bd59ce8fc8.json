{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\write-stream.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/ostrio:files/write-stream.js","filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\write-stream.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","root":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.15.3","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\write-stream.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ostrio:files/write-stream.js"}},"code":"module.export({\n  default: () => WriteStream\n});\nlet fs;\nmodule.link(\"fs-extra\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet helpers;\nmodule.link(\"./lib.js\", {\n  helpers(v) {\n    helpers = v;\n  }\n\n}, 2);\n\nconst NOOP = () => {};\n/*\n * @const {Object} bound   - Meteor.bindEnvironment (Fiber wrapper)\n * @const {Object} fdCache - File Descriptors Cache\n */\n\n\nconst bound = Meteor.bindEnvironment(callback => callback());\nconst fdCache = {};\n/*\n * @private\n * @locus Server\n * @class WriteStream\n * @param path        {String} - Path to file on FS\n * @param maxLength   {Number} - Max amount of chunks in stream\n * @param file        {Object} - fileRef Object\n * @param permissions {String} - Permissions which will be set to open descriptor (octal), like: `611` or `0o777`. Default: 0755\n * @summary writableStream wrapper class, makes sure chunks is written in given order. Implementation of queue stream.\n */\n\nclass WriteStream {\n  constructor(path, maxLength, file, permissions) {\n    this.path = path;\n    this.maxLength = maxLength;\n    this.file = file;\n    this.permissions = permissions;\n\n    if (!this.path || !helpers.isString(this.path)) {\n      return;\n    }\n\n    this.fd = null;\n    this.writtenChunks = 0;\n    this.ended = false;\n    this.aborted = false;\n\n    if (fdCache[this.path] && !fdCache[this.path].ended && !fdCache[this.path].aborted) {\n      this.fd = fdCache[this.path].fd;\n      this.writtenChunks = fdCache[this.path].writtenChunks;\n    } else {\n      fs.ensureFile(this.path, efError => {\n        bound(() => {\n          if (efError) {\n            this.abort();\n            throw new Meteor.Error(500, '[FilesCollection] [writeStream] [ensureFile] [Error:] ' + efError);\n          } else {\n            fs.open(this.path, 'r+', this.permissions, (oError, fd) => {\n              bound(() => {\n                if (oError) {\n                  this.abort();\n                  throw new Meteor.Error(500, '[FilesCollection] [writeStream] [ensureFile] [open] [Error:] ' + oError);\n                } else {\n                  this.fd = fd;\n                  fdCache[this.path] = this;\n                }\n              });\n            });\n          }\n        });\n      });\n    }\n  }\n  /*\n   * @memberOf writeStream\n   * @name write\n   * @param {Number} num - Chunk position in a stream\n   * @param {Buffer} chunk - Buffer (chunk binary data)\n   * @param {Function} callback - Callback\n   * @summary Write chunk in given order\n   * @returns {Boolean} - True if chunk is sent to stream, false if chunk is set into queue\n   */\n\n\n  write(num, chunk, callback) {\n    if (!this.aborted && !this.ended) {\n      if (this.fd) {\n        fs.write(this.fd, chunk, 0, chunk.length, (num - 1) * this.file.chunkSize, (error, written, buffer) => {\n          bound(() => {\n            callback && callback(error, written, buffer);\n\n            if (error) {\n              console.warn('[FilesCollection] [writeStream] [write] [Error:]', error);\n              this.abort();\n            } else {\n              ++this.writtenChunks;\n            }\n          });\n        });\n      } else {\n        Meteor.setTimeout(() => {\n          this.write(num, chunk, callback);\n        }, 25);\n      }\n    }\n\n    return false;\n  }\n  /*\n   * @memberOf writeStream\n   * @name end\n   * @param {Function} callback - Callback\n   * @summary Finishes writing to writableStream, only after all chunks in queue is written\n   * @returns {Boolean} - True if stream is fulfilled, false if queue is in progress\n   */\n\n\n  end(callback) {\n    if (!this.aborted && !this.ended) {\n      if (this.writtenChunks === this.maxLength) {\n        fs.close(this.fd, () => {\n          bound(() => {\n            delete fdCache[this.path];\n            this.ended = true;\n            callback && callback(void 0, true);\n          });\n        });\n        return true;\n      }\n\n      fs.stat(this.path, (error, stat) => {\n        bound(() => {\n          if (!error && stat) {\n            this.writtenChunks = Math.ceil(stat.size / this.file.chunkSize);\n          }\n\n          return Meteor.setTimeout(() => {\n            this.end(callback);\n          }, 25);\n        });\n      });\n    } else {\n      callback && callback(void 0, this.ended);\n    }\n\n    return false;\n  }\n  /*\n   * @memberOf writeStream\n   * @name abort\n   * @param {Function} callback - Callback\n   * @summary Aborts writing to writableStream, removes created file\n   * @returns {Boolean} - True\n   */\n\n\n  abort(callback) {\n    this.aborted = true;\n    delete fdCache[this.path];\n    fs.unlink(this.path, callback || NOOP);\n    return true;\n  }\n  /*\n   * @memberOf writeStream\n   * @name stop\n   * @summary Stop writing to writableStream\n   * @returns {Boolean} - True\n   */\n\n\n  stop() {\n    this.aborted = true;\n    delete fdCache[this.path];\n    return true;\n  }\n\n}","map":{"version":3,"sources":["packages/ostrio:files/write-stream.js"],"names":["module","export","default","WriteStream","fs","link","v","Meteor","helpers","NOOP","bound","bindEnvironment","callback","fdCache","constructor","path","maxLength","file","permissions","isString","fd","writtenChunks","ended","aborted","ensureFile","efError","abort","Error","open","oError","write","num","chunk","length","chunkSize","error","written","buffer","console","warn","setTimeout","end","close","stat","Math","ceil","size","unlink","stop"],"mappings":"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","sourcesContent":["import fs          from 'fs-extra';\nimport { Meteor }  from 'meteor/meteor';\nimport { helpers } from './lib.js';\nconst NOOP = () => {};\n\n/*\n * @const {Object} bound   - Meteor.bindEnvironment (Fiber wrapper)\n * @const {Object} fdCache - File Descriptors Cache\n */\nconst bound   = Meteor.bindEnvironment(callback => callback());\nconst fdCache = {};\n\n/*\n * @private\n * @locus Server\n * @class WriteStream\n * @param path        {String} - Path to file on FS\n * @param maxLength   {Number} - Max amount of chunks in stream\n * @param file        {Object} - fileRef Object\n * @param permissions {String} - Permissions which will be set to open descriptor (octal), like: `611` or `0o777`. Default: 0755\n * @summary writableStream wrapper class, makes sure chunks is written in given order. Implementation of queue stream.\n */\nexport default class WriteStream {\n  constructor(path, maxLength, file, permissions) {\n    this.path = path;\n    this.maxLength = maxLength;\n    this.file = file;\n    this.permissions = permissions;\n    if (!this.path || !helpers.isString(this.path)) {\n      return;\n    }\n\n    this.fd            = null;\n    this.writtenChunks = 0;\n    this.ended         = false;\n    this.aborted       = false;\n\n    if (fdCache[this.path] && !fdCache[this.path].ended && !fdCache[this.path].aborted) {\n      this.fd = fdCache[this.path].fd;\n      this.writtenChunks = fdCache[this.path].writtenChunks;\n    } else {\n      fs.ensureFile(this.path, (efError) => {\n        bound(() => {\n          if (efError) {\n            this.abort();\n            throw new Meteor.Error(500, '[FilesCollection] [writeStream] [ensureFile] [Error:] ' + efError);\n          } else {\n            fs.open(this.path, 'r+', this.permissions, (oError, fd) => {\n              bound(() => {\n                if (oError) {\n                  this.abort();\n                  throw new Meteor.Error(500, '[FilesCollection] [writeStream] [ensureFile] [open] [Error:] ' + oError);\n                } else {\n                  this.fd = fd;\n                  fdCache[this.path] = this;\n                }\n              });\n            });\n          }\n        });\n      });\n    }\n  }\n\n  /*\n   * @memberOf writeStream\n   * @name write\n   * @param {Number} num - Chunk position in a stream\n   * @param {Buffer} chunk - Buffer (chunk binary data)\n   * @param {Function} callback - Callback\n   * @summary Write chunk in given order\n   * @returns {Boolean} - True if chunk is sent to stream, false if chunk is set into queue\n   */\n  write(num, chunk, callback) {\n    if (!this.aborted && !this.ended) {\n      if (this.fd) {\n        fs.write(this.fd, chunk, 0, chunk.length, (num - 1) * this.file.chunkSize, (error, written, buffer) => {\n          bound(() => {\n            callback && callback(error, written, buffer);\n            if (error) {\n              console.warn('[FilesCollection] [writeStream] [write] [Error:]', error);\n              this.abort();\n            } else {\n              ++this.writtenChunks;\n            }\n          });\n        });\n      } else {\n        Meteor.setTimeout(() => {\n          this.write(num, chunk, callback);\n        }, 25);\n      }\n    }\n    return false;\n  }\n\n  /*\n   * @memberOf writeStream\n   * @name end\n   * @param {Function} callback - Callback\n   * @summary Finishes writing to writableStream, only after all chunks in queue is written\n   * @returns {Boolean} - True if stream is fulfilled, false if queue is in progress\n   */\n  end(callback) {\n    if (!this.aborted && !this.ended) {\n      if (this.writtenChunks === this.maxLength) {\n        fs.close(this.fd, () => {\n          bound(() => {\n            delete fdCache[this.path];\n            this.ended = true;\n            callback && callback(void 0, true);\n          });\n        });\n        return true;\n      }\n\n      fs.stat(this.path, (error, stat) => {\n        bound(() => {\n          if (!error && stat) {\n            this.writtenChunks = Math.ceil(stat.size / this.file.chunkSize);\n          }\n\n          return Meteor.setTimeout(() => {\n            this.end(callback);\n          }, 25);\n        });\n      });\n    } else {\n      callback && callback(void 0, this.ended);\n    }\n    return false;\n  }\n\n  /*\n   * @memberOf writeStream\n   * @name abort\n   * @param {Function} callback - Callback\n   * @summary Aborts writing to writableStream, removes created file\n   * @returns {Boolean} - True\n   */\n  abort(callback) {\n    this.aborted = true;\n    delete fdCache[this.path];\n    fs.unlink(this.path, (callback || NOOP));\n    return true;\n  }\n\n  /*\n   * @memberOf writeStream\n   * @name stop\n   * @summary Stop writing to writableStream\n   * @returns {Boolean} - True\n   */\n  stop() {\n    this.aborted = true;\n    delete fdCache[this.path];\n    return true;\n  }\n}\n"]},"sourceType":"module","hash":"1a9b00ce4ed757d5ca298e30134887bd59ce8fc8"}
