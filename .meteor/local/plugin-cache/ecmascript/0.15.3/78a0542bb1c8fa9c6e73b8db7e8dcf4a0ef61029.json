{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/ostrio:files/server.js","filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\server.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","root":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.15.3","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\packages\\ostrio:files\\server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ostrio:files/server.js"}},"code":"module.export({\n  FilesCollection: () => FilesCollection\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 3);\nlet Cookies;\nmodule.link(\"meteor/ostrio:cookies\", {\n  Cookies(v) {\n    Cookies = v;\n  }\n\n}, 4);\nlet WriteStream;\nmodule.link(\"./write-stream.js\", {\n  default(v) {\n    WriteStream = v;\n  }\n\n}, 5);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 6);\nlet FilesCollectionCore;\nmodule.link(\"./core.js\", {\n  default(v) {\n    FilesCollectionCore = v;\n  }\n\n}, 7);\nlet fixJSONParse, fixJSONStringify, helpers;\nmodule.link(\"./lib.js\", {\n  fixJSONParse(v) {\n    fixJSONParse = v;\n  },\n\n  fixJSONStringify(v) {\n    fixJSONStringify = v;\n  },\n\n  helpers(v) {\n    helpers = v;\n  }\n\n}, 8);\nlet fs;\nmodule.link(\"fs-extra\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 9);\nlet nodeQs;\nmodule.link(\"querystring\", {\n  default(v) {\n    nodeQs = v;\n  }\n\n}, 10);\nlet request;\nmodule.link(\"request-libcurl\", {\n  default(v) {\n    request = v;\n  }\n\n}, 11);\nlet fileType;\nmodule.link(\"file-type\", {\n  default(v) {\n    fileType = v;\n  }\n\n}, 12);\nlet nodePath;\nmodule.link(\"path\", {\n  default(v) {\n    nodePath = v;\n  }\n\n}, 13);\n\n/*\n * @const {Object} bound  - Meteor.bindEnvironment (Fiber wrapper)\n * @const {Function} NOOP - No Operation function, placeholder for required callbacks\n */\nconst bound = Meteor.bindEnvironment(callback => callback());\n\nconst NOOP = () => {};\n/*\n * @locus Anywhere\n * @class FilesCollection\n * @param config           {Object}   - [Both]   Configuration object with next properties:\n * @param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n * @param config.schema    {Object}   - [Both]   Collection Schema\n * @param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n * @param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n * @param config.protected {Function} - [Server] If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n *  - `request`\n *  - `response`\n *  - `user()`\n *  - `userId`\n * @param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n * @param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n * @param config.parentDirPermissions {Number}  - [Server] Permissions which will be set to parent directory of uploaded files (octal), like: `611` or `0o777`. Default: 0755\n * @param config.storagePath    {String|Function}  - [Server] Storage path on file system\n * @param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n * @param config.responseHeaders {Object|Function} - [Server] Custom response headers, if function is passed, must return Object\n * @param config.throttle       {Number}  - [Server] DEPRECATED bps throttle threshold\n * @param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n * @param config.collection     {Mongo.Collection} - [Both] Mongo Collection Instance\n * @param config.collectionName {String}  - [Both]   Collection name\n * @param config.namingFunction {Function}- [Both]   Function which returns `String`\n * @param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n * @param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n * @param config.onAfterRemove  {Function} - [Server] Called right after file is removed. Removed objects is passed to callback\n * @param config.continueUploadTTL {Number} - [Server] Time in seconds, during upload may be continued, default 3 hours (10800 seconds)\n * @param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.:\n *  - return `true` to continue\n *  - return `false` or `String` to abort upload\n * @param config.onInitiateUpload {Function} - [Server] Function which executes on server right before upload is begin and right after `onBeforeUpload` hook. This hook is fully asynchronous.\n * @param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n * @param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n * @param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n  * @param config.interceptRequest {Function} - [Server] Intercept incoming HTTP request, so you can whatever you want, no checks or preprocessing, arguments {http: {request: {...}, response: {...}}, params: {...}}\n * @param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n * @param config.disableUpload {Boolean} - Disable file upload, useful for server only solutions\n * @param config.disableDownload {Boolean} - Disable file download (serving), useful for file management only solutions\n * @param config.allowedOrigins  {Regex|Boolean}  - [Server]   Regex of Origins that are allowed CORS access or `false` to disable completely. Defaults to `/^http:\\/\\/localhost:12[0-9]{3}$/` for allowing Meteor-Cordova builds access\n * @param config.allowQueryStringCookies {Boolean} - Allow passing Cookies in a query string (in URL). Primary should be used only in Cordova environment. Note: this option will be used only on Cordova. Default: `false`\n * @param config._preCollection  {Mongo.Collection} - [Server] Mongo preCollection Instance\n * @param config._preCollectionName {String}  - [Server]  preCollection name\n * @summary Create new instance of FilesCollection\n */\n\n\nclass FilesCollection extends FilesCollectionCore {\n  constructor(config) {\n    super();\n    let storagePath;\n\n    if (config) {\n      ({\n        storagePath,\n        debug: this.debug,\n        schema: this.schema,\n        public: this.public,\n        strict: this.strict,\n        chunkSize: this.chunkSize,\n        protected: this.protected,\n        collection: this.collection,\n        permissions: this.permissions,\n        cacheControl: this.cacheControl,\n        downloadRoute: this.downloadRoute,\n        onAfterUpload: this.onAfterUpload,\n        onAfterRemove: this.onAfterRemove,\n        disableUpload: this.disableUpload,\n        onBeforeRemove: this.onBeforeRemove,\n        integrityCheck: this.integrityCheck,\n        collectionName: this.collectionName,\n        onBeforeUpload: this.onBeforeUpload,\n        namingFunction: this.namingFunction,\n        responseHeaders: this.responseHeaders,\n        disableDownload: this.disableDownload,\n        allowedOrigins: this.allowedOrigins,\n        allowClientCode: this.allowClientCode,\n        downloadCallback: this.downloadCallback,\n        onInitiateUpload: this.onInitiateUpload,\n        interceptRequest: this.interceptRequest,\n        interceptDownload: this.interceptDownload,\n        continueUploadTTL: this.continueUploadTTL,\n        parentDirPermissions: this.parentDirPermissions,\n        allowQueryStringCookies: this.allowQueryStringCookies,\n        _preCollection: this._preCollection,\n        _preCollectionName: this._preCollectionName\n      } = config);\n    }\n\n    const self = this;\n\n    if (!helpers.isBoolean(this.debug)) {\n      this.debug = false;\n    }\n\n    if (!helpers.isBoolean(this.public)) {\n      this.public = false;\n    }\n\n    if (!this.protected) {\n      this.protected = false;\n    }\n\n    if (!this.chunkSize) {\n      this.chunkSize = 1024 * 512;\n    }\n\n    this.chunkSize = Math.floor(this.chunkSize / 8) * 8;\n\n    if (!helpers.isString(this.collectionName) && !this.collection) {\n      this.collectionName = 'MeteorUploadFiles';\n    }\n\n    if (!this.collection) {\n      this.collection = new Mongo.Collection(this.collectionName);\n    } else {\n      this.collectionName = this.collection._name;\n    }\n\n    this.collection.filesCollection = this;\n    check(this.collectionName, String);\n\n    if (this.public && !this.downloadRoute) {\n      throw new Meteor.Error(500, \"[FilesCollection.\".concat(this.collectionName, \"]: \\\"downloadRoute\\\" must be precisely provided on \\\"public\\\" collections! Note: \\\"downloadRoute\\\" must be equal or be inside of your web/proxy-server (relative) root.\"));\n    }\n\n    if (!helpers.isString(this.downloadRoute)) {\n      this.downloadRoute = '/cdn/storage';\n    }\n\n    this.downloadRoute = this.downloadRoute.replace(/\\/$/, '');\n\n    if (!helpers.isFunction(this.namingFunction)) {\n      this.namingFunction = false;\n    }\n\n    if (!helpers.isFunction(this.onBeforeUpload)) {\n      this.onBeforeUpload = false;\n    }\n\n    if (!helpers.isBoolean(this.allowClientCode)) {\n      this.allowClientCode = true;\n    }\n\n    if (!helpers.isFunction(this.onInitiateUpload)) {\n      this.onInitiateUpload = false;\n    }\n\n    if (!helpers.isFunction(this.interceptRequest)) {\n      this.interceptRequest = false;\n    }\n\n    if (!helpers.isFunction(this.interceptDownload)) {\n      this.interceptDownload = false;\n    }\n\n    if (!helpers.isBoolean(this.strict)) {\n      this.strict = true;\n    }\n\n    if (!helpers.isBoolean(this.allowQueryStringCookies)) {\n      this.allowQueryStringCookies = false;\n    }\n\n    if (!helpers.isNumber(this.permissions)) {\n      this.permissions = parseInt('644', 8);\n    }\n\n    if (!helpers.isNumber(this.parentDirPermissions)) {\n      this.parentDirPermissions = parseInt('755', 8);\n    }\n\n    if (!helpers.isString(this.cacheControl)) {\n      this.cacheControl = 'public, max-age=31536000, s-maxage=31536000';\n    }\n\n    if (!helpers.isFunction(this.onAfterUpload)) {\n      this.onAfterUpload = false;\n    }\n\n    if (!helpers.isBoolean(this.disableUpload)) {\n      this.disableUpload = false;\n    }\n\n    if (!helpers.isFunction(this.onAfterRemove)) {\n      this.onAfterRemove = false;\n    }\n\n    if (!helpers.isFunction(this.onBeforeRemove)) {\n      this.onBeforeRemove = false;\n    }\n\n    if (!helpers.isBoolean(this.integrityCheck)) {\n      this.integrityCheck = true;\n    }\n\n    if (!helpers.isBoolean(this.disableDownload)) {\n      this.disableDownload = false;\n    }\n\n    if (!helpers.isBoolean(this.allowedOrigins) || this.allowedOrigins === true) {\n      this.allowedOrigins = /^http:\\/\\/localhost:12[0-9]{3}$/;\n    }\n\n    if (!helpers.isObject(this._currentUploads)) {\n      this._currentUploads = {};\n    }\n\n    if (!helpers.isFunction(this.downloadCallback)) {\n      this.downloadCallback = false;\n    }\n\n    if (!helpers.isNumber(this.continueUploadTTL)) {\n      this.continueUploadTTL = 10800;\n    }\n\n    if (!helpers.isFunction(this.responseHeaders)) {\n      this.responseHeaders = (responseCode, fileRef, versionRef) => {\n        const headers = {};\n\n        switch (responseCode) {\n          case '206':\n            headers.Pragma = 'private';\n            headers['Transfer-Encoding'] = 'chunked';\n            break;\n\n          case '400':\n            headers['Cache-Control'] = 'no-cache';\n            break;\n\n          case '416':\n            headers['Content-Range'] = \"bytes */\".concat(versionRef.size);\n            break;\n\n          default:\n            break;\n        }\n\n        headers.Connection = 'keep-alive';\n        headers['Content-Type'] = versionRef.type || 'application/octet-stream';\n        headers['Accept-Ranges'] = 'bytes';\n        return headers;\n      };\n    }\n\n    if (this.public && !storagePath) {\n      throw new Meteor.Error(500, \"[FilesCollection.\".concat(this.collectionName, \"] \\\"storagePath\\\" must be set on \\\"public\\\" collections! Note: \\\"storagePath\\\" must be equal on be inside of your web/proxy-server (absolute) root.\"));\n    }\n\n    if (!storagePath) {\n      storagePath = function () {\n        return \"assets\".concat(nodePath.sep, \"app\").concat(nodePath.sep, \"uploads\").concat(nodePath.sep).concat(self.collectionName);\n      };\n    }\n\n    if (helpers.isString(storagePath)) {\n      this.storagePath = () => storagePath;\n    } else {\n      this.storagePath = function () {\n        let sp = storagePath.apply(self, arguments);\n\n        if (!helpers.isString(sp)) {\n          throw new Meteor.Error(400, \"[FilesCollection.\".concat(self.collectionName, \"] \\\"storagePath\\\" function must return a String!\"));\n        }\n\n        sp = sp.replace(/\\/$/, '');\n        return nodePath.normalize(sp);\n      };\n    }\n\n    this._debug('[FilesCollection.storagePath] Set to:', this.storagePath({}));\n\n    fs.mkdirs(this.storagePath({}), {\n      mode: this.parentDirPermissions\n    }, error => {\n      if (error) {\n        throw new Meteor.Error(401, \"[FilesCollection.\".concat(self.collectionName, \"] Path \\\"\").concat(this.storagePath({}), \"\\\" is not writable! \").concat(error));\n      }\n    });\n    check(this.strict, Boolean);\n    check(this.permissions, Number);\n    check(this.storagePath, Function);\n    check(this.cacheControl, String);\n    check(this.onAfterRemove, Match.OneOf(false, Function));\n    check(this.onAfterUpload, Match.OneOf(false, Function));\n    check(this.disableUpload, Boolean);\n    check(this.integrityCheck, Boolean);\n    check(this.onBeforeRemove, Match.OneOf(false, Function));\n    check(this.disableDownload, Boolean);\n    check(this.downloadCallback, Match.OneOf(false, Function));\n    check(this.interceptRequest, Match.OneOf(false, Function));\n    check(this.interceptDownload, Match.OneOf(false, Function));\n    check(this.continueUploadTTL, Number);\n    check(this.responseHeaders, Match.OneOf(Object, Function));\n    check(this.allowQueryStringCookies, Boolean);\n    new Cookies({\n      allowQueryStringCookies: this.allowQueryStringCookies,\n      allowedCordovaOrigins: this.allowedOrigins\n    });\n\n    if (!this.disableUpload) {\n      if (!helpers.isString(this._preCollectionName) && !this._preCollection) {\n        this._preCollectionName = \"__pre_\".concat(this.collectionName);\n      }\n\n      if (!this._preCollection) {\n        this._preCollection = new Mongo.Collection(this._preCollectionName);\n      } else {\n        this._preCollectionName = this._preCollection._name;\n      }\n\n      check(this._preCollectionName, String);\n\n      this._preCollection._ensureIndex({\n        createdAt: 1\n      }, {\n        expireAfterSeconds: this.continueUploadTTL,\n        background: true\n      });\n\n      const _preCollectionCursor = this._preCollection.find({}, {\n        fields: {\n          _id: 1,\n          isFinished: 1\n        }\n      });\n\n      _preCollectionCursor.observe({\n        changed(doc) {\n          if (doc.isFinished) {\n            self._debug(\"[FilesCollection] [_preCollectionCursor.observe] [changed]: \".concat(doc._id));\n\n            self._preCollection.remove({\n              _id: doc._id\n            }, NOOP);\n          }\n        },\n\n        removed(doc) {\n          // Free memory after upload is done\n          // Or if upload is unfinished\n          self._debug(\"[FilesCollection] [_preCollectionCursor.observe] [removed]: \".concat(doc._id));\n\n          if (helpers.isObject(self._currentUploads[doc._id])) {\n            self._currentUploads[doc._id].stop();\n\n            self._currentUploads[doc._id].end(); // We can be unlucky to run into a race condition where another server removed this document before the change of `isFinished` is registered on this server.\n            // Therefore it's better to double-check with the main collection if the file is referenced there. Issue: https://github.com/VeliovGroup/Meteor-Files/issues/672\n\n\n            if (!doc.isFinished && self.collection.find({\n              _id: doc._id\n            }).count() === 0) {\n              self._debug(\"[FilesCollection] [_preCollectionCursor.observe] [removeUnfinishedUpload]: \".concat(doc._id));\n\n              self._currentUploads[doc._id].abort();\n            }\n\n            delete self._currentUploads[doc._id];\n          }\n        }\n\n      });\n\n      this._createStream = (_id, path, opts) => {\n        this._currentUploads[_id] = new WriteStream(path, opts.fileLength, opts, this.permissions);\n      }; // This little function allows to continue upload\n      // even after server is restarted (*not on dev-stage*)\n\n\n      this._continueUpload = _id => {\n        if (this._currentUploads[_id] && this._currentUploads[_id].file) {\n          if (!this._currentUploads[_id].aborted && !this._currentUploads[_id].ended) {\n            return this._currentUploads[_id].file;\n          }\n\n          this._createStream(_id, this._currentUploads[_id].file.file.path, this._currentUploads[_id].file);\n\n          return this._currentUploads[_id].file;\n        }\n\n        const contUpld = this._preCollection.findOne({\n          _id\n        });\n\n        if (contUpld) {\n          this._createStream(_id, contUpld.file.path, contUpld);\n\n          return this._currentUploads[_id].file;\n        }\n\n        return false;\n      };\n    }\n\n    if (!this.schema) {\n      this.schema = FilesCollectionCore.schema;\n    }\n\n    check(this.debug, Boolean);\n    check(this.schema, Object);\n    check(this.public, Boolean);\n    check(this.protected, Match.OneOf(Boolean, Function));\n    check(this.chunkSize, Number);\n    check(this.downloadRoute, String);\n    check(this.namingFunction, Match.OneOf(false, Function));\n    check(this.onBeforeUpload, Match.OneOf(false, Function));\n    check(this.onInitiateUpload, Match.OneOf(false, Function));\n    check(this.allowClientCode, Boolean);\n\n    if (this.public && this.protected) {\n      throw new Meteor.Error(500, \"[FilesCollection.\".concat(this.collectionName, \"]: Files can not be public and protected at the same time!\"));\n    }\n\n    this._checkAccess = http => {\n      if (this.protected) {\n        let result;\n\n        const {\n          user,\n          userId\n        } = this._getUser(http);\n\n        if (helpers.isFunction(this.protected)) {\n          let fileRef;\n\n          if (helpers.isObject(http.params) && http.params._id) {\n            fileRef = this.collection.findOne(http.params._id);\n          }\n\n          result = http ? this.protected.call(Object.assign(http, {\n            user,\n            userId\n          }), fileRef || null) : this.protected.call({\n            user,\n            userId\n          }, fileRef || null);\n        } else {\n          result = !!userId;\n        }\n\n        if (http && result === true || !http) {\n          return true;\n        }\n\n        const rc = helpers.isNumber(result) ? result : 401;\n\n        this._debug('[FilesCollection._checkAccess] WARN: Access denied!');\n\n        if (http) {\n          const text = 'Access denied!';\n\n          if (!http.response.headersSent) {\n            http.response.writeHead(rc, {\n              'Content-Type': 'text/plain',\n              'Content-Length': text.length\n            });\n          }\n\n          if (!http.response.finished) {\n            http.response.end(text);\n          }\n        }\n\n        return false;\n      }\n\n      return true;\n    };\n\n    this._methodNames = {\n      _Abort: \"_FilesCollectionAbort_\".concat(this.collectionName),\n      _Write: \"_FilesCollectionWrite_\".concat(this.collectionName),\n      _Start: \"_FilesCollectionStart_\".concat(this.collectionName),\n      _Remove: \"_FilesCollectionRemove_\".concat(this.collectionName)\n    };\n    this.on('_handleUpload', this._handleUpload);\n    this.on('_finishUpload', this._finishUpload);\n    this._handleUploadSync = Meteor.wrapAsync(this._handleUpload.bind(this));\n\n    if (this.disableUpload && this.disableDownload) {\n      return;\n    }\n\n    WebApp.connectHandlers.use((httpReq, httpResp, next) => {\n      if (this.allowedOrigins && httpReq._parsedUrl.path.includes(\"\".concat(this.downloadRoute, \"/\")) && !httpResp.headersSent) {\n        if (this.allowedOrigins.test(httpReq.headers.origin)) {\n          httpResp.setHeader('Access-Control-Allow-Credentials', 'true');\n          httpResp.setHeader('Access-Control-Allow-Origin', httpReq.headers.origin);\n        }\n\n        if (httpReq.method === 'OPTIONS') {\n          httpResp.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\n          httpResp.setHeader('Access-Control-Allow-Headers', 'Range, Content-Type, x-mtok, x-start, x-chunkid, x-fileid, x-eof');\n          httpResp.setHeader('Access-Control-Expose-Headers', 'Accept-Ranges, Content-Encoding, Content-Length, Content-Range');\n          httpResp.setHeader('Allow', 'GET, POST, OPTIONS');\n          httpResp.writeHead(200);\n          httpResp.end();\n          return;\n        }\n      }\n\n      if (!this.disableUpload && httpReq._parsedUrl.path.includes(\"\".concat(this.downloadRoute, \"/\").concat(this.collectionName, \"/__upload\"))) {\n        if (httpReq.method !== 'POST') {\n          next();\n          return;\n        }\n\n        const handleError = _error => {\n          let error = _error;\n          console.warn('[FilesCollection] [Upload] [HTTP] Exception:', error);\n          console.trace();\n\n          if (!httpResp.headersSent) {\n            httpResp.writeHead(500);\n          }\n\n          if (!httpResp.finished) {\n            if (helpers.isObject(error) && helpers.isFunction(error.toString)) {\n              error = error.toString();\n            }\n\n            if (!helpers.isString(error)) {\n              error = 'Unexpected error!';\n            }\n\n            httpResp.end(JSON.stringify({\n              error\n            }));\n          }\n        };\n\n        let body = '';\n\n        const handleData = () => {\n          try {\n            let opts;\n            let result;\n            let user;\n\n            if (httpReq.headers['x-mtok'] && this._getUserId(httpReq.headers['x-mtok'])) {\n              user = {\n                userId: this._getUserId(httpReq.headers['x-mtok'])\n              };\n            } else {\n              user = this._getUser({\n                request: httpReq,\n                response: httpResp\n              });\n            }\n\n            if (httpReq.headers['x-start'] !== '1') {\n              opts = {\n                fileId: httpReq.headers['x-fileid']\n              };\n\n              if (httpReq.headers['x-eof'] === '1') {\n                opts.eof = true;\n              } else {\n                opts.binData = Buffer.from(body, 'base64');\n                opts.chunkId = parseInt(httpReq.headers['x-chunkid']);\n              }\n\n              const _continueUpload = this._continueUpload(opts.fileId);\n\n              if (!_continueUpload) {\n                throw new Meteor.Error(408, 'Can\\'t continue upload, session expired. Start upload again.');\n              }\n\n              ({\n                result,\n                opts\n              } = this._prepareUpload(Object.assign(opts, _continueUpload), user.userId, 'HTTP'));\n\n              if (opts.eof) {\n                this._handleUpload(result, opts, _error => {\n                  let error = _error;\n\n                  if (error) {\n                    if (!httpResp.headersSent) {\n                      httpResp.writeHead(500);\n                    }\n\n                    if (!httpResp.finished) {\n                      if (helpers.isObject(error) && helpers.isFunction(error.toString)) {\n                        error = error.toString();\n                      }\n\n                      if (!helpers.isString(error)) {\n                        error = 'Unexpected error!';\n                      }\n\n                      httpResp.end(JSON.stringify({\n                        error\n                      }));\n                    }\n                  }\n\n                  if (!httpResp.headersSent) {\n                    httpResp.writeHead(200);\n                  }\n\n                  if (helpers.isObject(result.file) && result.file.meta) {\n                    result.file.meta = fixJSONStringify(result.file.meta);\n                  }\n\n                  if (!httpResp.finished) {\n                    httpResp.end(JSON.stringify(result));\n                  }\n                });\n\n                return;\n              }\n\n              this.emit('_handleUpload', result, opts, NOOP);\n\n              if (!httpResp.headersSent) {\n                httpResp.writeHead(204);\n              }\n\n              if (!httpResp.finished) {\n                httpResp.end();\n              }\n            } else {\n              try {\n                opts = JSON.parse(body);\n              } catch (jsonErr) {\n                console.error('Can\\'t parse incoming JSON from Client on [.insert() | upload], something went wrong!', jsonErr);\n                opts = {\n                  file: {}\n                };\n              }\n\n              if (!helpers.isObject(opts.file)) {\n                opts.file = {};\n              }\n\n              opts.___s = true;\n\n              this._debug(\"[FilesCollection] [File Start HTTP] \".concat(opts.file.name || '[no-name]', \" - \").concat(opts.fileId));\n\n              if (helpers.isObject(opts.file) && opts.file.meta) {\n                opts.file.meta = fixJSONParse(opts.file.meta);\n              }\n\n              ({\n                result\n              } = this._prepareUpload(helpers.clone(opts), user.userId, 'HTTP Start Method'));\n\n              if (this.collection.findOne(result._id)) {\n                throw new Meteor.Error(400, 'Can\\'t start upload, data substitution detected!');\n              }\n\n              opts._id = opts.fileId;\n              opts.createdAt = new Date();\n              opts.maxLength = opts.fileLength;\n\n              this._preCollection.insert(helpers.omit(opts, '___s'));\n\n              this._createStream(result._id, result.path, helpers.omit(opts, '___s'));\n\n              if (opts.returnMeta) {\n                if (!httpResp.headersSent) {\n                  httpResp.writeHead(200);\n                }\n\n                if (!httpResp.finished) {\n                  httpResp.end(JSON.stringify({\n                    uploadRoute: \"\".concat(this.downloadRoute, \"/\").concat(this.collectionName, \"/__upload\"),\n                    file: result\n                  }));\n                }\n              } else {\n                if (!httpResp.headersSent) {\n                  httpResp.writeHead(204);\n                }\n\n                if (!httpResp.finished) {\n                  httpResp.end();\n                }\n              }\n            }\n          } catch (httpRespErr) {\n            handleError(httpRespErr);\n          }\n        };\n\n        httpReq.setTimeout(20000, handleError);\n\n        if (typeof httpReq.body === 'object' && Object.keys(httpReq.body).length !== 0) {\n          body = JSON.stringify(httpReq.body);\n          handleData();\n        } else {\n          httpReq.on('data', data => bound(() => {\n            body += data;\n          }));\n          httpReq.on('end', () => bound(() => {\n            handleData();\n          }));\n        }\n\n        return;\n      }\n\n      if (!this.disableDownload) {\n        let uri;\n\n        if (!this.public) {\n          if (httpReq._parsedUrl.path.includes(\"\".concat(this.downloadRoute, \"/\").concat(this.collectionName))) {\n            uri = httpReq._parsedUrl.path.replace(\"\".concat(this.downloadRoute, \"/\").concat(this.collectionName), '');\n\n            if (uri.indexOf('/') === 0) {\n              uri = uri.substring(1);\n            }\n\n            const uris = uri.split('/');\n\n            if (uris.length === 3) {\n              const params = {\n                _id: uris[0],\n                query: httpReq._parsedUrl.query ? nodeQs.parse(httpReq._parsedUrl.query) : {},\n                name: uris[2].split('?')[0],\n                version: uris[1]\n              };\n              const http = {\n                request: httpReq,\n                response: httpResp,\n                params\n              };\n\n              if (this.interceptRequest && helpers.isFunction(this.interceptRequest) && this.interceptRequest(http) === true) {\n                return;\n              }\n\n              if (this._checkAccess(http)) {\n                this.download(http, uris[1], this.collection.findOne(uris[0]));\n              }\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        } else {\n          if (httpReq._parsedUrl.path.includes(\"\".concat(this.downloadRoute))) {\n            uri = httpReq._parsedUrl.path.replace(\"\".concat(this.downloadRoute), '');\n\n            if (uri.indexOf('/') === 0) {\n              uri = uri.substring(1);\n            }\n\n            const uris = uri.split('/');\n            let _file = uris[uris.length - 1];\n\n            if (_file) {\n              let version;\n\n              if (_file.includes('-')) {\n                version = _file.split('-')[0];\n                _file = _file.split('-')[1].split('?')[0];\n              } else {\n                version = 'original';\n                _file = _file.split('?')[0];\n              }\n\n              const params = {\n                query: httpReq._parsedUrl.query ? nodeQs.parse(httpReq._parsedUrl.query) : {},\n                file: _file,\n                _id: _file.split('.')[0],\n                version,\n                name: _file\n              };\n              const http = {\n                request: httpReq,\n                response: httpResp,\n                params\n              };\n\n              if (this.interceptRequest && helpers.isFunction(this.interceptRequest) && this.interceptRequest(http) === true) {\n                return;\n              }\n\n              this.download(http, version, this.collection.findOne(params._id));\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        }\n\n        return;\n      }\n\n      next();\n    });\n\n    if (!this.disableUpload) {\n      const _methods = {}; // Method used to remove file\n      // from Client side\n\n      _methods[this._methodNames._Remove] = function (selector) {\n        check(selector, Match.OneOf(String, Object));\n\n        self._debug(\"[FilesCollection] [Unlink Method] [.remove(\".concat(selector, \")]\"));\n\n        if (self.allowClientCode) {\n          if (self.onBeforeRemove && helpers.isFunction(self.onBeforeRemove)) {\n            const userId = this.userId;\n            const userFuncs = {\n              userId: this.userId,\n\n              user() {\n                if (Meteor.users) {\n                  return Meteor.users.findOne(userId);\n                }\n\n                return null;\n              }\n\n            };\n\n            if (!self.onBeforeRemove.call(userFuncs, self.find(selector) || null)) {\n              throw new Meteor.Error(403, '[FilesCollection] [remove] Not permitted!');\n            }\n          }\n\n          const cursor = self.find(selector);\n\n          if (cursor.count() > 0) {\n            self.remove(selector);\n            return true;\n          }\n\n          throw new Meteor.Error(404, 'Cursor is empty, no files is removed');\n        } else {\n          throw new Meteor.Error(401, '[FilesCollection] [remove] Run code from client is not allowed!');\n        }\n      }; // Method used to receive \"first byte\" of upload\n      // and all file's meta-data, so\n      // it won't be transferred with every chunk\n      // Basically it prepares everything\n      // So user can pause/disconnect and\n      // continue upload later, during `continueUploadTTL`\n\n\n      _methods[this._methodNames._Start] = function (opts, returnMeta) {\n        check(opts, {\n          file: Object,\n          fileId: String,\n          FSName: Match.Optional(String),\n          chunkSize: Number,\n          fileLength: Number\n        });\n        check(returnMeta, Match.Optional(Boolean));\n\n        self._debug(\"[FilesCollection] [File Start Method] \".concat(opts.file.name, \" - \").concat(opts.fileId));\n\n        opts.___s = true;\n\n        const {\n          result\n        } = self._prepareUpload(helpers.clone(opts), this.userId, 'DDP Start Method');\n\n        if (self.collection.findOne(result._id)) {\n          throw new Meteor.Error(400, 'Can\\'t start upload, data substitution detected!');\n        }\n\n        opts._id = opts.fileId;\n        opts.createdAt = new Date();\n        opts.maxLength = opts.fileLength;\n\n        try {\n          self._preCollection.insert(helpers.omit(opts, '___s'));\n\n          self._createStream(result._id, result.path, helpers.omit(opts, '___s'));\n        } catch (e) {\n          self._debug(\"[FilesCollection] [File Start Method] [EXCEPTION:] \".concat(opts.file.name, \" - \").concat(opts.fileId), e);\n\n          throw new Meteor.Error(500, 'Can\\'t start');\n        }\n\n        if (returnMeta) {\n          return {\n            uploadRoute: \"\".concat(self.downloadRoute, \"/\").concat(self.collectionName, \"/__upload\"),\n            file: result\n          };\n        }\n\n        return true;\n      }; // Method used to write file chunks\n      // it receives very limited amount of meta-data\n      // This method also responsible for EOF\n\n\n      _methods[this._methodNames._Write] = function (_opts) {\n        let opts = _opts;\n        let result;\n        check(opts, {\n          eof: Match.Optional(Boolean),\n          fileId: String,\n          binData: Match.Optional(String),\n          chunkId: Match.Optional(Number)\n        });\n\n        if (opts.binData) {\n          opts.binData = Buffer.from(opts.binData, 'base64');\n        }\n\n        const _continueUpload = self._continueUpload(opts.fileId);\n\n        if (!_continueUpload) {\n          throw new Meteor.Error(408, 'Can\\'t continue upload, session expired. Start upload again.');\n        }\n\n        this.unblock();\n        ({\n          result,\n          opts\n        } = self._prepareUpload(Object.assign(opts, _continueUpload), this.userId, 'DDP'));\n\n        if (opts.eof) {\n          try {\n            return self._handleUploadSync(result, opts);\n          } catch (handleUploadErr) {\n            self._debug('[FilesCollection] [Write Method] [DDP] Exception:', handleUploadErr);\n\n            throw handleUploadErr;\n          }\n        } else {\n          self.emit('_handleUpload', result, opts, NOOP);\n        }\n\n        return true;\n      }; // Method used to Abort upload\n      // - Feeing memory by .end()ing writableStreams\n      // - Removing temporary record from @_preCollection\n      // - Removing record from @collection\n      // - .unlink()ing chunks from FS\n\n\n      _methods[this._methodNames._Abort] = function (_id) {\n        check(_id, String);\n\n        const _continueUpload = self._continueUpload(_id);\n\n        self._debug(\"[FilesCollection] [Abort Method]: \".concat(_id, \" - \").concat(helpers.isObject(_continueUpload.file) ? _continueUpload.file.path : ''));\n\n        if (self._currentUploads && self._currentUploads[_id]) {\n          self._currentUploads[_id].stop();\n\n          self._currentUploads[_id].abort();\n        }\n\n        if (_continueUpload) {\n          self._preCollection.remove({\n            _id\n          });\n\n          self.remove({\n            _id\n          });\n\n          if (helpers.isObject(_continueUpload.file) && _continueUpload.file.path) {\n            self.unlink({\n              _id,\n              path: _continueUpload.file.path\n            });\n          }\n        }\n\n        return true;\n      };\n\n      Meteor.methods(_methods);\n    }\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name _prepareUpload\n   * @summary Internal method. Used to optimize received data and check upload permission\n   * @returns {Object}\n   */\n\n\n  _prepareUpload() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let userId = arguments.length > 1 ? arguments[1] : undefined;\n    let transport = arguments.length > 2 ? arguments[2] : undefined;\n    let ctx;\n\n    if (!helpers.isBoolean(opts.eof)) {\n      opts.eof = false;\n    }\n\n    if (!opts.binData) {\n      opts.binData = 'EOF';\n    }\n\n    if (!helpers.isNumber(opts.chunkId)) {\n      opts.chunkId = -1;\n    }\n\n    if (!helpers.isString(opts.FSName)) {\n      opts.FSName = opts.fileId;\n    }\n\n    this._debug(\"[FilesCollection] [Upload] [\".concat(transport, \"] Got #\").concat(opts.chunkId, \"/\").concat(opts.fileLength, \" chunks, dst: \").concat(opts.file.name || opts.file.fileName));\n\n    const fileName = this._getFileName(opts.file);\n\n    const {\n      extension,\n      extensionWithDot\n    } = this._getExt(fileName);\n\n    if (!helpers.isObject(opts.file.meta)) {\n      opts.file.meta = {};\n    }\n\n    let result = opts.file;\n    result.name = fileName;\n    result.meta = opts.file.meta;\n    result.extension = extension;\n    result.ext = extension;\n    result._id = opts.fileId;\n    result.userId = userId || null;\n    opts.FSName = opts.FSName.replace(/([^a-z0-9\\-\\_]+)/gi, '-');\n    result.path = \"\".concat(this.storagePath(result)).concat(nodePath.sep).concat(opts.FSName).concat(extensionWithDot);\n    result = Object.assign(result, this._dataToSchema(result));\n\n    if (this.onBeforeUpload && helpers.isFunction(this.onBeforeUpload)) {\n      ctx = Object.assign({\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId,\n        userId: result.userId,\n\n        user() {\n          if (Meteor.users && result.userId) {\n            return Meteor.users.findOne(result.userId);\n          }\n\n          return null;\n        },\n\n        eof: opts.eof\n      });\n      const isUploadAllowed = this.onBeforeUpload.call(ctx, result);\n\n      if (isUploadAllowed !== true) {\n        throw new Meteor.Error(403, helpers.isString(isUploadAllowed) ? isUploadAllowed : '@onBeforeUpload() returned false');\n      } else {\n        if (opts.___s === true && this.onInitiateUpload && helpers.isFunction(this.onInitiateUpload)) {\n          this.onInitiateUpload.call(ctx, result);\n        }\n      }\n    } else if (opts.___s === true && this.onInitiateUpload && helpers.isFunction(this.onInitiateUpload)) {\n      ctx = Object.assign({\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId,\n        userId: result.userId,\n\n        user() {\n          if (Meteor.users && result.userId) {\n            return Meteor.users.findOne(result.userId);\n          }\n\n          return null;\n        },\n\n        eof: opts.eof\n      });\n      this.onInitiateUpload.call(ctx, result);\n    }\n\n    return {\n      result,\n      opts\n    };\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name _finishUpload\n   * @summary Internal method. Finish upload, close Writable stream, add record to MongoDB and flush used memory\n   * @returns {undefined}\n   */\n\n\n  _finishUpload(result, opts, cb) {\n    this._debug(\"[FilesCollection] [Upload] [finish(ing)Upload] -> \".concat(result.path));\n\n    fs.chmod(result.path, this.permissions, NOOP);\n    result.type = this._getMimeType(opts.file);\n    result.public = this.public;\n\n    this._updateFileTypes(result);\n\n    this.collection.insert(helpers.clone(result), (colInsert, _id) => {\n      if (colInsert) {\n        cb && cb(colInsert);\n\n        this._debug('[FilesCollection] [Upload] [_finishUpload] [insert] Error:', colInsert);\n      } else {\n        this._preCollection.update({\n          _id: opts.fileId\n        }, {\n          $set: {\n            isFinished: true\n          }\n        }, preUpdateError => {\n          if (preUpdateError) {\n            cb && cb(preUpdateError);\n\n            this._debug('[FilesCollection] [Upload] [_finishUpload] [update] Error:', preUpdateError);\n          } else {\n            result._id = _id;\n\n            this._debug(\"[FilesCollection] [Upload] [finish(ed)Upload] -> \".concat(result.path));\n\n            this.onAfterUpload && this.onAfterUpload.call(this, result);\n            this.emit('afterUpload', result);\n            cb && cb(null, result);\n          }\n        });\n      }\n    });\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name _handleUpload\n   * @summary Internal method to handle upload process, pipe incoming data to Writable stream\n   * @returns {undefined}\n   */\n\n\n  _handleUpload(result, opts, cb) {\n    try {\n      if (opts.eof) {\n        this._currentUploads[result._id].end(() => {\n          this.emit('_finishUpload', result, opts, cb);\n        });\n      } else {\n        this._currentUploads[result._id].write(opts.chunkId, opts.binData, cb);\n      }\n    } catch (e) {\n      this._debug('[_handleUpload] [EXCEPTION:]', e);\n\n      cb && cb(e);\n    }\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getMimeType\n   * @param {Object} fileData - File Object\n   * @summary Returns file's mime-type\n   * @returns {String}\n   */\n\n\n  _getMimeType(fileData) {\n    let mime;\n    check(fileData, Object);\n\n    if (helpers.isObject(fileData) && fileData.type) {\n      mime = fileData.type;\n    }\n\n    if (fileData.path && (!mime || !helpers.isString(mime))) {\n      try {\n        let buf = Buffer.alloc(262);\n        const fd = fs.openSync(fileData.path, 'r');\n        const br = fs.readSync(fd, buf, 0, 262, 0);\n        fs.close(fd, NOOP);\n\n        if (br < 262) {\n          buf = buf.slice(0, br);\n        }\n\n        ({\n          mime\n        } = fileType(buf));\n      } catch (e) {// We're good\n      }\n    }\n\n    if (!mime || !helpers.isString(mime)) {\n      mime = 'application/octet-stream';\n    }\n\n    return mime;\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getUserId\n   * @summary Returns `userId` matching the xmtok token derived from Meteor.server.sessions\n   * @returns {String}\n   */\n\n\n  _getUserId(xmtok) {\n    if (!xmtok) return null; // throw an error upon an unexpected type of Meteor.server.sessions in order to identify breaking changes\n\n    if (!Meteor.server.sessions instanceof Map || !helpers.isObject(Meteor.server.sessions)) {\n      throw new Error('Received incompatible type of Meteor.server.sessions');\n    }\n\n    if (Meteor.server.sessions instanceof Map && Meteor.server.sessions.has(xmtok) && helpers.isObject(Meteor.server.sessions.get(xmtok))) {\n      // to be used with >= Meteor 1.8.1 where Meteor.server.sessions is a Map\n      return Meteor.server.sessions.get(xmtok).userId;\n    } else if (helpers.isObject(Meteor.server.sessions) && xmtok in Meteor.server.sessions && helpers.isObject(Meteor.server.sessions[xmtok])) {\n      // to be used with < Meteor 1.8.1 where Meteor.server.sessions is an Object\n      return Meteor.server.sessions[xmtok].userId;\n    }\n\n    return null;\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getUser\n   * @summary Returns object with `userId` and `user()` method which return user's object\n   * @returns {Object}\n   */\n\n\n  _getUser(http) {\n    const result = {\n      user() {\n        return null;\n      },\n\n      userId: null\n    };\n\n    if (http) {\n      let mtok = null;\n\n      if (http.request.headers['x-mtok']) {\n        mtok = http.request.headers['x-mtok'];\n      } else {\n        const cookie = http.request.Cookies;\n\n        if (cookie.has('x_mtok')) {\n          mtok = cookie.get('x_mtok');\n        }\n      }\n\n      if (mtok) {\n        const userId = this._getUserId(mtok);\n\n        if (userId) {\n          result.user = () => Meteor.users.findOne(userId);\n\n          result.userId = userId;\n        }\n      }\n    }\n\n    return result;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name write\n   * @param {Buffer} buffer - Binary File's Buffer\n   * @param {Object} opts - Object with file-data\n   * @param {String} opts.name - File name, alias: `fileName`\n   * @param {String} opts.type - File mime-type\n   * @param {Object} opts.meta - File additional meta-data\n   * @param {String} opts.userId - UserId, default *null*\n   * @param {String} opts.fileId - _id, default *null*\n   * @param {Function} callback - function(error, fileObj){...}\n   * @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n   * @summary Write buffer to FS and add to FilesCollection Collection\n   * @returns {FilesCollection} Instance\n   */\n\n\n  write(buffer) {\n    let _opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    let _callback = arguments.length > 2 ? arguments[2] : undefined;\n\n    let _proceedAfterUpload = arguments.length > 3 ? arguments[3] : undefined;\n\n    this._debug('[FilesCollection] [write()]');\n\n    let opts = _opts;\n    let callback = _callback;\n    let proceedAfterUpload = _proceedAfterUpload;\n\n    if (helpers.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (helpers.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (helpers.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n    const fileId = opts.fileId || Random.id();\n    const FSName = this.namingFunction ? this.namingFunction(opts) : fileId;\n    const fileName = opts.name || opts.fileName ? opts.name || opts.fileName : FSName;\n\n    const {\n      extension,\n      extensionWithDot\n    } = this._getExt(fileName);\n\n    opts.path = \"\".concat(this.storagePath(opts)).concat(nodePath.sep).concat(FSName).concat(extensionWithDot);\n    opts.type = this._getMimeType(opts);\n\n    if (!helpers.isObject(opts.meta)) {\n      opts.meta = {};\n    }\n\n    if (!helpers.isNumber(opts.size)) {\n      opts.size = buffer.length;\n    }\n\n    const result = this._dataToSchema({\n      name: fileName,\n      path: opts.path,\n      meta: opts.meta,\n      type: opts.type,\n      size: opts.size,\n      userId: opts.userId,\n      extension\n    });\n\n    result._id = fileId;\n    fs.ensureFile(opts.path, efError => {\n      bound(() => {\n        if (efError) {\n          callback && callback(efError);\n\n          this._debug(\"[FilesCollection] [write] [ensureFile] [Error:] \".concat(fileName, \" -> \").concat(opts.path), efError);\n        } else {\n          const stream = fs.createWriteStream(opts.path, {\n            flags: 'w',\n            mode: this.permissions\n          });\n          stream.end(buffer, streamErr => {\n            bound(() => {\n              if (streamErr) {\n                callback && callback(streamErr);\n              } else {\n                this.collection.insert(result, (insertErr, _id) => {\n                  if (insertErr) {\n                    callback && callback(insertErr);\n\n                    this._debug(\"[FilesCollection] [write] [insert] Error: \".concat(fileName, \" -> \").concat(this.collectionName), insertErr);\n                  } else {\n                    const fileRef = this.collection.findOne(_id);\n                    callback && callback(null, fileRef);\n\n                    if (proceedAfterUpload === true) {\n                      this.onAfterUpload && this.onAfterUpload.call(this, fileRef);\n                      this.emit('afterUpload', fileRef);\n                    }\n\n                    this._debug(\"[FilesCollection] [write]: \".concat(fileName, \" -> \").concat(this.collectionName));\n                  }\n                });\n              }\n            });\n          });\n        }\n      });\n    });\n    return this;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name load\n   * @param {String} url - URL to file\n   * @param {Object} opts - Object with file-data\n   * @param {Object} opts.headers - HTTP headers to use when requesting the file\n   * @param {String} opts.name - File name, alias: `fileName`\n   * @param {String} opts.type - File mime-type\n   * @param {Object} opts.meta - File additional meta-data\n   * @param {String} opts.userId - UserId, default *null*\n   * @param {String} opts.fileId - _id, default *null*\n   * @param {Function} callback - function(error, fileObj){...}\n   * @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n   * @summary Download file, write stream to FS and add to FilesCollection Collection\n   * @returns {FilesCollection} Instance\n   */\n\n\n  load(url) {\n    let _opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    let _callback = arguments.length > 2 ? arguments[2] : undefined;\n\n    let _proceedAfterUpload = arguments.length > 3 ? arguments[3] : undefined;\n\n    this._debug(\"[FilesCollection] [load(\".concat(url, \", \").concat(JSON.stringify(_opts), \", callback)]\"));\n\n    let opts = _opts;\n    let callback = _callback;\n    let proceedAfterUpload = _proceedAfterUpload;\n\n    if (helpers.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (helpers.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (helpers.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n\n    check(url, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n\n    if (!helpers.isObject(opts)) {\n      opts = {};\n    }\n\n    const fileId = opts.fileId || Random.id();\n    const FSName = this.namingFunction ? this.namingFunction(opts) : fileId;\n    const pathParts = url.split('/');\n    const fileName = opts.name || opts.fileName ? opts.name || opts.fileName : pathParts[pathParts.length - 1] || FSName;\n\n    const {\n      extension,\n      extensionWithDot\n    } = this._getExt(fileName);\n\n    opts.path = \"\".concat(this.storagePath(opts)).concat(nodePath.sep).concat(FSName).concat(extensionWithDot);\n\n    const storeResult = (result, cb) => {\n      result._id = fileId;\n      this.collection.insert(result, (error, _id) => {\n        if (error) {\n          cb && cb(error);\n\n          this._debug(\"[FilesCollection] [load] [insert] Error: \".concat(fileName, \" -> \").concat(this.collectionName), error);\n        } else {\n          const fileRef = this.collection.findOne(_id);\n          cb && cb(null, fileRef);\n\n          if (proceedAfterUpload === true) {\n            this.onAfterUpload && this.onAfterUpload.call(this, fileRef);\n            this.emit('afterUpload', fileRef);\n          }\n\n          this._debug(\"[FilesCollection] [load] [insert] \".concat(fileName, \" -> \").concat(this.collectionName));\n        }\n      });\n    };\n\n    fs.ensureFile(opts.path, efError => {\n      bound(() => {\n        if (efError) {\n          callback && callback(efError);\n\n          this._debug(\"[FilesCollection] [load] [ensureFile] [Error:] \".concat(fileName, \" -> \").concat(opts.path), efError);\n        } else {\n          request({\n            url,\n            headers: opts.headers || {},\n            wait: true\n          }, (reqError, response) => bound(() => {\n            if (reqError) {\n              callback && callback(reqError);\n\n              this._debug(\"[FilesCollection] [load] [request.get(\".concat(url, \")] Error:\"), reqError);\n            } else {\n              this._debug(\"[FilesCollection] [load] Received: \".concat(url));\n\n              const result = this._dataToSchema({\n                name: fileName,\n                path: opts.path,\n                meta: opts.meta,\n                type: opts.type || response.headers['content-type'] || this._getMimeType({\n                  path: opts.path\n                }),\n                size: opts.size || parseInt(response.headers['content-length'] || 0),\n                userId: opts.userId,\n                extension\n              });\n\n              if (!result.size) {\n                fs.stat(opts.path, (error, stats) => bound(() => {\n                  if (error) {\n                    callback && callback(error);\n                  } else {\n                    result.versions.original.size = result.size = stats.size;\n                    storeResult(result, callback);\n                  }\n                }));\n              } else {\n                storeResult(result, callback);\n              }\n            }\n          })).pipe(fs.createWriteStream(opts.path, {\n            flags: 'w',\n            mode: this.permissions\n          })).send();\n        }\n      });\n    });\n    return this;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name addFile\n   * @param {String} path          - Path to file\n   * @param {String} opts          - [Optional] Object with file-data\n   * @param {String} opts.type     - [Optional] File mime-type\n   * @param {Object} opts.meta     - [Optional] File additional meta-data\n   * @param {String} opts.fileId   - _id, default *null*\n   * @param {Object} opts.fileName - [Optional] File name, if not specified file name and extension will be taken from path\n   * @param {String} opts.userId   - [Optional] UserId, default *null*\n   * @param {Function} callback    - [Optional] function(error, fileObj){...}\n   * @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n   * @summary Add file from FS to FilesCollection\n   * @returns {FilesCollection} Instance\n   */\n\n\n  addFile(path) {\n    let _opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    let _callback = arguments.length > 2 ? arguments[2] : undefined;\n\n    let _proceedAfterUpload = arguments.length > 3 ? arguments[3] : undefined;\n\n    this._debug(\"[FilesCollection] [addFile(\".concat(path, \")]\"));\n\n    let opts = _opts;\n    let callback = _callback;\n    let proceedAfterUpload = _proceedAfterUpload;\n\n    if (helpers.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts = {};\n    } else if (helpers.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (helpers.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n\n    if (this.public) {\n      throw new Meteor.Error(403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection');\n    }\n\n    check(path, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n    fs.stat(path, (statErr, stats) => bound(() => {\n      if (statErr) {\n        callback && callback(statErr);\n      } else if (stats.isFile()) {\n        if (!helpers.isObject(opts)) {\n          opts = {};\n        }\n\n        opts.path = path;\n\n        if (!opts.fileName) {\n          const pathParts = path.split(nodePath.sep);\n          opts.fileName = path.split(nodePath.sep)[pathParts.length - 1];\n        }\n\n        const {\n          extension\n        } = this._getExt(opts.fileName);\n\n        if (!helpers.isString(opts.type)) {\n          opts.type = this._getMimeType(opts);\n        }\n\n        if (!helpers.isObject(opts.meta)) {\n          opts.meta = {};\n        }\n\n        if (!helpers.isNumber(opts.size)) {\n          opts.size = stats.size;\n        }\n\n        const result = this._dataToSchema({\n          name: opts.fileName,\n          path,\n          meta: opts.meta,\n          type: opts.type,\n          size: opts.size,\n          userId: opts.userId,\n          extension,\n          _storagePath: path.replace(\"\".concat(nodePath.sep).concat(opts.fileName), ''),\n          fileId: opts.fileId || null\n        });\n\n        this.collection.insert(result, (insertErr, _id) => {\n          if (insertErr) {\n            callback && callback(insertErr);\n\n            this._debug(\"[FilesCollection] [addFile] [insert] Error: \".concat(result.name, \" -> \").concat(this.collectionName), insertErr);\n          } else {\n            const fileRef = this.collection.findOne(_id);\n            callback && callback(null, fileRef);\n\n            if (proceedAfterUpload === true) {\n              this.onAfterUpload && this.onAfterUpload.call(this, fileRef);\n              this.emit('afterUpload', fileRef);\n            }\n\n            this._debug(\"[FilesCollection] [addFile]: \".concat(result.name, \" -> \").concat(this.collectionName));\n          }\n        });\n      } else {\n        callback && callback(new Meteor.Error(400, \"[FilesCollection] [addFile(\".concat(path, \")]: File does not exist\")));\n      }\n    }));\n    return this;\n  }\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name remove\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Function} callback - Callback with one `error` argument\n   * @summary Remove documents from the collection\n   * @returns {FilesCollection} Instance\n   */\n\n\n  remove(selector, callback) {\n    this._debug(\"[FilesCollection] [remove(\".concat(JSON.stringify(selector), \")]\"));\n\n    if (selector === void 0) {\n      return 0;\n    }\n\n    check(callback, Match.Optional(Function));\n    const files = this.collection.find(selector);\n\n    if (files.count() > 0) {\n      files.forEach(file => {\n        this.unlink(file);\n      });\n    } else {\n      callback && callback(new Meteor.Error(404, 'Cursor is empty, no files is removed'));\n      return this;\n    }\n\n    if (this.onAfterRemove) {\n      const docs = files.fetch();\n      const self = this;\n      this.collection.remove(selector, function () {\n        callback && callback.apply(this, arguments);\n        self.onAfterRemove(docs);\n      });\n    } else {\n      this.collection.remove(selector, callback || NOOP);\n    }\n\n    return this;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name deny\n   * @param {Object} rules\n   * @see  https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n   * @summary link Mongo.Collection deny methods\n   * @returns {Mongo.Collection} Instance\n   */\n\n\n  deny(rules) {\n    this.collection.deny(rules);\n    return this.collection;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name allow\n   * @param {Object} rules\n   * @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n   * @summary link Mongo.Collection allow methods\n   * @returns {Mongo.Collection} Instance\n   */\n\n\n  allow(rules) {\n    this.collection.allow(rules);\n    return this.collection;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name denyClient\n   * @see https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n   * @summary Shorthands for Mongo.Collection deny method\n   * @returns {Mongo.Collection} Instance\n   */\n\n\n  denyClient() {\n    this.collection.deny({\n      insert() {\n        return true;\n      },\n\n      update() {\n        return true;\n      },\n\n      remove() {\n        return true;\n      }\n\n    });\n    return this.collection;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name allowClient\n   * @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n   * @summary Shorthands for Mongo.Collection allow method\n   * @returns {Mongo.Collection} Instance\n   */\n\n\n  allowClient() {\n    this.collection.allow({\n      insert() {\n        return true;\n      },\n\n      update() {\n        return true;\n      },\n\n      remove() {\n        return true;\n      }\n\n    });\n    return this.collection;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name unlink\n   * @param {Object} fileRef - fileObj\n   * @param {String} version - [Optional] file's version\n   * @param {Function} callback - [Optional] callback function\n   * @summary Unlink files and it's versions from FS\n   * @returns {FilesCollection} Instance\n   */\n\n\n  unlink(fileRef, version, callback) {\n    this._debug(\"[FilesCollection] [unlink(\".concat(fileRef._id, \", \").concat(version, \")]\"));\n\n    if (version) {\n      if (helpers.isObject(fileRef.versions) && helpers.isObject(fileRef.versions[version]) && fileRef.versions[version].path) {\n        fs.unlink(fileRef.versions[version].path, callback || NOOP);\n      }\n    } else {\n      if (helpers.isObject(fileRef.versions)) {\n        for (let vKey in fileRef.versions) {\n          if (fileRef.versions[vKey] && fileRef.versions[vKey].path) {\n            fs.unlink(fileRef.versions[vKey].path, callback || NOOP);\n          }\n        }\n      } else {\n        fs.unlink(fileRef.path, callback || NOOP);\n      }\n    }\n\n    return this;\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name _404\n   * @summary Internal method, used to return 404 error\n   * @returns {undefined}\n   */\n\n\n  _404(http) {\n    this._debug(\"[FilesCollection] [download(\".concat(http.request.originalUrl, \")] [_404] File not found\"));\n\n    const text = 'File Not Found :(';\n\n    if (!http.response.headersSent) {\n      http.response.writeHead(404, {\n        'Content-Type': 'text/plain',\n        'Content-Length': text.length\n      });\n    }\n\n    if (!http.response.finished) {\n      http.response.end(text);\n    }\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name download\n   * @param {Object} http    - Server HTTP object\n   * @param {String} version - Requested file version\n   * @param {Object} fileRef - Requested file Object\n   * @summary Initiates the HTTP response\n   * @returns {undefined}\n   */\n\n\n  download(http) {\n    let version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'original';\n    let fileRef = arguments.length > 2 ? arguments[2] : undefined;\n    let vRef;\n\n    this._debug(\"[FilesCollection] [download(\".concat(http.request.originalUrl, \", \").concat(version, \")]\"));\n\n    if (fileRef) {\n      if (helpers.has(fileRef, 'versions') && helpers.has(fileRef.versions, version)) {\n        vRef = fileRef.versions[version];\n        vRef._id = fileRef._id;\n      } else {\n        vRef = fileRef;\n      }\n    } else {\n      vRef = false;\n    }\n\n    if (!vRef || !helpers.isObject(vRef)) {\n      return this._404(http);\n    } else if (fileRef) {\n      if (this.downloadCallback) {\n        if (!this.downloadCallback.call(Object.assign(http, this._getUser(http)), fileRef)) {\n          return this._404(http);\n        }\n      }\n\n      if (this.interceptDownload && helpers.isFunction(this.interceptDownload) && this.interceptDownload(http, fileRef, version) === true) {\n        return void 0;\n      }\n\n      fs.stat(vRef.path, (statErr, stats) => bound(() => {\n        let responseType;\n\n        if (statErr || !stats.isFile()) {\n          return this._404(http);\n        }\n\n        if (stats.size !== vRef.size && !this.integrityCheck) {\n          vRef.size = stats.size;\n        }\n\n        if (stats.size !== vRef.size && this.integrityCheck) {\n          responseType = '400';\n        }\n\n        return this.serve(http, fileRef, vRef, version, null, responseType || '200');\n      }));\n      return void 0;\n    }\n\n    return this._404(http);\n  }\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name serve\n   * @param {Object} http    - Server HTTP object\n   * @param {Object} fileRef - Requested file Object\n   * @param {Object} vRef    - Requested file version Object\n   * @param {String} version - Requested file version\n   * @param {stream.Readable|null} readableStream - Readable stream, which serves binary file data\n   * @param {String} responseType - Response code\n   * @param {Boolean} force200 - Force 200 response code over 206\n   * @summary Handle and reply to incoming request\n   * @returns {undefined}\n   */\n\n\n  serve(http, fileRef, vRef) {\n    let version = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'original';\n    let readableStream = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n    let _responseType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '200';\n\n    let force200 = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    let partiral = false;\n    let reqRange = false;\n    let dispositionType = '';\n    let start;\n    let end;\n    let take;\n    let responseType = _responseType;\n\n    if (http.params.query.download && http.params.query.download === 'true') {\n      dispositionType = 'attachment; ';\n    } else {\n      dispositionType = 'inline; ';\n    }\n\n    const dispositionName = \"filename=\\\"\".concat(encodeURI(vRef.name || fileRef.name).replace(/\\,/g, '%2C'), \"\\\"; filename*=UTF-8''\").concat(encodeURIComponent(vRef.name || fileRef.name), \"; \");\n    const dispositionEncoding = 'charset=UTF-8';\n\n    if (!http.response.headersSent) {\n      http.response.setHeader('Content-Disposition', dispositionType + dispositionName + dispositionEncoding);\n    }\n\n    if (http.request.headers.range && !force200) {\n      partiral = true;\n      const array = http.request.headers.range.split(/bytes=([0-9]*)-([0-9]*)/);\n      start = parseInt(array[1]);\n      end = parseInt(array[2]);\n\n      if (isNaN(end)) {\n        end = vRef.size - 1;\n      }\n\n      take = end - start;\n    } else {\n      start = 0;\n      end = vRef.size - 1;\n      take = vRef.size;\n    }\n\n    if (partiral || http.params.query.play && http.params.query.play === 'true') {\n      reqRange = {\n        start,\n        end\n      };\n\n      if (isNaN(start) && !isNaN(end)) {\n        reqRange.start = end - take;\n        reqRange.end = end;\n      }\n\n      if (!isNaN(start) && isNaN(end)) {\n        reqRange.start = start;\n        reqRange.end = start + take;\n      }\n\n      if (start + take >= vRef.size) {\n        reqRange.end = vRef.size - 1;\n      }\n\n      if (this.strict && (reqRange.start >= vRef.size - 1 || reqRange.end > vRef.size - 1)) {\n        responseType = '416';\n      } else {\n        responseType = '206';\n      }\n    } else {\n      responseType = '200';\n    }\n\n    const streamErrorHandler = error => {\n      this._debug(\"[FilesCollection] [serve(\".concat(vRef.path, \", \").concat(version, \")] [500]\"), error);\n\n      if (!http.response.finished) {\n        http.response.end(error.toString());\n      }\n    };\n\n    const headers = helpers.isFunction(this.responseHeaders) ? this.responseHeaders(responseType, fileRef, vRef, version, http) : this.responseHeaders;\n\n    if (!headers['Cache-Control']) {\n      if (!http.response.headersSent) {\n        http.response.setHeader('Cache-Control', this.cacheControl);\n      }\n    }\n\n    for (let key in headers) {\n      if (!http.response.headersSent) {\n        http.response.setHeader(key, headers[key]);\n      }\n    }\n\n    const respond = (stream, code) => {\n      stream._isEnded = false;\n\n      const closeStreamCb = closeError => {\n        if (!closeError) {\n          stream._isEnded = true;\n        } else {\n          this._debug(\"[FilesCollection] [serve(\".concat(vRef.path, \", \").concat(version, \")] [respond] [closeStreamCb] Error:\"), closeError);\n        }\n      };\n\n      const closeStream = () => {\n        if (!stream._isEnded) {\n          if (typeof stream.close === 'function') {\n            stream.close(closeStreamCb);\n          } else if (typeof stream.end === 'function') {\n            stream.end(closeStreamCb);\n          } else if (typeof stream.destroy === 'function') {\n            stream.destroy('Got to close this stream', closeStreamCb);\n          }\n        }\n      };\n\n      if (!http.response.headersSent && readableStream) {\n        http.response.writeHead(code);\n      }\n\n      http.response.on('close', closeStream);\n      http.request.on('aborted', () => {\n        http.request.aborted = true;\n        closeStream();\n      });\n      stream.on('open', () => {\n        if (!http.response.headersSent) {\n          http.response.writeHead(code);\n        }\n      }).on('abort', () => {\n        closeStream();\n\n        if (!http.response.finished) {\n          http.response.end();\n        }\n\n        if (!http.request.aborted) {\n          http.request.destroy();\n        }\n      }).on('error', err => {\n        closeStream();\n        streamErrorHandler(err);\n      }).on('end', () => {\n        closeStream();\n\n        if (!http.response.finished) {\n          http.response.end();\n        }\n      }).pipe(http.response);\n    };\n\n    switch (responseType) {\n      case '400':\n        this._debug(\"[FilesCollection] [serve(\".concat(vRef.path, \", \").concat(version, \")] [400] Content-Length mismatch!\"));\n\n        var text = 'Content-Length mismatch!';\n\n        if (!http.response.headersSent) {\n          http.response.writeHead(400, {\n            'Content-Type': 'text/plain',\n            'Content-Length': text.length\n          });\n        }\n\n        if (!http.response.finished) {\n          http.response.end(text);\n        }\n\n        break;\n\n      case '404':\n        this._404(http);\n\n        break;\n\n      case '416':\n        this._debug(\"[FilesCollection] [serve(\".concat(vRef.path, \", \").concat(version, \")] [416] Content-Range is not specified!\"));\n\n        if (!http.response.headersSent) {\n          http.response.writeHead(416);\n        }\n\n        if (!http.response.finished) {\n          http.response.end();\n        }\n\n        break;\n\n      case '206':\n        this._debug(\"[FilesCollection] [serve(\".concat(vRef.path, \", \").concat(version, \")] [206]\"));\n\n        if (!http.response.headersSent) {\n          http.response.setHeader('Content-Range', \"bytes \".concat(reqRange.start, \"-\").concat(reqRange.end, \"/\").concat(vRef.size));\n        }\n\n        respond(readableStream || fs.createReadStream(vRef.path, {\n          start: reqRange.start,\n          end: reqRange.end\n        }), 206);\n        break;\n\n      default:\n        if (!http.response.headersSent) {\n          http.response.setHeader('Content-Length', \"\".concat(vRef.size));\n        }\n\n        this._debug(\"[FilesCollection] [serve(\".concat(vRef.path, \", \").concat(version, \")] [200]\"));\n\n        respond(readableStream || fs.createReadStream(vRef.path), 200);\n        break;\n    }\n  }\n\n}","map":{"version":3,"sources":["packages/ostrio:files/server.js"],"names":["module","export","FilesCollection","Mongo","link","v","WebApp","Meteor","Random","Cookies","WriteStream","default","check","Match","FilesCollectionCore","fixJSONParse","fixJSONStringify","helpers","fs","nodeQs","request","fileType","nodePath","bound","bindEnvironment","callback","NOOP","constructor","config","storagePath","debug","schema","public","strict","chunkSize","protected","collection","permissions","cacheControl","downloadRoute","onAfterUpload","onAfterRemove","disableUpload","onBeforeRemove","integrityCheck","collectionName","onBeforeUpload","namingFunction","responseHeaders","disableDownload","allowedOrigins","allowClientCode","downloadCallback","onInitiateUpload","interceptRequest","interceptDownload","continueUploadTTL","parentDirPermissions","allowQueryStringCookies","_preCollection","_preCollectionName","self","isBoolean","Math","floor","isString","Collection","_name","filesCollection","String","Error","replace","isFunction","isNumber","parseInt","isObject","_currentUploads","responseCode","fileRef","versionRef","headers","Pragma","size","Connection","type","sep","sp","apply","arguments","normalize","_debug","mkdirs","mode","error","Boolean","Number","Function","OneOf","Object","allowedCordovaOrigins","_ensureIndex","createdAt","expireAfterSeconds","background","_preCollectionCursor","find","fields","_id","isFinished","observe","changed","doc","remove","removed","stop","end","count","abort","_createStream","path","opts","fileLength","_continueUpload","file","aborted","ended","contUpld","findOne","_checkAccess","http","result","user","userId","_getUser","params","call","assign","rc","text","response","headersSent","writeHead","length","finished","_methodNames","_Abort","_Write","_Start","_Remove","on","_handleUpload","_finishUpload","_handleUploadSync","wrapAsync","bind","connectHandlers","use","httpReq","httpResp","next","_parsedUrl","includes","test","origin","setHeader","method","handleError","_error","console","warn","trace","toString","JSON","stringify","body","handleData","_getUserId","fileId","eof","binData","Buffer","from","chunkId","_prepareUpload","meta","emit","parse","jsonErr","___s","name","clone","Date","maxLength","insert","omit","returnMeta","uploadRoute","httpRespErr","setTimeout","keys","data","uri","indexOf","substring","uris","split","query","version","download","_file","_methods","selector","userFuncs","users","cursor","FSName","Optional","e","_opts","unblock","handleUploadErr","unlink","methods","transport","ctx","fileName","_getFileName","extension","extensionWithDot","_getExt","ext","_dataToSchema","isUploadAllowed","cb","chmod","_getMimeType","_updateFileTypes","colInsert","update","$set","preUpdateError","write","fileData","mime","buf","alloc","fd","openSync","br","readSync","close","slice","xmtok","server","sessions","Map","has","get","mtok","cookie","buffer","_callback","_proceedAfterUpload","proceedAfterUpload","id","ensureFile","efError","stream","createWriteStream","flags","streamErr","insertErr","load","url","pathParts","storeResult","wait","reqError","stat","stats","versions","original","pipe","send","addFile","statErr","isFile","_storagePath","files","forEach","docs","fetch","deny","rules","allow","denyClient","allowClient","vKey","_404","originalUrl","vRef","responseType","serve","readableStream","_responseType","force200","partiral","reqRange","dispositionType","start","take","dispositionName","encodeURI","encodeURIComponent","dispositionEncoding","range","array","isNaN","play","streamErrorHandler","key","respond","code","_isEnded","closeStreamCb","closeError","closeStream","destroy","err","createReadStream"],"mappings":"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","sourcesContent":["import { Mongo }           from 'meteor/mongo';\nimport { WebApp }          from 'meteor/webapp';\nimport { Meteor }          from 'meteor/meteor';\nimport { Random }          from 'meteor/random';\nimport { Cookies }         from 'meteor/ostrio:cookies';\nimport WriteStream         from './write-stream.js';\nimport { check, Match }    from 'meteor/check';\nimport FilesCollectionCore from './core.js';\nimport { fixJSONParse, fixJSONStringify, helpers } from './lib.js';\n\nimport fs       from 'fs-extra';\nimport nodeQs   from 'querystring';\nimport request  from 'request-libcurl';\nimport fileType from 'file-type';\nimport nodePath from 'path';\n\n/*\n * @const {Object} bound  - Meteor.bindEnvironment (Fiber wrapper)\n * @const {Function} NOOP - No Operation function, placeholder for required callbacks\n */\nconst bound = Meteor.bindEnvironment(callback => callback());\nconst NOOP  = () => {  };\n\n/*\n * @locus Anywhere\n * @class FilesCollection\n * @param config           {Object}   - [Both]   Configuration object with next properties:\n * @param config.debug     {Boolean}  - [Both]   Turn on/of debugging and extra logging\n * @param config.schema    {Object}   - [Both]   Collection Schema\n * @param config.public    {Boolean}  - [Both]   Store files in folder accessible for proxy servers, for limits, and more - read docs\n * @param config.strict    {Boolean}  - [Server] Strict mode for partial content, if is `true` server will return `416` response code, when `range` is not specified, otherwise server return `206`\n * @param config.protected {Function} - [Server] If `true` - files will be served only to authorized users, if `function()` - you're able to check visitor's permissions in your own way function's context has:\n *  - `request`\n *  - `response`\n *  - `user()`\n *  - `userId`\n * @param config.chunkSize      {Number}  - [Both] Upload chunk size, default: 524288 bytes (0,5 Mb)\n * @param config.permissions    {Number}  - [Server] Permissions which will be set to uploaded files (octal), like: `511` or `0o755`. Default: 0644\n * @param config.parentDirPermissions {Number}  - [Server] Permissions which will be set to parent directory of uploaded files (octal), like: `611` or `0o777`. Default: 0755\n * @param config.storagePath    {String|Function}  - [Server] Storage path on file system\n * @param config.cacheControl   {String}  - [Server] Default `Cache-Control` header\n * @param config.responseHeaders {Object|Function} - [Server] Custom response headers, if function is passed, must return Object\n * @param config.throttle       {Number}  - [Server] DEPRECATED bps throttle threshold\n * @param config.downloadRoute  {String}  - [Both]   Server Route used to retrieve files\n * @param config.collection     {Mongo.Collection} - [Both] Mongo Collection Instance\n * @param config.collectionName {String}  - [Both]   Collection name\n * @param config.namingFunction {Function}- [Both]   Function which returns `String`\n * @param config.integrityCheck {Boolean} - [Server] Check file's integrity before serving to users\n * @param config.onAfterUpload  {Function}- [Server] Called right after file is ready on FS. Use to transfer file somewhere else, or do other thing with file directly\n * @param config.onAfterRemove  {Function} - [Server] Called right after file is removed. Removed objects is passed to callback\n * @param config.continueUploadTTL {Number} - [Server] Time in seconds, during upload may be continued, default 3 hours (10800 seconds)\n * @param config.onBeforeUpload {Function}- [Both]   Function which executes on server after receiving each chunk and on client right before beginning upload. Function context is `File` - so you are able to check for extension, mime-type, size and etc.:\n *  - return `true` to continue\n *  - return `false` or `String` to abort upload\n * @param config.onInitiateUpload {Function} - [Server] Function which executes on server right before upload is begin and right after `onBeforeUpload` hook. This hook is fully asynchronous.\n * @param config.onBeforeRemove {Function} - [Server] Executes before removing file on server, so you can check permissions. Return `true` to allow action and `false` to deny.\n * @param config.allowClientCode  {Boolean}  - [Both]   Allow to run `remove` from client\n * @param config.downloadCallback {Function} - [Server] Callback triggered each time file is requested, return truthy value to continue download, or falsy to abort\n  * @param config.interceptRequest {Function} - [Server] Intercept incoming HTTP request, so you can whatever you want, no checks or preprocessing, arguments {http: {request: {...}, response: {...}}, params: {...}}\n * @param config.interceptDownload {Function} - [Server] Intercept download request, so you can serve file from third-party resource, arguments {http: {request: {...}, response: {...}}, fileRef: {...}}\n * @param config.disableUpload {Boolean} - Disable file upload, useful for server only solutions\n * @param config.disableDownload {Boolean} - Disable file download (serving), useful for file management only solutions\n * @param config.allowedOrigins  {Regex|Boolean}  - [Server]   Regex of Origins that are allowed CORS access or `false` to disable completely. Defaults to `/^http:\\/\\/localhost:12[0-9]{3}$/` for allowing Meteor-Cordova builds access\n * @param config.allowQueryStringCookies {Boolean} - Allow passing Cookies in a query string (in URL). Primary should be used only in Cordova environment. Note: this option will be used only on Cordova. Default: `false`\n * @param config._preCollection  {Mongo.Collection} - [Server] Mongo preCollection Instance\n * @param config._preCollectionName {String}  - [Server]  preCollection name\n * @summary Create new instance of FilesCollection\n */\nexport class FilesCollection extends FilesCollectionCore {\n  constructor(config) {\n    super();\n    let storagePath;\n    if (config) {\n      ({\n        storagePath,\n        debug: this.debug,\n        schema: this.schema,\n        public: this.public,\n        strict: this.strict,\n        chunkSize: this.chunkSize,\n        protected: this.protected,\n        collection: this.collection,\n        permissions: this.permissions,\n        cacheControl: this.cacheControl,\n        downloadRoute: this.downloadRoute,\n        onAfterUpload: this.onAfterUpload,\n        onAfterRemove: this.onAfterRemove,\n        disableUpload: this.disableUpload,\n        onBeforeRemove: this.onBeforeRemove,\n        integrityCheck: this.integrityCheck,\n        collectionName: this.collectionName,\n        onBeforeUpload: this.onBeforeUpload,\n        namingFunction: this.namingFunction,\n        responseHeaders: this.responseHeaders,\n        disableDownload: this.disableDownload,\n        allowedOrigins: this.allowedOrigins,\n        allowClientCode: this.allowClientCode,\n        downloadCallback: this.downloadCallback,\n        onInitiateUpload: this.onInitiateUpload,\n        interceptRequest: this.interceptRequest,\n        interceptDownload: this.interceptDownload,\n        continueUploadTTL: this.continueUploadTTL,\n        parentDirPermissions: this.parentDirPermissions,\n        allowQueryStringCookies: this.allowQueryStringCookies,\n        _preCollection: this._preCollection,\n        _preCollectionName: this._preCollectionName,\n      } = config);\n    }\n\n    const self = this;\n\n    if (!helpers.isBoolean(this.debug)) {\n      this.debug = false;\n    }\n\n    if (!helpers.isBoolean(this.public)) {\n      this.public = false;\n    }\n\n    if (!this.protected) {\n      this.protected = false;\n    }\n\n    if (!this.chunkSize) {\n      this.chunkSize = 1024 * 512;\n    }\n\n    this.chunkSize = Math.floor(this.chunkSize / 8) * 8;\n\n    if (!helpers.isString(this.collectionName) && !this.collection) {\n      this.collectionName = 'MeteorUploadFiles';\n    }\n\n    if (!this.collection) {\n      this.collection = new Mongo.Collection(this.collectionName);\n    } else {\n      this.collectionName = this.collection._name;\n    }\n\n    this.collection.filesCollection = this;\n    check(this.collectionName, String);\n\n    if (this.public && !this.downloadRoute) {\n      throw new Meteor.Error(500, `[FilesCollection.${this.collectionName}]: \"downloadRoute\" must be precisely provided on \"public\" collections! Note: \"downloadRoute\" must be equal or be inside of your web/proxy-server (relative) root.`);\n    }\n\n    if (!helpers.isString(this.downloadRoute)) {\n      this.downloadRoute = '/cdn/storage';\n    }\n\n    this.downloadRoute = this.downloadRoute.replace(/\\/$/, '');\n\n    if (!helpers.isFunction(this.namingFunction)) {\n      this.namingFunction = false;\n    }\n\n    if (!helpers.isFunction(this.onBeforeUpload)) {\n      this.onBeforeUpload = false;\n    }\n\n    if (!helpers.isBoolean(this.allowClientCode)) {\n      this.allowClientCode = true;\n    }\n\n    if (!helpers.isFunction(this.onInitiateUpload)) {\n      this.onInitiateUpload = false;\n    }\n\n    if (!helpers.isFunction(this.interceptRequest)) {\n      this.interceptRequest = false;\n    }\n\n    if (!helpers.isFunction(this.interceptDownload)) {\n      this.interceptDownload = false;\n    }\n\n    if (!helpers.isBoolean(this.strict)) {\n      this.strict = true;\n    }\n\n    if (!helpers.isBoolean(this.allowQueryStringCookies)) {\n      this.allowQueryStringCookies = false;\n    }\n\n    if (!helpers.isNumber(this.permissions)) {\n      this.permissions = parseInt('644', 8);\n    }\n\n    if (!helpers.isNumber(this.parentDirPermissions)) {\n      this.parentDirPermissions = parseInt('755', 8);\n    }\n\n    if (!helpers.isString(this.cacheControl)) {\n      this.cacheControl = 'public, max-age=31536000, s-maxage=31536000';\n    }\n\n    if (!helpers.isFunction(this.onAfterUpload)) {\n      this.onAfterUpload = false;\n    }\n\n    if (!helpers.isBoolean(this.disableUpload)) {\n      this.disableUpload = false;\n    }\n\n    if (!helpers.isFunction(this.onAfterRemove)) {\n      this.onAfterRemove = false;\n    }\n\n    if (!helpers.isFunction(this.onBeforeRemove)) {\n      this.onBeforeRemove = false;\n    }\n\n    if (!helpers.isBoolean(this.integrityCheck)) {\n      this.integrityCheck = true;\n    }\n\n    if (!helpers.isBoolean(this.disableDownload)) {\n      this.disableDownload = false;\n    }\n\n    if (!helpers.isBoolean(this.allowedOrigins) || this.allowedOrigins === true) {\n      this.allowedOrigins = /^http:\\/\\/localhost:12[0-9]{3}$/;\n    }\n\n    if (!helpers.isObject(this._currentUploads)) {\n      this._currentUploads = {};\n    }\n\n    if (!helpers.isFunction(this.downloadCallback)) {\n      this.downloadCallback = false;\n    }\n\n    if (!helpers.isNumber(this.continueUploadTTL)) {\n      this.continueUploadTTL = 10800;\n    }\n\n    if (!helpers.isFunction(this.responseHeaders)) {\n      this.responseHeaders = (responseCode, fileRef, versionRef) => {\n        const headers = {};\n        switch (responseCode) {\n        case '206':\n          headers.Pragma               = 'private';\n          headers['Transfer-Encoding'] = 'chunked';\n          break;\n        case '400':\n          headers['Cache-Control']     = 'no-cache';\n          break;\n        case '416':\n          headers['Content-Range']     = `bytes */${versionRef.size}`;\n          break;\n        default:\n          break;\n        }\n\n        headers.Connection       = 'keep-alive';\n        headers['Content-Type']  = versionRef.type || 'application/octet-stream';\n        headers['Accept-Ranges'] = 'bytes';\n        return headers;\n      };\n    }\n\n    if (this.public && !storagePath) {\n      throw new Meteor.Error(500, `[FilesCollection.${this.collectionName}] \"storagePath\" must be set on \"public\" collections! Note: \"storagePath\" must be equal on be inside of your web/proxy-server (absolute) root.`);\n    }\n\n    if (!storagePath) {\n      storagePath = function () {\n        return `assets${nodePath.sep}app${nodePath.sep}uploads${nodePath.sep}${self.collectionName}`;\n      };\n    }\n\n    if (helpers.isString(storagePath)) {\n      this.storagePath = () => storagePath;\n    } else {\n      this.storagePath = function () {\n        let sp = storagePath.apply(self, arguments);\n        if (!helpers.isString(sp)) {\n          throw new Meteor.Error(400, `[FilesCollection.${self.collectionName}] \"storagePath\" function must return a String!`);\n        }\n        sp = sp.replace(/\\/$/, '');\n        return nodePath.normalize(sp);\n      };\n    }\n\n    this._debug('[FilesCollection.storagePath] Set to:', this.storagePath({}));\n\n    fs.mkdirs(this.storagePath({}), { mode: this.parentDirPermissions }, (error) => {\n      if (error) {\n        throw new Meteor.Error(401, `[FilesCollection.${self.collectionName}] Path \"${this.storagePath({})}\" is not writable! ${error}`);\n      }\n    });\n\n    check(this.strict, Boolean);\n    check(this.permissions, Number);\n    check(this.storagePath, Function);\n    check(this.cacheControl, String);\n    check(this.onAfterRemove, Match.OneOf(false, Function));\n    check(this.onAfterUpload, Match.OneOf(false, Function));\n    check(this.disableUpload, Boolean);\n    check(this.integrityCheck, Boolean);\n    check(this.onBeforeRemove, Match.OneOf(false, Function));\n    check(this.disableDownload, Boolean);\n    check(this.downloadCallback, Match.OneOf(false, Function));\n    check(this.interceptRequest, Match.OneOf(false, Function));\n    check(this.interceptDownload, Match.OneOf(false, Function));\n    check(this.continueUploadTTL, Number);\n    check(this.responseHeaders, Match.OneOf(Object, Function));\n    check(this.allowQueryStringCookies, Boolean);\n\n    new Cookies({\n      allowQueryStringCookies: this.allowQueryStringCookies,\n      allowedCordovaOrigins: this.allowedOrigins\n    });\n\n    if (!this.disableUpload) {\n      if (!helpers.isString(this._preCollectionName) && !this._preCollection) {\n        this._preCollectionName = `__pre_${this.collectionName}`;\n      }\n\n      if (!this._preCollection) {\n        this._preCollection = new Mongo.Collection(this._preCollectionName);\n      } else {\n        this._preCollectionName = this._preCollection._name;\n      }\n      check(this._preCollectionName, String);\n\n      this._preCollection._ensureIndex({ createdAt: 1 }, { expireAfterSeconds: this.continueUploadTTL, background: true });\n      const _preCollectionCursor = this._preCollection.find({}, {\n        fields: {\n          _id: 1,\n          isFinished: 1\n        }\n      });\n\n      _preCollectionCursor.observe({\n        changed(doc) {\n          if (doc.isFinished) {\n            self._debug(`[FilesCollection] [_preCollectionCursor.observe] [changed]: ${doc._id}`);\n            self._preCollection.remove({_id: doc._id}, NOOP);\n          }\n        },\n        removed(doc) {\n          // Free memory after upload is done\n          // Or if upload is unfinished\n          self._debug(`[FilesCollection] [_preCollectionCursor.observe] [removed]: ${doc._id}`);\n          if (helpers.isObject(self._currentUploads[doc._id])) {\n            self._currentUploads[doc._id].stop();\n            self._currentUploads[doc._id].end();\n\n            // We can be unlucky to run into a race condition where another server removed this document before the change of `isFinished` is registered on this server.\n            // Therefore it's better to double-check with the main collection if the file is referenced there. Issue: https://github.com/VeliovGroup/Meteor-Files/issues/672\n            if (!doc.isFinished && self.collection.find({ _id: doc._id }).count() === 0) {\n              self._debug(`[FilesCollection] [_preCollectionCursor.observe] [removeUnfinishedUpload]: ${doc._id}`);\n              self._currentUploads[doc._id].abort();\n            }\n\n            delete self._currentUploads[doc._id];\n          }\n        }\n      });\n\n      this._createStream = (_id, path, opts) => {\n        this._currentUploads[_id] = new WriteStream(path, opts.fileLength, opts, this.permissions);\n      };\n\n      // This little function allows to continue upload\n      // even after server is restarted (*not on dev-stage*)\n      this._continueUpload = (_id) => {\n        if (this._currentUploads[_id] && this._currentUploads[_id].file) {\n          if (!this._currentUploads[_id].aborted && !this._currentUploads[_id].ended) {\n            return this._currentUploads[_id].file;\n          }\n          this._createStream(_id, this._currentUploads[_id].file.file.path, this._currentUploads[_id].file);\n          return this._currentUploads[_id].file;\n        }\n        const contUpld = this._preCollection.findOne({_id});\n        if (contUpld) {\n          this._createStream(_id, contUpld.file.path, contUpld);\n          return this._currentUploads[_id].file;\n        }\n        return false;\n      };\n    }\n\n    if (!this.schema) {\n      this.schema = FilesCollectionCore.schema;\n    }\n\n    check(this.debug, Boolean);\n    check(this.schema, Object);\n    check(this.public, Boolean);\n    check(this.protected, Match.OneOf(Boolean, Function));\n    check(this.chunkSize, Number);\n    check(this.downloadRoute, String);\n    check(this.namingFunction, Match.OneOf(false, Function));\n    check(this.onBeforeUpload, Match.OneOf(false, Function));\n    check(this.onInitiateUpload, Match.OneOf(false, Function));\n    check(this.allowClientCode, Boolean);\n\n    if (this.public && this.protected) {\n      throw new Meteor.Error(500, `[FilesCollection.${this.collectionName}]: Files can not be public and protected at the same time!`);\n    }\n\n    this._checkAccess = (http) => {\n      if (this.protected) {\n        let result;\n        const {user, userId} = this._getUser(http);\n\n        if (helpers.isFunction(this.protected)) {\n          let fileRef;\n          if (helpers.isObject(http.params) &&  http.params._id) {\n            fileRef = this.collection.findOne(http.params._id);\n          }\n\n          result = http ? this.protected.call(Object.assign(http, {user, userId}), (fileRef || null)) : this.protected.call({user, userId}, (fileRef || null));\n        } else {\n          result = !!userId;\n        }\n\n        if ((http && (result === true)) || !http) {\n          return true;\n        }\n\n        const rc = helpers.isNumber(result) ? result : 401;\n        this._debug('[FilesCollection._checkAccess] WARN: Access denied!');\n        if (http) {\n          const text = 'Access denied!';\n          if (!http.response.headersSent) {\n            http.response.writeHead(rc, {\n              'Content-Type': 'text/plain',\n              'Content-Length': text.length\n            });\n          }\n\n          if (!http.response.finished) {\n            http.response.end(text);\n          }\n        }\n\n        return false;\n      }\n      return true;\n    };\n\n    this._methodNames = {\n      _Abort: `_FilesCollectionAbort_${this.collectionName}`,\n      _Write: `_FilesCollectionWrite_${this.collectionName}`,\n      _Start: `_FilesCollectionStart_${this.collectionName}`,\n      _Remove: `_FilesCollectionRemove_${this.collectionName}`\n    };\n\n    this.on('_handleUpload', this._handleUpload);\n    this.on('_finishUpload', this._finishUpload);\n    this._handleUploadSync = Meteor.wrapAsync(this._handleUpload.bind(this));\n\n    if (this.disableUpload && this.disableDownload) {\n      return;\n    }\n    WebApp.connectHandlers.use((httpReq, httpResp, next) => {\n      if (this.allowedOrigins && httpReq._parsedUrl.path.includes(`${this.downloadRoute}/`) && !httpResp.headersSent) {\n        if (this.allowedOrigins.test(httpReq.headers.origin)) {\n          httpResp.setHeader('Access-Control-Allow-Credentials', 'true');\n          httpResp.setHeader('Access-Control-Allow-Origin', httpReq.headers.origin);\n        }\n\n        if (httpReq.method === 'OPTIONS') {\n          httpResp.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\n          httpResp.setHeader('Access-Control-Allow-Headers', 'Range, Content-Type, x-mtok, x-start, x-chunkid, x-fileid, x-eof');\n          httpResp.setHeader('Access-Control-Expose-Headers', 'Accept-Ranges, Content-Encoding, Content-Length, Content-Range');\n          httpResp.setHeader('Allow', 'GET, POST, OPTIONS');\n          httpResp.writeHead(200);\n          httpResp.end();\n          return;\n        }\n      }\n\n      if (!this.disableUpload && httpReq._parsedUrl.path.includes(`${this.downloadRoute}/${this.collectionName}/__upload`)) {\n        if (httpReq.method !== 'POST') {\n          next();\n          return;\n        }\n\n        const handleError = (_error) => {\n          let error = _error;\n          console.warn('[FilesCollection] [Upload] [HTTP] Exception:', error);\n          console.trace();\n\n          if (!httpResp.headersSent) {\n            httpResp.writeHead(500);\n          }\n\n          if (!httpResp.finished) {\n            if (helpers.isObject(error) && helpers.isFunction(error.toString)) {\n              error = error.toString();\n            }\n\n            if (!helpers.isString(error)) {\n              error = 'Unexpected error!';\n            }\n\n            httpResp.end(JSON.stringify({ error }));\n          }\n        };\n\n        let body = '';\n        const handleData = () => {\n          try {\n            let opts;\n            let result;\n            let user;\n\n            if (httpReq.headers['x-mtok'] && this._getUserId(httpReq.headers['x-mtok'])) {\n              user = {\n                userId: this._getUserId(httpReq.headers['x-mtok'])\n              };\n            } else {\n              user = this._getUser({request: httpReq, response: httpResp});\n            }\n\n            if (httpReq.headers['x-start'] !== '1') {\n              opts = {\n                fileId: httpReq.headers['x-fileid']\n              };\n\n              if (httpReq.headers['x-eof'] === '1') {\n                opts.eof = true;\n              } else {\n                opts.binData = Buffer.from(body, 'base64');\n                opts.chunkId = parseInt(httpReq.headers['x-chunkid']);\n              }\n\n              const _continueUpload = this._continueUpload(opts.fileId);\n              if (!_continueUpload) {\n                throw new Meteor.Error(408, 'Can\\'t continue upload, session expired. Start upload again.');\n              }\n\n              ({result, opts}  = this._prepareUpload(Object.assign(opts, _continueUpload), user.userId, 'HTTP'));\n\n              if (opts.eof) {\n                this._handleUpload(result, opts, (_error) => {\n                  let error = _error;\n                  if (error) {\n                    if (!httpResp.headersSent) {\n                      httpResp.writeHead(500);\n                    }\n\n                    if (!httpResp.finished) {\n                      if (helpers.isObject(error) && helpers.isFunction(error.toString)) {\n                        error = error.toString();\n                      }\n\n                      if (!helpers.isString(error)) {\n                        error = 'Unexpected error!';\n                      }\n\n                      httpResp.end(JSON.stringify({ error }));\n                    }\n                  }\n\n                  if (!httpResp.headersSent) {\n                    httpResp.writeHead(200);\n                  }\n\n                  if (helpers.isObject(result.file) && result.file.meta) {\n                    result.file.meta = fixJSONStringify(result.file.meta);\n                  }\n\n                  if (!httpResp.finished) {\n                    httpResp.end(JSON.stringify(result));\n                  }\n                });\n                return;\n              }\n\n              this.emit('_handleUpload', result, opts, NOOP);\n\n              if (!httpResp.headersSent) {\n                httpResp.writeHead(204);\n              }\n              if (!httpResp.finished) {\n                httpResp.end();\n              }\n            } else {\n              try {\n                opts = JSON.parse(body);\n              } catch (jsonErr) {\n                console.error('Can\\'t parse incoming JSON from Client on [.insert() | upload], something went wrong!', jsonErr);\n                opts = {file: {}};\n              }\n\n              if (!helpers.isObject(opts.file)) {\n                opts.file = {};\n              }\n\n              opts.___s = true;\n              this._debug(`[FilesCollection] [File Start HTTP] ${opts.file.name || '[no-name]'} - ${opts.fileId}`);\n              if (helpers.isObject(opts.file) && opts.file.meta) {\n                opts.file.meta = fixJSONParse(opts.file.meta);\n              }\n\n              ({result} = this._prepareUpload(helpers.clone(opts), user.userId, 'HTTP Start Method'));\n\n              if (this.collection.findOne(result._id)) {\n                throw new Meteor.Error(400, 'Can\\'t start upload, data substitution detected!');\n              }\n\n              opts._id       = opts.fileId;\n              opts.createdAt = new Date();\n              opts.maxLength = opts.fileLength;\n              this._preCollection.insert(helpers.omit(opts, '___s'));\n              this._createStream(result._id, result.path, helpers.omit(opts, '___s'));\n\n              if (opts.returnMeta) {\n                if (!httpResp.headersSent) {\n                  httpResp.writeHead(200);\n                }\n\n                if (!httpResp.finished) {\n                  httpResp.end(JSON.stringify({\n                    uploadRoute: `${this.downloadRoute}/${this.collectionName}/__upload`,\n                    file: result\n                  }));\n                }\n              } else {\n                if (!httpResp.headersSent) {\n                  httpResp.writeHead(204);\n                }\n\n                if (!httpResp.finished) {\n                  httpResp.end();\n                }\n              }\n            }\n          } catch (httpRespErr) {\n            handleError(httpRespErr);\n          }\n        };\n\n        httpReq.setTimeout(20000, handleError);\n        if (typeof httpReq.body === 'object' && Object.keys(httpReq.body).length !== 0) {\n          body = JSON.stringify(httpReq.body);\n          handleData();\n        } else {\n          httpReq.on('data', (data) => bound(() => {\n            body += data;\n          }));\n\n          httpReq.on('end', () => bound(() => {\n            handleData();\n          }));\n        }\n        return;\n      }\n\n      if (!this.disableDownload) {\n        let uri;\n\n        if (!this.public) {\n          if (httpReq._parsedUrl.path.includes(`${this.downloadRoute}/${this.collectionName}`)) {\n            uri = httpReq._parsedUrl.path.replace(`${this.downloadRoute}/${this.collectionName}`, '');\n            if (uri.indexOf('/') === 0) {\n              uri = uri.substring(1);\n            }\n\n            const uris = uri.split('/');\n            if (uris.length === 3) {\n              const params = {\n                _id: uris[0],\n                query: httpReq._parsedUrl.query ? nodeQs.parse(httpReq._parsedUrl.query) : {},\n                name: uris[2].split('?')[0],\n                version: uris[1]\n              };\n\n              const http = {request: httpReq, response: httpResp, params};\n              if (this.interceptRequest && helpers.isFunction(this.interceptRequest) && this.interceptRequest(http) === true) {\n                return;\n              }\n\n              if (this._checkAccess(http)) {\n                this.download(http, uris[1], this.collection.findOne(uris[0]));\n              }\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        } else {\n          if (httpReq._parsedUrl.path.includes(`${this.downloadRoute}`)) {\n            uri = httpReq._parsedUrl.path.replace(`${this.downloadRoute}`, '');\n            if (uri.indexOf('/') === 0) {\n              uri = uri.substring(1);\n            }\n\n            const uris = uri.split('/');\n            let _file = uris[uris.length - 1];\n            if (_file) {\n              let version;\n              if (_file.includes('-')) {\n                version = _file.split('-')[0];\n                _file   = _file.split('-')[1].split('?')[0];\n              } else {\n                version = 'original';\n                _file   = _file.split('?')[0];\n              }\n\n              const params = {\n                query: httpReq._parsedUrl.query ? nodeQs.parse(httpReq._parsedUrl.query) : {},\n                file: _file,\n                _id: _file.split('.')[0],\n                version,\n                name: _file\n              };\n              const http = {request: httpReq, response: httpResp, params};\n              if (this.interceptRequest && helpers.isFunction(this.interceptRequest) && this.interceptRequest(http) === true) {\n                return;\n              }\n              this.download(http, version, this.collection.findOne(params._id));\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        }\n        return;\n      }\n      next();\n    });\n\n    if (!this.disableUpload) {\n      const _methods = {};\n\n      // Method used to remove file\n      // from Client side\n      _methods[this._methodNames._Remove] = function (selector) {\n        check(selector, Match.OneOf(String, Object));\n        self._debug(`[FilesCollection] [Unlink Method] [.remove(${selector})]`);\n\n        if (self.allowClientCode) {\n          if (self.onBeforeRemove && helpers.isFunction(self.onBeforeRemove)) {\n            const userId = this.userId;\n            const userFuncs = {\n              userId: this.userId,\n              user() {\n                if (Meteor.users) {\n                  return Meteor.users.findOne(userId);\n                }\n                return null;\n              }\n            };\n\n            if (!self.onBeforeRemove.call(userFuncs, (self.find(selector) || null))) {\n              throw new Meteor.Error(403, '[FilesCollection] [remove] Not permitted!');\n            }\n          }\n\n          const cursor = self.find(selector);\n          if (cursor.count() > 0) {\n            self.remove(selector);\n            return true;\n          }\n          throw new Meteor.Error(404, 'Cursor is empty, no files is removed');\n        } else {\n          throw new Meteor.Error(401, '[FilesCollection] [remove] Run code from client is not allowed!');\n        }\n      };\n\n\n      // Method used to receive \"first byte\" of upload\n      // and all file's meta-data, so\n      // it won't be transferred with every chunk\n      // Basically it prepares everything\n      // So user can pause/disconnect and\n      // continue upload later, during `continueUploadTTL`\n      _methods[this._methodNames._Start] = function (opts, returnMeta) {\n        check(opts, {\n          file: Object,\n          fileId: String,\n          FSName: Match.Optional(String),\n          chunkSize: Number,\n          fileLength: Number\n        });\n\n        check(returnMeta, Match.Optional(Boolean));\n\n        self._debug(`[FilesCollection] [File Start Method] ${opts.file.name} - ${opts.fileId}`);\n        opts.___s = true;\n        const { result } = self._prepareUpload(helpers.clone(opts), this.userId, 'DDP Start Method');\n\n        if (self.collection.findOne(result._id)) {\n          throw new Meteor.Error(400, 'Can\\'t start upload, data substitution detected!');\n        }\n\n        opts._id       = opts.fileId;\n        opts.createdAt = new Date();\n        opts.maxLength = opts.fileLength;\n        try {\n          self._preCollection.insert(helpers.omit(opts, '___s'));\n          self._createStream(result._id, result.path, helpers.omit(opts, '___s'));\n        } catch (e) {\n          self._debug(`[FilesCollection] [File Start Method] [EXCEPTION:] ${opts.file.name} - ${opts.fileId}`, e);\n          throw new Meteor.Error(500, 'Can\\'t start');\n        }\n\n        if (returnMeta) {\n          return {\n            uploadRoute: `${self.downloadRoute}/${self.collectionName}/__upload`,\n            file: result\n          };\n        }\n        return true;\n      };\n\n\n      // Method used to write file chunks\n      // it receives very limited amount of meta-data\n      // This method also responsible for EOF\n      _methods[this._methodNames._Write] = function (_opts) {\n        let opts = _opts;\n        let result;\n        check(opts, {\n          eof: Match.Optional(Boolean),\n          fileId: String,\n          binData: Match.Optional(String),\n          chunkId: Match.Optional(Number)\n        });\n\n        if (opts.binData) {\n          opts.binData = Buffer.from(opts.binData, 'base64');\n        }\n\n        const _continueUpload = self._continueUpload(opts.fileId);\n        if (!_continueUpload) {\n          throw new Meteor.Error(408, 'Can\\'t continue upload, session expired. Start upload again.');\n        }\n\n        this.unblock();\n        ({result, opts} = self._prepareUpload(Object.assign(opts, _continueUpload), this.userId, 'DDP'));\n\n        if (opts.eof) {\n          try {\n            return self._handleUploadSync(result, opts);\n          } catch (handleUploadErr) {\n            self._debug('[FilesCollection] [Write Method] [DDP] Exception:', handleUploadErr);\n            throw handleUploadErr;\n          }\n        } else {\n          self.emit('_handleUpload', result, opts, NOOP);\n        }\n        return true;\n      };\n\n      // Method used to Abort upload\n      // - Feeing memory by .end()ing writableStreams\n      // - Removing temporary record from @_preCollection\n      // - Removing record from @collection\n      // - .unlink()ing chunks from FS\n      _methods[this._methodNames._Abort] = function (_id) {\n        check(_id, String);\n\n        const _continueUpload = self._continueUpload(_id);\n        self._debug(`[FilesCollection] [Abort Method]: ${_id} - ${(helpers.isObject(_continueUpload.file) ? _continueUpload.file.path : '')}`);\n\n        if (self._currentUploads && self._currentUploads[_id]) {\n          self._currentUploads[_id].stop();\n          self._currentUploads[_id].abort();\n        }\n\n        if (_continueUpload) {\n          self._preCollection.remove({_id});\n          self.remove({_id});\n          if (helpers.isObject(_continueUpload.file) && _continueUpload.file.path) {\n            self.unlink({_id, path: _continueUpload.file.path});\n          }\n        }\n        return true;\n      };\n\n      Meteor.methods(_methods);\n    }\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name _prepareUpload\n   * @summary Internal method. Used to optimize received data and check upload permission\n   * @returns {Object}\n   */\n  _prepareUpload(opts = {}, userId, transport) {\n    let ctx;\n    if (!helpers.isBoolean(opts.eof)) {\n      opts.eof = false;\n    }\n\n    if (!opts.binData) {\n      opts.binData = 'EOF';\n    }\n\n    if (!helpers.isNumber(opts.chunkId)) {\n      opts.chunkId = -1;\n    }\n\n    if (!helpers.isString(opts.FSName)) {\n      opts.FSName = opts.fileId;\n    }\n\n    this._debug(`[FilesCollection] [Upload] [${transport}] Got #${opts.chunkId}/${opts.fileLength} chunks, dst: ${opts.file.name || opts.file.fileName}`);\n\n    const fileName = this._getFileName(opts.file);\n    const {extension, extensionWithDot} = this._getExt(fileName);\n\n    if (!helpers.isObject(opts.file.meta)) {\n      opts.file.meta = {};\n    }\n\n    let result       = opts.file;\n    result.name      = fileName;\n    result.meta      = opts.file.meta;\n    result.extension = extension;\n    result.ext       = extension;\n    result._id       = opts.fileId;\n    result.userId    = userId || null;\n    opts.FSName      = opts.FSName.replace(/([^a-z0-9\\-\\_]+)/gi, '-');\n    result.path      = `${this.storagePath(result)}${nodePath.sep}${opts.FSName}${extensionWithDot}`;\n    result           = Object.assign(result, this._dataToSchema(result));\n\n    if (this.onBeforeUpload && helpers.isFunction(this.onBeforeUpload)) {\n      ctx = Object.assign({\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId,\n        userId: result.userId,\n        user() {\n          if (Meteor.users && result.userId) {\n            return Meteor.users.findOne(result.userId);\n          }\n          return null;\n        },\n        eof: opts.eof\n      });\n      const isUploadAllowed = this.onBeforeUpload.call(ctx, result);\n\n      if (isUploadAllowed !== true) {\n        throw new Meteor.Error(403, helpers.isString(isUploadAllowed) ? isUploadAllowed : '@onBeforeUpload() returned false');\n      } else {\n        if ((opts.___s === true) && this.onInitiateUpload && helpers.isFunction(this.onInitiateUpload)) {\n          this.onInitiateUpload.call(ctx, result);\n        }\n      }\n    } else if ((opts.___s === true) && this.onInitiateUpload && helpers.isFunction(this.onInitiateUpload)) {\n      ctx = Object.assign({\n        file: opts.file\n      }, {\n        chunkId: opts.chunkId,\n        userId: result.userId,\n        user() {\n          if (Meteor.users && result.userId) {\n            return Meteor.users.findOne(result.userId);\n          }\n          return null;\n        },\n        eof: opts.eof\n      });\n      this.onInitiateUpload.call(ctx, result);\n    }\n\n    return {result, opts};\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name _finishUpload\n   * @summary Internal method. Finish upload, close Writable stream, add record to MongoDB and flush used memory\n   * @returns {undefined}\n   */\n  _finishUpload(result, opts, cb) {\n    this._debug(`[FilesCollection] [Upload] [finish(ing)Upload] -> ${result.path}`);\n    fs.chmod(result.path, this.permissions, NOOP);\n    result.type   = this._getMimeType(opts.file);\n    result.public = this.public;\n    this._updateFileTypes(result);\n\n    this.collection.insert(helpers.clone(result), (colInsert, _id) => {\n      if (colInsert) {\n        cb && cb(colInsert);\n        this._debug('[FilesCollection] [Upload] [_finishUpload] [insert] Error:', colInsert);\n      } else {\n        this._preCollection.update({_id: opts.fileId}, {$set: {isFinished: true}}, (preUpdateError) => {\n          if (preUpdateError) {\n            cb && cb(preUpdateError);\n            this._debug('[FilesCollection] [Upload] [_finishUpload] [update] Error:', preUpdateError);\n          } else {\n            result._id = _id;\n            this._debug(`[FilesCollection] [Upload] [finish(ed)Upload] -> ${result.path}`);\n            this.onAfterUpload && this.onAfterUpload.call(this, result);\n            this.emit('afterUpload', result);\n            cb && cb(null, result);\n          }\n        });\n      }\n    });\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name _handleUpload\n   * @summary Internal method to handle upload process, pipe incoming data to Writable stream\n   * @returns {undefined}\n   */\n  _handleUpload(result, opts, cb) {\n    try {\n      if (opts.eof) {\n        this._currentUploads[result._id].end(() => {\n          this.emit('_finishUpload', result, opts, cb);\n        });\n      } else {\n        this._currentUploads[result._id].write(opts.chunkId, opts.binData, cb);\n      }\n    } catch (e) {\n      this._debug('[_handleUpload] [EXCEPTION:]', e);\n      cb && cb(e);\n    }\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getMimeType\n   * @param {Object} fileData - File Object\n   * @summary Returns file's mime-type\n   * @returns {String}\n   */\n  _getMimeType(fileData) {\n    let mime;\n    check(fileData, Object);\n    if (helpers.isObject(fileData) && fileData.type) {\n      mime = fileData.type;\n    }\n\n    if (fileData.path && (!mime || !helpers.isString(mime))) {\n      try {\n        let buf  = Buffer.alloc(262);\n        const fd = fs.openSync(fileData.path, 'r');\n        const br = fs.readSync(fd, buf, 0, 262, 0);\n        fs.close(fd, NOOP);\n        if (br < 262) {\n          buf = buf.slice(0, br);\n        }\n        ({mime} = fileType(buf));\n      } catch (e) {\n        // We're good\n      }\n    }\n\n    if (!mime || !helpers.isString(mime)) {\n      mime = 'application/octet-stream';\n    }\n    return mime;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getUserId\n   * @summary Returns `userId` matching the xmtok token derived from Meteor.server.sessions\n   * @returns {String}\n   */\n  _getUserId(xmtok) {\n    if (!xmtok) return null;\n\n    // throw an error upon an unexpected type of Meteor.server.sessions in order to identify breaking changes\n    if (!Meteor.server.sessions instanceof Map || !helpers.isObject(Meteor.server.sessions)) {\n      throw new Error('Received incompatible type of Meteor.server.sessions');\n    }\n\n    if (Meteor.server.sessions instanceof Map && Meteor.server.sessions.has(xmtok) && helpers.isObject(Meteor.server.sessions.get(xmtok))) {\n      // to be used with >= Meteor 1.8.1 where Meteor.server.sessions is a Map\n      return Meteor.server.sessions.get(xmtok).userId;\n    } else if (helpers.isObject(Meteor.server.sessions) && xmtok in Meteor.server.sessions && helpers.isObject(Meteor.server.sessions[xmtok])) {\n      // to be used with < Meteor 1.8.1 where Meteor.server.sessions is an Object\n      return Meteor.server.sessions[xmtok].userId;\n    }\n\n    return null;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name _getUser\n   * @summary Returns object with `userId` and `user()` method which return user's object\n   * @returns {Object}\n   */\n  _getUser(http) {\n    const result = {\n      user() { return null; },\n      userId: null\n    };\n\n    if (http) {\n      let mtok = null;\n      if (http.request.headers['x-mtok']) {\n        mtok = http.request.headers['x-mtok'];\n      } else {\n        const cookie = http.request.Cookies;\n        if (cookie.has('x_mtok')) {\n          mtok = cookie.get('x_mtok');\n        }\n      }\n\n      if (mtok) {\n        const userId = this._getUserId(mtok);\n\n        if (userId) {\n          result.user   = () => Meteor.users.findOne(userId);\n          result.userId = userId;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name write\n   * @param {Buffer} buffer - Binary File's Buffer\n   * @param {Object} opts - Object with file-data\n   * @param {String} opts.name - File name, alias: `fileName`\n   * @param {String} opts.type - File mime-type\n   * @param {Object} opts.meta - File additional meta-data\n   * @param {String} opts.userId - UserId, default *null*\n   * @param {String} opts.fileId - _id, default *null*\n   * @param {Function} callback - function(error, fileObj){...}\n   * @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n   * @summary Write buffer to FS and add to FilesCollection Collection\n   * @returns {FilesCollection} Instance\n   */\n  write(buffer, _opts = {}, _callback, _proceedAfterUpload) {\n    this._debug('[FilesCollection] [write()]');\n    let opts = _opts;\n    let callback = _callback;\n    let proceedAfterUpload = _proceedAfterUpload;\n\n    if (helpers.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts     = {};\n    } else if (helpers.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (helpers.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n\n    const fileId   = opts.fileId || Random.id();\n    const FSName   = this.namingFunction ? this.namingFunction(opts) : fileId;\n    const fileName = (opts.name || opts.fileName) ? (opts.name || opts.fileName) : FSName;\n\n    const {extension, extensionWithDot} = this._getExt(fileName);\n\n    opts.path = `${this.storagePath(opts)}${nodePath.sep}${FSName}${extensionWithDot}`;\n    opts.type = this._getMimeType(opts);\n    if (!helpers.isObject(opts.meta)) {\n      opts.meta = {};\n    }\n\n    if (!helpers.isNumber(opts.size)) {\n      opts.size = buffer.length;\n    }\n\n    const result = this._dataToSchema({\n      name: fileName,\n      path: opts.path,\n      meta: opts.meta,\n      type: opts.type,\n      size: opts.size,\n      userId: opts.userId,\n      extension\n    });\n\n    result._id = fileId;\n\n    fs.ensureFile(opts.path, (efError) => {\n      bound(() => {\n        if (efError) {\n          callback && callback(efError);\n          this._debug(`[FilesCollection] [write] [ensureFile] [Error:] ${fileName} -> ${opts.path}`, efError);\n        } else {\n          const stream = fs.createWriteStream(opts.path, {flags: 'w', mode: this.permissions});\n          stream.end(buffer, (streamErr) => {\n            bound(() => {\n              if (streamErr) {\n                callback && callback(streamErr);\n              } else {\n                this.collection.insert(result, (insertErr, _id) => {\n                  if (insertErr) {\n                    callback && callback(insertErr);\n                    this._debug(`[FilesCollection] [write] [insert] Error: ${fileName} -> ${this.collectionName}`, insertErr);\n                  } else {\n                    const fileRef = this.collection.findOne(_id);\n                    callback && callback(null, fileRef);\n                    if (proceedAfterUpload === true) {\n                      this.onAfterUpload && this.onAfterUpload.call(this, fileRef);\n                      this.emit('afterUpload', fileRef);\n                    }\n                    this._debug(`[FilesCollection] [write]: ${fileName} -> ${this.collectionName}`);\n                  }\n                });\n              }\n            });\n          });\n        }\n      });\n    });\n    return this;\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name load\n   * @param {String} url - URL to file\n   * @param {Object} opts - Object with file-data\n   * @param {Object} opts.headers - HTTP headers to use when requesting the file\n   * @param {String} opts.name - File name, alias: `fileName`\n   * @param {String} opts.type - File mime-type\n   * @param {Object} opts.meta - File additional meta-data\n   * @param {String} opts.userId - UserId, default *null*\n   * @param {String} opts.fileId - _id, default *null*\n   * @param {Function} callback - function(error, fileObj){...}\n   * @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n   * @summary Download file, write stream to FS and add to FilesCollection Collection\n   * @returns {FilesCollection} Instance\n   */\n  load(url, _opts = {}, _callback, _proceedAfterUpload) {\n    this._debug(`[FilesCollection] [load(${url}, ${JSON.stringify(_opts)}, callback)]`);\n    let opts = _opts;\n    let callback = _callback;\n    let proceedAfterUpload = _proceedAfterUpload;\n\n    if (helpers.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts     = {};\n    } else if (helpers.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (helpers.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n\n    check(url, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n\n    if (!helpers.isObject(opts)) {\n      opts = {};\n    }\n\n    const fileId    = opts.fileId || Random.id();\n    const FSName    = this.namingFunction ? this.namingFunction(opts) : fileId;\n    const pathParts = url.split('/');\n    const fileName  = (opts.name || opts.fileName) ? (opts.name || opts.fileName) : pathParts[pathParts.length - 1] || FSName;\n\n    const {extension, extensionWithDot} = this._getExt(fileName);\n    opts.path  = `${this.storagePath(opts)}${nodePath.sep}${FSName}${extensionWithDot}`;\n\n    const storeResult = (result, cb) => {\n      result._id = fileId;\n\n      this.collection.insert(result, (error, _id) => {\n        if (error) {\n          cb && cb(error);\n          this._debug(`[FilesCollection] [load] [insert] Error: ${fileName} -> ${this.collectionName}`, error);\n        } else {\n          const fileRef = this.collection.findOne(_id);\n          cb && cb(null, fileRef);\n          if (proceedAfterUpload === true) {\n            this.onAfterUpload && this.onAfterUpload.call(this, fileRef);\n            this.emit('afterUpload', fileRef);\n          }\n          this._debug(`[FilesCollection] [load] [insert] ${fileName} -> ${this.collectionName}`);\n        }\n      });\n    };\n\n    fs.ensureFile(opts.path, (efError) => {\n      bound(() => {\n        if (efError) {\n          callback && callback(efError);\n          this._debug(`[FilesCollection] [load] [ensureFile] [Error:] ${fileName} -> ${opts.path}`, efError);\n        } else {\n          request({\n            url,\n            headers: opts.headers || {},\n            wait: true\n          }, (reqError, response) => bound(() => {\n            if (reqError) {\n              callback && callback(reqError);\n              this._debug(`[FilesCollection] [load] [request.get(${url})] Error:`, reqError);\n            } else {\n              this._debug(`[FilesCollection] [load] Received: ${url}`);\n              const result = this._dataToSchema({\n                name: fileName,\n                path: opts.path,\n                meta: opts.meta,\n                type: opts.type || response.headers['content-type'] || this._getMimeType({path: opts.path}),\n                size: opts.size || parseInt(response.headers['content-length'] || 0),\n                userId: opts.userId,\n                extension\n              });\n\n              if (!result.size) {\n                fs.stat(opts.path, (error, stats) => bound(() => {\n                  if (error) {\n                    callback && callback(error);\n                  } else {\n                    result.versions.original.size = (result.size = stats.size);\n                    storeResult(result, callback);\n                  }\n                }));\n              } else {\n                storeResult(result, callback);\n              }\n            }\n          })).pipe(fs.createWriteStream(opts.path, {flags: 'w', mode: this.permissions})).send();\n        }\n      });\n    });\n\n\n    return this;\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name addFile\n   * @param {String} path          - Path to file\n   * @param {String} opts          - [Optional] Object with file-data\n   * @param {String} opts.type     - [Optional] File mime-type\n   * @param {Object} opts.meta     - [Optional] File additional meta-data\n   * @param {String} opts.fileId   - _id, default *null*\n   * @param {Object} opts.fileName - [Optional] File name, if not specified file name and extension will be taken from path\n   * @param {String} opts.userId   - [Optional] UserId, default *null*\n   * @param {Function} callback    - [Optional] function(error, fileObj){...}\n   * @param {Boolean} proceedAfterUpload - Proceed onAfterUpload hook\n   * @summary Add file from FS to FilesCollection\n   * @returns {FilesCollection} Instance\n   */\n  addFile(path, _opts = {}, _callback, _proceedAfterUpload) {\n    this._debug(`[FilesCollection] [addFile(${path})]`);\n    let opts = _opts;\n    let callback = _callback;\n    let proceedAfterUpload = _proceedAfterUpload;\n\n    if (helpers.isFunction(opts)) {\n      proceedAfterUpload = callback;\n      callback = opts;\n      opts     = {};\n    } else if (helpers.isBoolean(callback)) {\n      proceedAfterUpload = callback;\n    } else if (helpers.isBoolean(opts)) {\n      proceedAfterUpload = opts;\n    }\n\n    if (this.public) {\n      throw new Meteor.Error(403, 'Can not run [addFile] on public collection! Just Move file to root of your server, then add record to Collection');\n    }\n\n    check(path, String);\n    check(opts, Match.Optional(Object));\n    check(callback, Match.Optional(Function));\n    check(proceedAfterUpload, Match.Optional(Boolean));\n\n    fs.stat(path, (statErr, stats) => bound(() => {\n      if (statErr) {\n        callback && callback(statErr);\n      } else if (stats.isFile()) {\n        if (!helpers.isObject(opts)) {\n          opts = {};\n        }\n        opts.path  = path;\n\n        if (!opts.fileName) {\n          const pathParts = path.split(nodePath.sep);\n          opts.fileName   = path.split(nodePath.sep)[pathParts.length - 1];\n        }\n\n        const {extension} = this._getExt(opts.fileName);\n\n        if (!helpers.isString(opts.type)) {\n          opts.type = this._getMimeType(opts);\n        }\n\n        if (!helpers.isObject(opts.meta)) {\n          opts.meta = {};\n        }\n\n        if (!helpers.isNumber(opts.size)) {\n          opts.size = stats.size;\n        }\n\n        const result = this._dataToSchema({\n          name: opts.fileName,\n          path,\n          meta: opts.meta,\n          type: opts.type,\n          size: opts.size,\n          userId: opts.userId,\n          extension,\n          _storagePath: path.replace(`${nodePath.sep}${opts.fileName}`, ''),\n          fileId: opts.fileId || null\n        });\n\n\n        this.collection.insert(result, (insertErr, _id) => {\n          if (insertErr) {\n            callback && callback(insertErr);\n            this._debug(`[FilesCollection] [addFile] [insert] Error: ${result.name} -> ${this.collectionName}`, insertErr);\n          } else {\n            const fileRef = this.collection.findOne(_id);\n            callback && callback(null, fileRef);\n            if (proceedAfterUpload === true) {\n              this.onAfterUpload && this.onAfterUpload.call(this, fileRef);\n              this.emit('afterUpload', fileRef);\n            }\n            this._debug(`[FilesCollection] [addFile]: ${result.name} -> ${this.collectionName}`);\n          }\n        });\n      } else {\n        callback && callback(new Meteor.Error(400, `[FilesCollection] [addFile(${path})]: File does not exist`));\n      }\n    }));\n    return this;\n  }\n\n  /*\n   * @locus Anywhere\n   * @memberOf FilesCollection\n   * @name remove\n   * @param {String|Object} selector - Mongo-Style selector (http://docs.meteor.com/api/collections.html#selectors)\n   * @param {Function} callback - Callback with one `error` argument\n   * @summary Remove documents from the collection\n   * @returns {FilesCollection} Instance\n   */\n  remove(selector, callback) {\n    this._debug(`[FilesCollection] [remove(${JSON.stringify(selector)})]`);\n    if (selector === void 0) {\n      return 0;\n    }\n    check(callback, Match.Optional(Function));\n\n    const files = this.collection.find(selector);\n    if (files.count() > 0) {\n      files.forEach((file) => {\n        this.unlink(file);\n      });\n    } else {\n      callback && callback(new Meteor.Error(404, 'Cursor is empty, no files is removed'));\n      return this;\n    }\n\n    if (this.onAfterRemove) {\n      const docs = files.fetch();\n      const self = this;\n      this.collection.remove(selector, function () {\n        callback && callback.apply(this, arguments);\n        self.onAfterRemove(docs);\n      });\n    } else {\n      this.collection.remove(selector, (callback || NOOP));\n    }\n    return this;\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name deny\n   * @param {Object} rules\n   * @see  https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n   * @summary link Mongo.Collection deny methods\n   * @returns {Mongo.Collection} Instance\n   */\n  deny(rules) {\n    this.collection.deny(rules);\n    return this.collection;\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name allow\n   * @param {Object} rules\n   * @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n   * @summary link Mongo.Collection allow methods\n   * @returns {Mongo.Collection} Instance\n   */\n  allow(rules) {\n    this.collection.allow(rules);\n    return this.collection;\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name denyClient\n   * @see https://docs.meteor.com/api/collections.html#Mongo-Collection-deny\n   * @summary Shorthands for Mongo.Collection deny method\n   * @returns {Mongo.Collection} Instance\n   */\n  denyClient() {\n    this.collection.deny({\n      insert() { return true; },\n      update() { return true; },\n      remove() { return true; }\n    });\n    return this.collection;\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name allowClient\n   * @see https://docs.meteor.com/api/collections.html#Mongo-Collection-allow\n   * @summary Shorthands for Mongo.Collection allow method\n   * @returns {Mongo.Collection} Instance\n   */\n  allowClient() {\n    this.collection.allow({\n      insert() { return true; },\n      update() { return true; },\n      remove() { return true; }\n    });\n    return this.collection;\n  }\n\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name unlink\n   * @param {Object} fileRef - fileObj\n   * @param {String} version - [Optional] file's version\n   * @param {Function} callback - [Optional] callback function\n   * @summary Unlink files and it's versions from FS\n   * @returns {FilesCollection} Instance\n   */\n  unlink(fileRef, version, callback) {\n    this._debug(`[FilesCollection] [unlink(${fileRef._id}, ${version})]`);\n    if (version) {\n      if (helpers.isObject(fileRef.versions) && helpers.isObject(fileRef.versions[version]) && fileRef.versions[version].path) {\n        fs.unlink(fileRef.versions[version].path, (callback || NOOP));\n      }\n    } else {\n      if (helpers.isObject(fileRef.versions)) {\n        for(let vKey in fileRef.versions) {\n          if (fileRef.versions[vKey] && fileRef.versions[vKey].path) {\n            fs.unlink(fileRef.versions[vKey].path, (callback || NOOP));\n          }\n        }\n      } else {\n        fs.unlink(fileRef.path, (callback || NOOP));\n      }\n    }\n    return this;\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name _404\n   * @summary Internal method, used to return 404 error\n   * @returns {undefined}\n   */\n  _404(http) {\n    this._debug(`[FilesCollection] [download(${http.request.originalUrl})] [_404] File not found`);\n    const text = 'File Not Found :(';\n\n    if (!http.response.headersSent) {\n      http.response.writeHead(404, {\n        'Content-Type': 'text/plain',\n        'Content-Length': text.length\n      }\n      );\n    }\n    if (!http.response.finished) {\n      http.response.end(text);\n    }\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name download\n   * @param {Object} http    - Server HTTP object\n   * @param {String} version - Requested file version\n   * @param {Object} fileRef - Requested file Object\n   * @summary Initiates the HTTP response\n   * @returns {undefined}\n   */\n  download(http, version = 'original', fileRef) {\n    let vRef;\n    this._debug(`[FilesCollection] [download(${http.request.originalUrl}, ${version})]`);\n\n    if (fileRef) {\n      if (helpers.has(fileRef, 'versions') && helpers.has(fileRef.versions, version)) {\n        vRef = fileRef.versions[version];\n        vRef._id = fileRef._id;\n      } else {\n        vRef = fileRef;\n      }\n    } else {\n      vRef = false;\n    }\n\n    if (!vRef || !helpers.isObject(vRef)) {\n      return this._404(http);\n    } else if (fileRef) {\n      if (this.downloadCallback) {\n        if (!this.downloadCallback.call(Object.assign(http, this._getUser(http)), fileRef)) {\n          return this._404(http);\n        }\n      }\n\n      if (this.interceptDownload && helpers.isFunction(this.interceptDownload) && this.interceptDownload(http, fileRef, version) === true) {\n        return void 0;\n      }\n\n      fs.stat(vRef.path, (statErr, stats) => bound(() => {\n        let responseType;\n        if (statErr || !stats.isFile()) {\n          return this._404(http);\n        }\n\n        if ((stats.size !== vRef.size) && !this.integrityCheck) {\n          vRef.size = stats.size;\n        }\n\n        if ((stats.size !== vRef.size) && this.integrityCheck) {\n          responseType = '400';\n        }\n\n        return this.serve(http, fileRef, vRef, version, null, (responseType || '200'));\n      }));\n      return void 0;\n    }\n    return this._404(http);\n  }\n\n  /*\n   * @locus Server\n   * @memberOf FilesCollection\n   * @name serve\n   * @param {Object} http    - Server HTTP object\n   * @param {Object} fileRef - Requested file Object\n   * @param {Object} vRef    - Requested file version Object\n   * @param {String} version - Requested file version\n   * @param {stream.Readable|null} readableStream - Readable stream, which serves binary file data\n   * @param {String} responseType - Response code\n   * @param {Boolean} force200 - Force 200 response code over 206\n   * @summary Handle and reply to incoming request\n   * @returns {undefined}\n   */\n  serve(http, fileRef, vRef, version = 'original', readableStream = null, _responseType = '200', force200 = false) {\n    let partiral = false;\n    let reqRange = false;\n    let dispositionType = '';\n    let start;\n    let end;\n    let take;\n    let responseType = _responseType;\n\n    if (http.params.query.download && (http.params.query.download === 'true')) {\n      dispositionType = 'attachment; ';\n    } else {\n      dispositionType = 'inline; ';\n    }\n\n    const dispositionName = `filename=\\\"${encodeURI(vRef.name || fileRef.name).replace(/\\,/g, '%2C')}\\\"; filename*=UTF-8''${encodeURIComponent(vRef.name || fileRef.name)}; `;\n    const dispositionEncoding = 'charset=UTF-8';\n\n    if (!http.response.headersSent) {\n      http.response.setHeader('Content-Disposition', dispositionType + dispositionName + dispositionEncoding);\n    }\n\n    if (http.request.headers.range && !force200) {\n      partiral = true;\n      const array = http.request.headers.range.split(/bytes=([0-9]*)-([0-9]*)/);\n      start = parseInt(array[1]);\n      end = parseInt(array[2]);\n      if (isNaN(end)) {\n        end = vRef.size - 1;\n      }\n      take = end - start;\n    } else {\n      start = 0;\n      end = vRef.size - 1;\n      take = vRef.size;\n    }\n\n    if (partiral || (http.params.query.play && (http.params.query.play === 'true'))) {\n      reqRange = {start, end};\n      if (isNaN(start) && !isNaN(end)) {\n        reqRange.start = end - take;\n        reqRange.end   = end;\n      }\n      if (!isNaN(start) && isNaN(end)) {\n        reqRange.start = start;\n        reqRange.end   = start + take;\n      }\n\n      if ((start + take) >= vRef.size) {\n        reqRange.end = vRef.size - 1;\n      }\n\n      if (this.strict && ((reqRange.start >= (vRef.size - 1)) || (reqRange.end > (vRef.size - 1)))) {\n        responseType = '416';\n      } else {\n        responseType = '206';\n      }\n    } else {\n      responseType = '200';\n    }\n\n    const streamErrorHandler = (error) => {\n      this._debug(`[FilesCollection] [serve(${vRef.path}, ${version})] [500]`, error);\n      if (!http.response.finished) {\n        http.response.end(error.toString());\n      }\n    };\n\n    const headers = helpers.isFunction(this.responseHeaders) ? this.responseHeaders(responseType, fileRef, vRef, version, http) : this.responseHeaders;\n\n    if (!headers['Cache-Control']) {\n      if (!http.response.headersSent) {\n        http.response.setHeader('Cache-Control', this.cacheControl);\n      }\n    }\n\n    for (let key in headers) {\n      if (!http.response.headersSent) {\n        http.response.setHeader(key, headers[key]);\n      }\n    }\n\n    const respond = (stream, code) => {\n      stream._isEnded = false;\n      const closeStreamCb = (closeError) => {\n        if (!closeError) {\n          stream._isEnded = true;\n        } else {\n          this._debug(`[FilesCollection] [serve(${vRef.path}, ${version})] [respond] [closeStreamCb] Error:`, closeError);\n        }\n      };\n\n      const closeStream = () => {\n        if (!stream._isEnded) {\n          if (typeof stream.close === 'function') {\n            stream.close(closeStreamCb);\n          } else if (typeof stream.end === 'function') {\n            stream.end(closeStreamCb);\n          } else if (typeof stream.destroy === 'function') {\n            stream.destroy('Got to close this stream', closeStreamCb);\n          }\n        }\n      };\n\n      if (!http.response.headersSent && readableStream) {\n        http.response.writeHead(code);\n      }\n\n      http.response.on('close', closeStream);\n      http.request.on('aborted', () => {\n        http.request.aborted = true;\n        closeStream();\n      });\n\n      stream.on('open', () => {\n        if (!http.response.headersSent) {\n          http.response.writeHead(code);\n        }\n      }).on('abort', () => {\n        closeStream();\n        if (!http.response.finished) {\n          http.response.end();\n        }\n        if (!http.request.aborted) {\n          http.request.destroy();\n        }\n      }).on('error', (err) => {\n        closeStream();\n        streamErrorHandler(err);\n      }).on('end', () => {\n        closeStream();\n        if (!http.response.finished) {\n          http.response.end();\n        }\n      }).pipe(http.response);\n    };\n\n    switch (responseType) {\n    case '400':\n      this._debug(`[FilesCollection] [serve(${vRef.path}, ${version})] [400] Content-Length mismatch!`);\n      var text = 'Content-Length mismatch!';\n\n      if (!http.response.headersSent) {\n        http.response.writeHead(400, {\n          'Content-Type': 'text/plain',\n          'Content-Length': text.length\n        });\n      }\n\n      if (!http.response.finished) {\n        http.response.end(text);\n      }\n      break;\n    case '404':\n      this._404(http);\n      break;\n    case '416':\n      this._debug(`[FilesCollection] [serve(${vRef.path}, ${version})] [416] Content-Range is not specified!`);\n      if (!http.response.headersSent) {\n        http.response.writeHead(416);\n      }\n      if (!http.response.finished) {\n        http.response.end();\n      }\n      break;\n    case '206':\n      this._debug(`[FilesCollection] [serve(${vRef.path}, ${version})] [206]`);\n      if (!http.response.headersSent) {\n        http.response.setHeader('Content-Range', `bytes ${reqRange.start}-${reqRange.end}/${vRef.size}`);\n      }\n      respond(readableStream || fs.createReadStream(vRef.path, {start: reqRange.start, end: reqRange.end}), 206);\n      break;\n    default:\n      if (!http.response.headersSent) {\n        http.response.setHeader('Content-Length', `${vRef.size}`);\n      }\n      this._debug(`[FilesCollection] [serve(${vRef.path}, ${version})] [200]`);\n      respond(readableStream || fs.createReadStream(vRef.path), 200);\n      break;\n    }\n  }\n}\n"]},"sourceType":"module","hash":"78a0542bb1c8fa9c6e73b8db7e8dcf4a0ef61029"}
