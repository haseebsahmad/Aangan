{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\imports\\api\\plots.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/api/plots.js","filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\imports\\api\\plots.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","root":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.15.3","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\Haseeb\\Desktop\\firstReact\\myapp\\imports\\api\\plots.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/plots.js"}},"code":"var _regeneratorRuntime;\n\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nmodule.export({\n  Plots: function () {\n    return Plots;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar Plots = new Mongo.Collection('plots');\n\n// export const UserPlotBookings = new Mongo.Collection('userPlotBookings');\nif (Meteor.isServer) {\n  // This code only runs on the server\n  var today = new Date();\n  Meteor.publish('plots', function () {\n    return Plots.find({}); //{\n    //   fields: {\n    //     bookings: 0\n    //   }\n    // });\n  }); // Meteor.publish('plotsBookings', () => {\n  //   return Plots.find({\n  //     owner: Meteor.userId()\n  //   });\n  //   });\n  // Meteor.publish('userPlotBookings', () => {\n  //   return UserPlotBookings.find({\n  //     customer: Meteor.userId()\n  //   });\n  //   });\n}\n\nMeteor.methods({\n  'plots.findOne': function (plotId) {\n    return Plots.findOne({\n      _id: new Mongo.ObjectID(plotId)\n    });\n  },\n  'plots.insert': function (plot, image) {\n    // check(plot.destination, String);\n    // check(cost, Int);\n    // check(startDate, Date);\n    // check(endDate, Date);\n    // check(plot.departure, String);\n    // check(plot.destinationInformation, String);\n    // Make sure the user is logged in before inserting a plot\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    if (!Roles.userIsInRole(this.userId, 'company')) {\n      throw new Meteor.Error('not-authorized');\n    } // console.log(\"company\", Meteor.user({\"_id\":this.userId}))\n\n\n    if (!plot.phone) {\n      plot.phone = Meteor.users.findOne({\n        _id: Meteor.userId()\n      }).phone;\n    }\n\n    if (!plot.cnic) {\n      plot.cnic = Meteor.users.findOne({\n        _id: Meteor.userId()\n      }).cnic;\n    }\n\n    console.log(\"imgaessss: \", plot.images.length);\n    var imagesNames = [];\n\n    var fs = require('fs');\n\n    var startpath = \"/Users/yusrakhalid/Desktop/Disk/Projects/Aangan/public/uploads/\";\n\n    for (var i = 0; i < plot.images.length; i++) {\n      imagesNames.push(plot.images[i].name);\n    }\n\n    Plots.insert({\n      size: plot.size,\n      createdAt: new Date(),\n      owner: this.userId,\n      company: Meteor.user({\n        \"_id\": this.userId\n      }).company,\n      phone: plot.phone,\n      constructionDate: plot.constructionDate,\n      cnic: plot.cnic,\n      city: plot.city,\n      location: plot.location,\n      image: image,\n      type: plot.type,\n      price: plot.price,\n      detail: plot.detail,\n      purpose: plot.purpose,\n      images: imagesNames\n    }, function (err, id) {\n      var dir = startpath + id;\n      console.log(\"id\", id, startpath, startpath + id);\n\n      if (!fs.existsSync(dir)) {\n        fs.mkdirSync(dir);\n      }\n\n      function savefile(i, arr) {\n        var imageBuffer, path;\n        return _regeneratorRuntime.async(function () {\n          function savefile$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(i >= plot.images.length)) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", arr);\n\n                case 2:\n                  console.log(i, plot.images[i].name);\n                  imageBuffer = Buffer.from(plot.images[i].data.split(',')[1], 'base64'); //console = <Buffer 75 ab 5a 8a ...\n\n                  path = dir + '/' + plot.images[i].name; // change path\n\n                  fs.writeFile(path, imageBuffer, function (err) {\n                    // throws an error, you could also catch it here\n                    if (err) throw err; // success case, the file was saved\n\n                    arr.push(path);\n                    savefile(i + 1, arr);\n                  });\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }\n\n          return savefile$;\n        }(), null, null, null, Promise);\n      }\n\n      savefile(0, []);\n    });\n  },\n  'plots.remove': function (plotId) {\n    check(plotId, String);\n    var plot = Plots.findOne(plotId);\n\n    if (plot.owner !== this.userId) {\n      // make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Plots.remove(plotId);\n  },\n  'plot.companyPhone': function (id) {\n    return Meteor.users.findOne({\n      _id: id\n    }).phone;\n  },\n  // 'plots.book'(plotId, seats){\n  //   if (Roles.userIsInRole(Meteor.userId(), 'customer')){\n  //     const customer = Meteor.users.findOne({_id: Meteor.userId()});\n  //     const plot = Plots.findOne(plotId);\n  //     var bookings = [];\n  //     console.log(\"prev bookings: \", plot.bookings)\n  //     if (plot.bookings){\n  //       bookings = plot.bookings;\n  //       totalSeats = seats + plot.seats;\n  //     }\n  //     const prev = UserPlotBookings.findOne({customer: Meteor.userId(), plot_id: plotId});\n  //     if (prev){\n  //       var index = 0;\n  //       for (var i = 0; i < bookings.length; i++){\n  //         if (bookings[i].customer_id == Meteor.userId()){\n  //           index = i;\n  //         }\n  //       }\n  //       const prev_booking = bookings.splice(index,1);\n  //       seats = seats + parseInt(prev.seats);\n  //       console.log(\"New seats: \", seats);\n  //       UserPlotBookings.remove({_id:prev._id});\n  //     }\n  //     bookings.push({\n  //       customer_id: customer._id,\n  //       customer_name: customer.name,\n  //       customer_phone: customer.phone,\n  //       seats: seats,\n  //     });\n  //     console.log(\"Search booking: \", bookings);\n  //     if (!customer.phone){\n  //       throw new Meteor.Error('not-registered', \"Phone not found\");\n  //       // this.props.history.push('/SignupCustomer');\n  //     }\n  //     console.log(\"Bookings\", bookings);\n  //     Plots.update(plotId, { $set: { bookings: bookings , seats: totalSeats} });\n  //     UserPlotBookings.insert({\n  //       customer: Meteor.userId(),\n  //       plot_id: plotId,\n  //       plot_name: plot.destination,\n  //       plot_startDate: plot.startDate,\n  //       seats: seats\n  //     })\n  //     console.log(\"booked: \", Plots.findOne(plotId));\n  //     return (\"Booked\");\n  //   }\n  //   else{\n  //     throw new Meteor.Error('not-authorized');\n  //   }\n  // },\n  // 'plot.removeBooking'(bookingId){\n  //   const booking = UserPlotBookings.findOne({_id:bookingId});\n  //   const plot = Plots.findOne(booking.plot_id);\n  //   var bookings = plot.bookings;\n  //   var index = 0;\n  //   for (var i = 0; i < bookings.length; i++){\n  //     if (bookings[i].customer_id == Meteor.userId()){\n  //       index = i;\n  //     }\n  //   }\n  //   const prev_booking = bookings.splice(index,1);\n  //   totalSeats = plot.seats - booking.seats;\n  //   Plots.update(plot._id, { $set: { bookings: bookings , seats: totalSeats} });\n  //   UserPlotBookings.remove({_id:bookingId});\n  // }\n  // ,\n  'plots.search': function (search) {\n    // console.log('plotsearch: ', search);\n    // if (!search.location){\n    //   search.location = {$ne: \"\"};\n    // }\n    // var https = require('follow-redirects').https;\n    // var options = {\n    //   'method': 'POST',\n    //   'hostname': 'api.sms.to',\n    //   'path': '/sms/send',\n    //   'headers': {\n    //     'Content-Type': 'application/json',\n    //     'Authorization': 'Bearer <YOUR_API_KEY_OR_ACCESS_TOKEN>'\n    //   },\n    //   'maxRedirects': 20\n    // };\n    // var req = https.request(options, function (res) {\n    //   var chunks = [];\n    //   res.on(\"data\", function (chunk) {\n    //     chunks.push(chunk);\n    //   });\n    //   res.on(\"end\", function (chunk) {\n    //     var body = Buffer.concat(chunks);\n    //     console.log(body.toString());\n    //   });\n    //   res.on(\"error\", function (error) {\n    //     console.error(error);\n    //   });\n    // });\n    // var postData =  \"{\\n    \\\"messages\\\": [\\n        {\\n            \\\"message\\\": \\\"This is a test message\\\",\\n            \\\"to\\\": \\\"+35799999999999\\\"\\n        }\\n    ],\\n    \\\"sender_id\\\": \\\"SMSto\\\",\\n    \\\"callback_url\\\": \\\"https://example.com/callback/handler\\\"\\n}\";\n    // req.write(postData);\n    // req.end();\n    // const data = {\n    //   username: \"92339773430\",\n    //   sender:\"AanganAPI\",\n    //   mobile: \"923489773430\",\n    //   message: \"Test\"\n    // }\n    // https://secure.h3techs.com/sms/api/send?email=yusra.khalid@outlook.com&key=07becd247c2a4f4fe502f23cd5987624fe&mask=H3 TEST SMS&to=923151231015&message=Test Message\n    // var response = HTTP.post(\"https://secure.h3techs.com/sms/api/send?email=yusra.khalid@outlook.com&key=07becd247c2a4f4fe502f23cd5987624fe&mask=H3 TEST SMS&to=923345005652&message=This is the test sms sent by aangan to Sir Abdullah Awan\");\n    // // var response = HTTP.post(\"https://sendpk.com/api/sms.php?api_key=923229773430-d6956b96-1790-4c9b-9354-3f5f0d895901&sender=8987&mobile=923229773430&message=5782\");\n    //   console.log(response);\n    if (!search.sizeMin) {\n      search.sizeMin = 0;\n    }\n\n    if (!search.sizeMax) {\n      search.sizeMax = 999999999;\n    }\n\n    if (!search.city) {\n      search.city = {\n        $ne: \"\"\n      };\n    }\n\n    if (!search.type) {\n      search.type = {\n        $ne: \"\"\n      };\n    }\n\n    if (!search.purpose) {\n      search.type = {\n        $ne: \"\"\n      };\n    }\n\n    console.log('plotsearch: ', search);\n\n    if (!search.constructionDate) {\n      // console.log(\"New search: \",Plots.find({ purpose:search.purpose, size:{ $lte:search.sizeMax }, size:{ $gte:search.sizeMin }, city:search.city, type:search.type, price: { $lte: search.price }}).fetch());\n      return Plots.find({\n        purpose: search.purpose,\n        size: {\n          $lte: search.sizeMax\n        },\n        size: {\n          $gte: search.sizeMin\n        },\n        city: search.city,\n        type: search.type,\n        price: {\n          $lte: search.price\n        }\n      }).fetch();\n    } else {\n      // console.log(\"New search: \",  Plots.find({ purpose:search.purpose, size:{ $lte:search.sizeMax }, size:{ $gte:search.sizeMin }, city:search.city, type:search.type, price: { $lte: search.price }, constructionDate: {$gte: search.constructionDate}}).fetch());\n      return Plots.find({\n        purpose: search.purpose,\n        size: {\n          $lte: search.sizeMax\n        },\n        size: {\n          $gte: search.sizeMin\n        },\n        city: search.city,\n        type: search.type,\n        price: {\n          $lte: search.price\n        },\n        constructionDate: {\n          $gte: search.constructionDate\n        }\n      }).fetch();\n    }\n  } // 'plots.price'(){\n  //   const plot = Plots.findOne({_id:\"ktvtjYGj7frscoztP\"});\n  //   console.log(\"Hunza  : \", plot);\n  //   console.log(\"Date: \", plot.startDate);\n  //   plot.startDate = '2020-8-25';\n  //   console.log(\"Date: \", plot.startDate);\n  //   // const priceint = parseInt(Plots.findOne({_id:id}).price);\n  //   // console.log(\"Price: \", priceint, typeof(priceint));\n  //   Plots.update(\"ktvtjYGj7frscoztP\", { $set: { startDate: '2020-08-25', endDate: '2020-08-30' } });\n  // }\n\n});","map":{"version":3,"sources":["imports/api/plots.js"],"names":["_regeneratorRuntime","module","link","default","v","export","Plots","Meteor","Mongo","check","Collection","isServer","today","Date","publish","find","methods","plotId","findOne","_id","ObjectID","plot","image","userId","Error","Roles","userIsInRole","phone","users","cnic","console","log","images","length","imagesNames","fs","require","startpath","i","push","name","insert","size","createdAt","owner","company","user","constructionDate","city","location","type","price","detail","purpose","err","id","dir","existsSync","mkdirSync","savefile","arr","imageBuffer","Buffer","from","data","split","path","writeFile","String","remove","search","sizeMin","sizeMax","$ne","$lte","$gte","fetch"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n// import {FileAPI} from 'file-api';\n\nexport const Plots = new Mongo.Collection('plots');\n// export const UserPlotBookings = new Mongo.Collection('userPlotBookings');\n\nif (Meteor.isServer) {\n    // This code only runs on the server\n    const today = new Date();\n  Meteor.publish('plots', () => {\n    return Plots.find({});\n      //{\n    //   fields: {\n    //     bookings: 0\n    //   }\n    // });\n  });\n    // Meteor.publish('plotsBookings', () => {\n    //   return Plots.find({\n    //     owner: Meteor.userId()\n    //   });\n    //   });\n    // Meteor.publish('userPlotBookings', () => {\n    //   return UserPlotBookings.find({\n    //     customer: Meteor.userId()\n    //   });\n    //   });\n}\n   \nMeteor.methods({\n\n    'plots.findOne'(plotId){\n      return (Plots.findOne({_id: new Mongo.ObjectID(plotId)}));\n    },\n    \n    'plots.insert'(plot, image) {\n      // check(plot.destination, String);\n      // check(cost, Int);\n      // check(startDate, Date);\n      // check(endDate, Date);\n      // check(plot.departure, String);\n      // check(plot.destinationInformation, String);\n      // Make sure the user is logged in before inserting a plot\n      if (! this.userId) {\n        throw new Meteor.Error('not-authorized');\n      }\n      if (! Roles.userIsInRole(this.userId, 'company')){\n        throw new Meteor.Error('not-authorized');\n      }\n      // console.log(\"company\", Meteor.user({\"_id\":this.userId}))\n      if (!plot.phone){\n        plot.phone = Meteor.users.findOne({_id: Meteor.userId()}).phone;\n      }\n      if (!plot.cnic){\n        plot.cnic = Meteor.users.findOne({_id: Meteor.userId()}).cnic;\n      }\n      console.log(\"imgaessss: \", plot.images.length);    \n      var imagesNames = [];\n      var fs = require('fs');\n      const startpath = \"/Users/yusrakhalid/Desktop/Disk/Projects/Aangan/public/uploads/\";\n      for(var i = 0; i < plot.images.length;i++){\n        imagesNames.push(plot.images[i].name);\n      }\n      Plots.insert({\n        size: plot.size,\n        createdAt: new Date(),\n        owner: this.userId,\n        company: Meteor.user({\"_id\":this.userId}).company,\n        phone: plot.phone,\n        constructionDate: plot.constructionDate,\n        cnic: plot.cnic,\n        city: plot.city,\n        location: plot.location,\n        image: image,\n        type: plot.type,\n        price: plot.price,\n        detail: plot.detail,\n        purpose:plot.purpose,\n        images:imagesNames,\n      },function (err,id){\n        var dir = startpath+id;\n        console.log(\"id\", id, startpath, startpath+id);\n          if (!fs.existsSync(dir)){\n              fs.mkdirSync(dir);\n          }\n          async function savefile(i, arr){\n            if (i>=plot.images.length){\n              return arr;\n            }\n            console.log(i,plot.images[i].name);\n            var imageBuffer = Buffer.from(plot.images[i].data.split(',')[1], 'base64'); //console = <Buffer 75 ab 5a 8a ...\n            var path = dir+'/'+plot.images[i].name; // change path\n            fs.writeFile(path, imageBuffer, (err) => { \n              // throws an error, you could also catch it here\n              if (err) throw err;\n              // success case, the file was saved\n              arr.push(path);\n              savefile(i+1,arr);\n            });\n          }\n          savefile(0, []);\n      });\n    },\n\n    'plots.remove'(plotId) {\n      check(plotId, String);\n      const plot = Plots.findOne(plotId);\n      if (plot.owner !== this.userId) {\n        // make sure only the owner can delete it\n        throw new Meteor.Error('not-authorized');\n      }\n      Plots.remove(plotId);\n    },\n\n    'plot.companyPhone'(id){\n      return (\n        Meteor.users.findOne({_id: id}).phone\n      )\n    },\n\n\n    // 'plots.book'(plotId, seats){\n    //   if (Roles.userIsInRole(Meteor.userId(), 'customer')){\n    //     const customer = Meteor.users.findOne({_id: Meteor.userId()});\n    //     const plot = Plots.findOne(plotId);\n    //     var bookings = [];\n    //     console.log(\"prev bookings: \", plot.bookings)\n    //     if (plot.bookings){\n    //       bookings = plot.bookings;\n    //       totalSeats = seats + plot.seats;\n    //     }\n    //     const prev = UserPlotBookings.findOne({customer: Meteor.userId(), plot_id: plotId});\n    //     if (prev){\n    //       var index = 0;\n    //       for (var i = 0; i < bookings.length; i++){\n    //         if (bookings[i].customer_id == Meteor.userId()){\n    //           index = i;\n    //         }\n    //       }\n    //       const prev_booking = bookings.splice(index,1);\n    //       seats = seats + parseInt(prev.seats);\n    //       console.log(\"New seats: \", seats);\n    //       UserPlotBookings.remove({_id:prev._id});\n    //     }\n    //     bookings.push({\n    //       customer_id: customer._id,\n    //       customer_name: customer.name,\n    //       customer_phone: customer.phone,\n    //       seats: seats,\n    //     });\n    //     console.log(\"Search booking: \", bookings);\n    //     if (!customer.phone){\n    //       throw new Meteor.Error('not-registered', \"Phone not found\");\n    //       // this.props.history.push('/SignupCustomer');\n    //     }\n    //     console.log(\"Bookings\", bookings);\n    //     Plots.update(plotId, { $set: { bookings: bookings , seats: totalSeats} });\n    //     UserPlotBookings.insert({\n    //       customer: Meteor.userId(),\n    //       plot_id: plotId,\n    //       plot_name: plot.destination,\n    //       plot_startDate: plot.startDate,\n    //       seats: seats\n    //     })\n    //     console.log(\"booked: \", Plots.findOne(plotId));\n    //     return (\"Booked\");\n    //   }\n    //   else{\n    //     throw new Meteor.Error('not-authorized');\n    //   }\n    // },\n\n    // 'plot.removeBooking'(bookingId){\n    //   const booking = UserPlotBookings.findOne({_id:bookingId});\n    //   const plot = Plots.findOne(booking.plot_id);\n    //   var bookings = plot.bookings;\n    //   var index = 0;\n    //   for (var i = 0; i < bookings.length; i++){\n    //     if (bookings[i].customer_id == Meteor.userId()){\n    //       index = i;\n    //     }\n    //   }\n    //   const prev_booking = bookings.splice(index,1);\n    //   totalSeats = plot.seats - booking.seats;\n    //   Plots.update(plot._id, { $set: { bookings: bookings , seats: totalSeats} });\n    //   UserPlotBookings.remove({_id:bookingId});\n    // }\n    // ,\n\n    'plots.search'(search){\n      // console.log('plotsearch: ', search);\n      // if (!search.location){\n      //   search.location = {$ne: \"\"};\n      // }\n      // var https = require('follow-redirects').https;\n      // var options = {\n      //   'method': 'POST',\n      //   'hostname': 'api.sms.to',\n      //   'path': '/sms/send',\n      //   'headers': {\n      //     'Content-Type': 'application/json',\n      //     'Authorization': 'Bearer <YOUR_API_KEY_OR_ACCESS_TOKEN>'\n      //   },\n      //   'maxRedirects': 20\n      // };\n\n      // var req = https.request(options, function (res) {\n      //   var chunks = [];\n\n      //   res.on(\"data\", function (chunk) {\n      //     chunks.push(chunk);\n      //   });\n\n      //   res.on(\"end\", function (chunk) {\n      //     var body = Buffer.concat(chunks);\n      //     console.log(body.toString());\n      //   });\n\n      //   res.on(\"error\", function (error) {\n      //     console.error(error);\n      //   });\n      // });\n\n      // var postData =  \"{\\n    \\\"messages\\\": [\\n        {\\n            \\\"message\\\": \\\"This is a test message\\\",\\n            \\\"to\\\": \\\"+35799999999999\\\"\\n        }\\n    ],\\n    \\\"sender_id\\\": \\\"SMSto\\\",\\n    \\\"callback_url\\\": \\\"https://example.com/callback/handler\\\"\\n}\";\n\n      // req.write(postData);\n\n      // req.end();\n      // const data = {\n      //   username: \"92339773430\",\n      //   sender:\"AanganAPI\",\n      //   mobile: \"923489773430\",\n      //   message: \"Test\"\n      // }\n      // https://secure.h3techs.com/sms/api/send?email=yusra.khalid@outlook.com&key=07becd247c2a4f4fe502f23cd5987624fe&mask=H3 TEST SMS&to=923151231015&message=Test Message\n      // var response = HTTP.post(\"https://secure.h3techs.com/sms/api/send?email=yusra.khalid@outlook.com&key=07becd247c2a4f4fe502f23cd5987624fe&mask=H3 TEST SMS&to=923345005652&message=This is the test sms sent by aangan to Sir Abdullah Awan\");\n      // // var response = HTTP.post(\"https://sendpk.com/api/sms.php?api_key=923229773430-d6956b96-1790-4c9b-9354-3f5f0d895901&sender=8987&mobile=923229773430&message=5782\");\n      //   console.log(response);\n      if (!search.sizeMin){\n        search.sizeMin = 0;\n      }\n      if (!search.sizeMax){\n        search.sizeMax = 999999999;\n      }\n      if (!search.city){\n        search.city = {$ne: \"\"};\n      }\n      if (!search.type){\n        search.type = {$ne: \"\"};\n      }\n      if (!search.purpose){\n        search.type = {$ne: \"\"};\n      }\n      console.log('plotsearch: ', search);\n      if (!search.constructionDate){\n        // console.log(\"New search: \",Plots.find({ purpose:search.purpose, size:{ $lte:search.sizeMax }, size:{ $gte:search.sizeMin }, city:search.city, type:search.type, price: { $lte: search.price }}).fetch());\n        return Plots.find({ purpose:search.purpose, size:{ $lte:search.sizeMax }, size:{ $gte:search.sizeMin }, city:search.city, type:search.type, price: { $lte: search.price }}).fetch();\n      }\n      else{\n        // console.log(\"New search: \",  Plots.find({ purpose:search.purpose, size:{ $lte:search.sizeMax }, size:{ $gte:search.sizeMin }, city:search.city, type:search.type, price: { $lte: search.price }, constructionDate: {$gte: search.constructionDate}}).fetch());\n        return Plots.find({ purpose:search.purpose, size:{ $lte:search.sizeMax }, size:{ $gte:search.sizeMin }, city:search.city, type:search.type, price: { $lte: search.price }, constructionDate: {$gte: search.constructionDate}}).fetch();\n      }\n    },\n\n    // 'plots.price'(){\n    //   const plot = Plots.findOne({_id:\"ktvtjYGj7frscoztP\"});\n    //   console.log(\"Hunza  : \", plot);\n    //   console.log(\"Date: \", plot.startDate);\n    //   plot.startDate = '2020-8-25';\n    //   console.log(\"Date: \", plot.startDate);\n    //   // const priceint = parseInt(Plots.findOne({_id:id}).price);\n    //   // console.log(\"Price: \", priceint, typeof(priceint));\n\n    //   Plots.update(\"ktvtjYGj7frscoztP\", { $set: { startDate: '2020-08-25', endDate: '2020-08-30' } });\n    // }\n\n\n  });"]},"sourceType":"module","hash":"d66a94c8b746e0bffdac8a45ec9384b61ef8305d"}
